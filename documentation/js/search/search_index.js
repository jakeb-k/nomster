var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.438,1,1.124]],["body/components/AppComponent.html",[0,0.702,1,1.927,2,1.901,3,0.185,4,0.185,5,1.5,6,1.5,7,1.5,8,1.5,9,0.159,10,3.125,11,1.5,12,2.878,13,2.676,14,3.08,15,2.021,16,5.593,17,2.021,18,4.945,19,0.694,20,1.123,21,5.593,22,1.592,23,3.429,24,5.985,25,5.985,26,1.182,27,2.286,28,2.604,29,5.593,30,3.727,31,1.528,32,4.945,33,1.182,34,0.023,35,1.428,36,0.935,37,1.115,38,2.295,39,3.67,40,1.592,41,3.67,42,1.329,43,1.329,44,0.641,45,0.361,46,2.286,47,3.125,48,3.67,49,3.125,50,3.125,51,0.185,52,0.393,53,1.253,54,1.597,55,3.67,56,2.84,57,3.67,58,3.67,59,3.67,60,3.67,61,4.945,62,3.67,63,3.67,64,3.125,65,3.67,66,3.67,67,3.67,68,3.125,69,0.833,70,2.021,71,2.021,72,1.5,73,2.446,74,1.5,75,1.5,76,1.182,77,1.5,78,1.115,79,1.5,80,1.115,81,1.5,82,1.182,83,1.5,84,1.115,85,1.5,86,1.115,87,1.5,88,1.182,89,1.115,90,1.5,91,1.115,92,1.5,93,1.115,94,1.253,95,1.5,96,1.115,97,1.5,98,1.182,99,1.329,100,1.052,101,1.5,102,1.5,103,1.5,104,0.015,105,0.015]],["title/modules/AppModule.html",[106,0.543,107,2.377]],["body/modules/AppModule.html",[1,2.308,3,0.226,4,0.226,9,0.194,13,1.723,34,0.023,44,0.739,45,0.44,51,0.226,52,0.48,69,1.017,104,0.017,105,0.017,106,0.697,107,4.793,108,1.079,109,1.723,110,2.68,111,2.68,112,2.45,113,1.213,114,3.816,115,3.816,116,3.816,117,3.816,118,4.232,119,2.45,120,1.95,121,1.443,122,4.481,123,1.615,124,1.615,125,5.632,126,3.816,127,3.379,128,5.632,129,1.144,130,2.08,131,5.632,132,1.723,133,5.632,134,3.379,135,4.481,136,2.225,137,4.481,138,4.481,139,4.481]],["title/modules/AppRoutingModule.html",[106,0.543,118,2.173]],["body/modules/AppRoutingModule.html",[3,0.216,4,0.216,9,0.185,34,0.023,44,0.586,45,0.421,51,0.216,52,0.458,94,1.461,104,0.017,105,0.017,108,1.031,113,1.158,118,3.407,123,1.227,124,1.569,129,1.093,140,4.279,141,2.125,142,5.47,143,2.716,144,2.464,145,1.55,146,2.825,147,4.125,148,6.827,149,4.279,150,6.827,151,4.279,152,4.279,153,4.279,154,4.279,155,4.279,156,4.279,157,4.279,158,2.915,159,4.279,160,4.279,161,2.458,162,4.279,163,4.279,164,2.125,165,4.279,166,2.665,167,4.279,168,4.279,169,1.986,170,4.279,171,4.279,172,4.279,173,4.279,174,4.279,175,4.279,176,4.279]],["title/injectables/DatabaseService.html",[28,1.518,177,1.62]],["body/injectables/DatabaseService.html",[3,0.064,4,0.064,9,0.055,14,0.786,19,0.239,20,0.491,22,0.697,23,3.545,26,0.915,28,0.942,31,1.602,33,1.423,34,0.023,35,1.633,36,1.056,37,1.48,38,2.911,40,2.047,42,1.601,43,1.372,44,0.443,45,0.124,51,0.064,52,0.135,54,2.473,56,3.445,99,1.22,100,0.362,104,0.007,105,0.007,145,2.341,161,2.678,169,2.718,177,1.005,178,0.786,179,0.952,180,1.935,181,2.841,182,3.647,183,4.523,184,4.42,185,5.584,186,3.368,187,1.844,188,2.165,189,2.165,190,2.165,191,2.165,192,3.368,193,3.368,194,2.868,195,3.368,196,3.368,197,3.368,198,3.368,199,2.868,200,3.368,201,3.368,202,2.165,203,2.165,204,2.165,205,3.363,206,1.263,207,2.539,208,2.374,209,2.975,210,2.539,211,1.918,212,4.663,213,3.368,214,3.368,215,2.165,216,3.368,217,1.084,218,1.934,219,3.368,220,3.516,221,3.972,222,4.656,223,3.694,224,2.165,225,1.263,226,1.263,227,1.754,228,1.263,229,2.165,230,1.263,231,1.934,232,2,233,3.809,234,2.165,235,1.263,236,2.165,237,1.263,238,1.263,239,3.176,240,4.21,241,4.42,242,3.52,243,2.142,244,1.263,245,3.548,246,3.727,247,4.303,248,4.169,249,1.263,250,1.263,251,1.263,252,1.263,253,1.075,254,1.474,255,1.844,256,2.165,257,1.632,258,1.844,259,1.263,260,2.374,261,3.52,262,1.263,263,1.263,264,1.263,265,2.165,266,1.935,267,0.621,268,1.263,269,1.263,270,1.263,271,1.263,272,2.868,273,2.165,274,1.263,275,1.263,276,0.86,277,1.263,278,1.075,279,0.952,280,0.952,281,1.075,282,0.952,283,0.952,284,1.632,285,1.075,286,0.86,287,1.075,288,0.952,289,3.368,290,3.368,291,3.368,292,1.263,293,0.86,294,0.952,295,2.165,296,1.263,297,1.348,298,1.263,299,0.952,300,1.263,301,1.263,302,2.097,303,2.841,304,3.972,305,1.263,306,2.142,307,2.841,308,4.133,309,2.42,310,1.935,311,2.165,312,2.315,313,4.149,314,2.868,315,1.934,316,2.294,317,2.868,318,1.672,319,1.263,320,2.294,321,0.832,322,1.263,323,0.86,324,0.86,325,1.263,326,1.263,327,1.075,328,1.263,329,1.263,330,1.263,331,2.841,332,2.841,333,1.075,334,2.821,335,0.725,336,1.293,337,2.42,338,1.77,339,2.678,340,3.765,341,1.934,342,2.691,343,3.972,344,2.165,345,2.165,346,2.165,347,2.165,348,2.165,349,3.368,350,2.165,351,3.368,352,2.165,353,1.844,354,1.005,355,3.368,356,1.844,357,4.133,358,2.165,359,2.165,360,4.133,361,2.678,362,2.868,363,3.368,364,1.844,365,1.844,366,1.348,367,2.868,368,1.263,369,2.868,370,2.868,371,2.539,372,2.868,373,1.075,374,2.42,375,1.263,376,0.952,377,1.263,378,1.844,379,1.075,380,0.952,381,1.263,382,1.263,383,1.263,384,1.263,385,1.263,386,1.263,387,2.841,388,1.075,389,0.952,390,1.263]],["title/interfaces/Favourite.html",[205,2.004,391,1.06]],["body/interfaces/Favourite.html",[3,0.222,4,0.222,9,0.19,19,0.832,20,1.264,31,1.124,34,0.022,35,1.639,36,1.299,51,0.222,89,2.055,104,0.017,105,0.017,180,2.997,205,3.992,211,2.042,227,2.226,232,1.856,267,1.752,302,2.74,314,5.202,315,3.687,316,4.372,317,5.467,318,3.287,391,1.337,392,2.184,393,3.747,394,2.042,395,3.747,396,3.803,397,3.747,398,3.747,399,4.4,400,4.4,401,5.467,402,3.747,403,3.318,404,2.835,405,2.527]],["title/components/FavouriteComponent.html",[0,0.438,76,1.124]],["body/components/FavouriteComponent.html",[0,0.683,1,0.824,2,1.471,3,0.129,4,0.129,5,1.046,6,1.046,7,1.046,8,1.046,9,0.111,11,1.046,12,2.716,13,2.436,15,1.564,17,1.564,19,0.484,22,1.232,23,2.441,26,0.824,27,1.594,28,2.485,31,1.39,33,1.476,34,0.023,35,1.39,36,0.962,37,1.392,38,2.747,40,1.476,44,0.545,45,0.252,51,0.129,52,0.274,53,0.874,54,1.113,69,0.581,70,1.564,71,1.564,72,1.046,73,2.078,74,1.046,75,1.046,76,1.637,77,1.046,78,0.778,79,1.046,80,0.778,81,1.046,82,0.824,83,1.046,84,0.778,85,1.046,86,0.778,87,1.046,88,0.824,89,0.778,90,1.046,91,0.778,92,1.046,93,0.778,94,0.874,95,1.046,96,0.778,97,1.046,98,0.824,99,0.927,100,0.734,101,1.046,102,1.046,103,1.046,104,0.012,105,0.012,129,0.653,164,2.275,205,3.782,209,2.9,211,1.776,217,1.476,231,2.197,232,1.545,253,1.899,267,1.097,312,1.27,336,1.736,394,1.776,404,1.776,406,2.179,407,1.665,408,1.994,409,4.582,410,3.826,411,3.258,412,2.212,413,2.885,414,2.606,415,4.636,416,3.023,417,3.826,418,2.038,419,2.885,420,1.776,421,3.258,422,2.559,423,2.606,424,2.559,425,1.665,426,1.929,427,2.559,428,1.776,429,2.651,430,2.197,431,2.885,432,2.197,433,2.559,434,2.559,435,1.743,436,2.179,437,1.929,438,1.929,439,1.929,440,3.826,441,3.826,442,3.826,443,3.826,444,3.826,445,3.826,446,1.929,447,1.363,448,2.179,449,4.582,450,2.559,451,2.559,452,2.038,453,2.038,454,1.594,455,2.559,456,2.559,457,3.463,458,2.92,459,3.902,460,2.197,461,2.038,462,1.929,463,1.363,464,2.559,465,1.188,466,2.559,467,2.179,468,2.179,469,1.469,470,3.826,471,3.826,472,2.559,473,2.559,474,2.559,475,3.167,476,4.145,477,2.559,478,5.085,479,5.085,480,6.513,481,4.145,482,3.826,483,3.463,484,5.085,485,2.559,486,2.559,487,3.826,488,2.559,489,3.826,490,2.559,491,2.559,492,3.826,493,2.559,494,2.559,495,2.559,496,1.743,497,2.559,498,2.179,499,1.594,500,2.559,501,2.559,502,1.27,503,1.594,504,2.559]],["title/components/FavsPage.html",[0,0.438,78,1.06]],["body/components/FavsPage.html",[0,0.687,1,0.835,2,1.485,3,0.131,4,0.131,5,1.059,6,1.059,7,1.059,8,1.059,9,0.112,11,1.059,12,2.723,13,2.511,15,1.579,17,1.579,19,0.49,20,0.877,22,1.244,26,0.835,27,1.614,28,2.497,31,1.518,33,1.648,34,0.023,35,1.466,36,1.085,37,1.555,38,2.95,40,1.648,42,0.939,43,0.939,44,0.615,45,0.38,46,1.614,51,0.131,52,0.278,53,0.885,54,1.128,69,0.588,70,1.579,71,1.579,72,1.059,73,2.091,74,1.059,75,1.059,76,0.835,77,1.059,78,1.555,79,1.059,80,0.788,81,1.059,82,0.835,83,1.059,84,0.788,85,1.059,86,0.788,87,1.059,88,0.835,89,0.788,90,1.059,91,0.788,92,1.059,93,0.788,94,0.885,95,1.059,96,0.788,97,1.059,98,0.835,99,0.939,100,0.743,101,1.059,102,1.059,103,1.059,104,0.012,105,0.012,129,0.662,161,3.414,205,3.65,209,2.916,211,2.375,217,1.648,218,1.489,231,2.218,232,1.744,245,2.631,246,3.145,248,2.631,253,1.918,257,2.913,260,2.218,267,1.468,278,2.208,288,2.913,334,1.918,336,1.868,339,1.489,341,1.489,342,1.381,365,3.29,371,2.913,373,2.208,391,0.788,394,2.375,407,1.681,408,2.009,411,3.29,412,2.227,413,2.913,415,3.29,416,3.031,418,2.058,419,2.913,420,1.793,421,3.29,423,2.631,425,2.227,426,1.954,428,2.375,429,2.95,430,2.939,431,3.859,432,2.218,436,2.208,437,1.954,438,1.954,439,2.913,447,2.46,465,1.203,469,2.218,498,2.208,502,1.287,505,2.208,506,4.617,507,3.863,508,3.933,509,3.863,510,3.863,511,2.592,512,2.592,513,3.863,514,3.29,515,3.863,516,3.863,517,2.592,518,2.592,519,3.143,520,2.592,521,2.592,522,2.208,523,3.29,524,2.406,525,2.592,526,2.208,527,2.913,528,2.592,529,2.592,530,1.954,531,2.208,532,2.592,533,2.592,534,2.592,535,1.765,536,2.592,537,2.592,538,2.592,539,3.863,540,2.592,541,1.954,542,2.913,543,3.29,544,2.913,545,2.208,546,2.592,547,2.592,548,1.765,549,2.592,550,2.208,551,2.592,552,2.592]],["title/modules/FavsPageModule.html",[106,0.543,553,2.377]],["body/modules/FavsPageModule.html",[3,0.225,4,0.225,9,0.192,34,0.023,44,0.746,45,0.438,51,0.225,52,0.477,69,1.011,76,2.185,78,2.062,104,0.017,105,0.017,106,0.693,108,1.073,109,1.712,110,2.672,111,1.938,112,1.938,113,1.205,119,2.441,120,1.938,121,1.434,123,1.609,124,1.609,130,2.604,132,1.712,136,2.211,161,2.558,553,4.876,554,3.793,555,3.793,556,3.793,557,4.226,558,2.952,559,4.454,560,2.785,561,2.067,562,2.785,563,2.067,564,3.793,565,4.454,566,2.558]],["title/modules/FavsPageRoutingModule.html",[106,0.543,557,2.173]],["body/modules/FavsPageRoutingModule.html",[0,0.644,3,0.259,4,0.259,9,0.222,34,0.023,44,0.7,45,0.504,51,0.259,52,0.55,78,1.86,104,0.019,105,0.019,108,1.236,113,1.389,123,1.472,124,1.755,129,1.311,141,2.548,143,3.038,144,2.673,145,1.859,146,2.098,557,3.812,564,4.371,567,5.132,568,2.734]],["title/interfaces/Filter.html",[391,1.06,569,2.377]],["body/interfaces/Filter.html",[3,0.194,4,0.194,9,0.166,19,0.727,20,1.158,34,0.023,36,1.356,51,0.194,89,2.099,104,0.016,105,0.016,223,3.952,227,2.251,312,1.908,318,1.908,391,1.168,392,1.908,396,3.928,403,3.846,404,2.945,405,2.207,524,3.177,569,3.474,570,3.274,571,5.404,572,4.153,573,4.784,574,5.404,575,5.193,576,5.193,577,5.193,578,6.097,579,5.193,580,3.844,581,3.844,582,3.844,583,3.846,584,4.316,585,2.618,586,3.274,587,3.844,588,5.1,589,3.844,590,3.844,591,3.844,592,3.844,593,3.844]],["title/injectables/GetRecipeDetailsService.html",[177,1.62,594,2.173]],["body/injectables/GetRecipeDetailsService.html",[3,0.174,4,0.174,9,0.149,14,2.142,19,0.65,20,1.074,22,1.524,26,1.742,31,1.488,33,1.742,34,0.023,35,1.381,36,1.023,37,1.644,40,1.876,42,1.245,43,1.245,44,0.624,45,0.338,51,0.174,52,0.654,53,1.174,104,0.015,105,0.015,134,2.593,177,2.196,178,2.142,217,1.742,232,2.093,243,3.567,267,1.671,286,2.342,310,3.222,334,2.349,336,1.846,429,3.271,430,3.956,594,2.947,595,4.606,596,2.929,597,4.078,598,4.03,599,4.731,600,2.929,601,5.376,602,4.731,603,4.03,604,5.202,605,4.393,606,4.962,607,4.393,608,3.439,609,3.439,610,4.03,611,3.222,612,4.962,613,5.693,614,4.962,615,3.439,616,3.439,617,5.507,618,4.03,619,4.759,620,4.03,621,2.929,622,2.593,623,2.342,624,2.929,625,3.439,626,4.03,627,4.962,628,4.731,629,3.439,630,4.03,631,3.439,632,3.439]],["title/injectables/GetRecipeService.html",[177,1.62,633,2.631]],["body/injectables/GetRecipeService.html",[3,0.101,4,0.101,9,0.086,14,1.246,19,0.378,20,0.719,22,1.019,26,1.265,31,1.632,33,1.438,34,0.023,35,1.14,36,1.094,37,1.357,40,1.666,42,2.189,43,2.189,44,0.521,45,0.197,51,0.101,52,0.521,53,0.683,104,0.01,105,0.014,134,1.508,164,1.571,177,1.469,178,1.246,208,1.149,217,1.438,218,2.255,223,3.886,227,2.113,243,2.386,286,1.362,310,2.155,312,2.568,315,1.818,318,1.571,321,1.217,334,1.95,336,1.524,354,2.072,402,2.695,405,1.818,429,3.235,432,1.818,531,1.703,569,3.94,571,4.143,572,3.313,573,3.668,574,4.143,575,3.345,576,3.345,577,3.345,579,3.345,583,2.386,584,3.901,595,4.866,597,2.961,600,1.703,601,4.406,603,2.695,604,4.406,605,3.367,606,3.803,607,3.367,613,4.927,614,4.406,618,2.695,619,3.901,620,2.695,621,1.703,622,1.508,623,1.362,624,1.703,626,2.695,627,5.545,630,2.695,633,2.386,634,1.703,635,3.165,636,3.165,637,3.165,638,3.165,639,2,640,2,641,3.927,642,3.927,643,4.786,644,3.345,645,3.165,646,3.927,647,2,648,2,649,3.927,650,3.165,651,2,652,3.165,653,5.419,654,2.695,655,4.465,656,3.165,657,2,658,6.651,659,5.664,660,6.651,661,2,662,2,663,2,664,2,665,2,666,2,667,2,668,2,669,2,670,2,671,2,672,2,673,2.386,674,2.386,675,1.971,676,2,677,2,678,2,679,2,680,2,681,2,682,2,683,2,684,2,685,2,686,2,687,1.703,688,2,689,2,690,2,691,2,692,2,693,2,694,2,695,2,696,2,697,2,698,2,699,2,700,2,701,2,702,2,703,2,704,2,705,2,706,2,707,2,708,2,709,2,710,2,711,2,712,2,713,2,714,2,715,2,716,2,717,2,718,2,719,2,720,2,721,2,722,2,723,2,724,2,725,2,726,2,727,1.703,728,2]],["title/interfaces/Goal.html",[100,1.001,391,1.06]],["body/interfaces/Goal.html",[3,0.236,4,0.236,9,0.202,19,0.886,20,1.314,31,1.196,34,0.022,36,1.341,37,1.909,38,2.173,51,0.236,100,1.934,104,0.018,105,0.018,211,2.173,227,1.995,232,1.995,240,3.531,267,2.067,302,2.916,318,2.324,323,4.47,324,4.47,391,1.423,392,2.324,394,2.173,396,3.608,585,3.189,729,3.988,730,4.682,731,2.689,732,4.682,733,3.189,734,4.682,735,4.682,736,4.682,737,3.605,738,4.682]],["title/injectables/GoalsService.html",[30,2.173,177,1.62]],["body/injectables/GoalsService.html",[3,0.116,4,0.116,9,0.1,14,1.437,19,0.436,20,0.803,22,1.139,23,3.504,26,0.743,28,2.388,30,2.204,31,1.603,33,1.554,34,0.023,35,1.232,36,1.115,37,1.466,38,2.913,40,2.021,42,1.281,43,1.281,44,0.517,45,0.227,51,0.116,52,0.247,53,0.788,54,2.486,56,2.988,99,1.281,100,1.886,104,0.011,105,0.011,145,2.234,161,2.032,177,1.642,178,1.437,180,2.93,182,4.339,194,4.109,199,4.109,209,3.141,217,1.139,220,2.668,221,4.675,222,4.652,223,3.765,227,1.308,231,2.032,232,1.98,233,3.244,239,3.286,240,4.445,242,3.013,245,2.41,246,3.892,247,4.109,248,4.517,260,3.152,261,5.021,267,1.492,272,1.966,280,1.74,281,1.966,282,1.74,283,1.74,286,1.572,302,1.437,321,0.887,323,1.572,324,3.543,333,3.665,334,2.725,336,1.469,337,1.966,338,1.437,339,2.771,340,3.665,341,1.325,342,2.772,353,1.966,354,1.642,361,2.471,362,3.013,366,1.437,367,1.966,369,3.013,370,3.013,371,2.668,372,3.013,374,1.966,378,4.109,379,1.966,380,1.74,389,1.74,535,2.41,612,1.966,731,2.771,733,1.572,737,3.419,739,1.966,740,4.558,741,3.538,742,3.538,743,4.824,744,4.824,745,3.538,746,3.538,747,2.308,748,3.538,749,3.538,750,2.308,751,3.538,752,2.308,753,2.308,754,3.738,755,2.308,756,2.308,757,2.308,758,3.538,759,2.308,760,2.308,761,2.308,762,2.308,763,2.308,764,2.308,765,2.308,766,2.308,767,2.308,768,2.308,769,2.308,770,2.308,771,1.966,772,2.308,773,2.308,774,1.966,775,2.308,776,2.308,777,2.308,778,2.308,779,1.966,780,2.308,781,2.308,782,2.308,783,1.966]],["title/interfaces/Grocery.html",[169,1.62,391,1.06]],["body/interfaces/Grocery.html",[3,0.247,4,0.247,9,0.212,19,0.927,20,1.352,31,1.252,34,0.022,35,1.745,36,1.213,51,0.247,104,0.018,105,0.018,169,3.171,209,3.416,211,2.275,227,2.026,232,2.026,255,4.175,267,2.035,299,3.697,320,4.542,321,1.885,391,1.49,392,2.434,394,2.275,396,3.419,784,4.175,785,3.697,786,5.954]],["title/components/GroceryPage.html",[0,0.438,80,1.06]],["body/components/GroceryPage.html",[0,0.626,1,0.679,2,1.268,3,0.106,4,0.106,5,0.861,6,0.861,7,0.861,8,0.861,9,0.091,11,0.861,12,2.613,13,2.396,15,1.348,17,1.348,19,0.399,20,0.749,22,1.062,23,2.818,26,0.679,27,1.313,28,2.302,31,1.502,33,1.48,34,0.023,35,1.502,36,1.046,37,1.397,38,2.846,40,1.78,42,1.194,43,1.916,44,0.492,45,0.207,46,1.313,51,0.106,52,0.226,53,0.72,54,0.917,56,2.334,69,0.479,70,1.348,71,1.348,72,0.861,73,1.878,74,0.861,75,0.861,76,0.679,77,0.861,78,0.641,79,0.861,80,1.397,81,0.861,82,0.679,83,0.861,84,0.641,85,0.861,86,0.641,87,0.861,88,0.679,89,0.641,90,0.861,91,0.641,92,0.861,93,0.641,94,0.72,95,0.861,96,0.641,97,0.861,98,0.679,99,0.763,100,0.605,101,0.861,102,0.861,103,0.861,104,0.013,105,0.01,121,0.679,129,0.538,145,0.763,146,2.162,169,3.187,180,3.13,183,3.989,207,2.487,208,1.894,209,2.818,217,1.48,218,1.894,223,1.313,227,1.516,231,1.894,232,1.235,233,1.589,246,2.767,248,2.246,253,1.637,254,2.246,257,2.487,260,2.334,267,1.759,279,1.589,294,1.589,297,2.531,302,1.313,309,1.795,310,1.436,320,2.246,321,1.767,327,1.795,334,1.046,335,1.211,336,1.806,338,2.054,339,1.211,341,1.211,342,1.757,354,1.531,356,1.795,361,1.211,366,1.313,376,3.064,404,0.978,407,1.435,408,1.768,412,2,414,1.436,416,2.793,418,1.757,419,2.487,420,1.531,423,2.246,425,1.435,428,1.531,452,1.123,453,1.123,457,2.246,458,2.334,459,1.795,460,1.211,461,1.123,462,1.589,465,1.531,469,1.211,499,3.295,502,2.017,503,2.054,523,1.795,535,2.246,548,3.765,583,3.466,584,3.466,771,1.795,787,1.795,788,4.063,789,3.298,790,3.461,791,3.064,792,3.915,793,3.298,794,3.064,795,3.298,796,2.108,797,2.108,798,3.298,799,2.108,800,1.589,801,2.108,802,3.466,803,2.487,804,2.108,805,2.108,806,2.108,807,3.298,808,4.596,809,5.529,810,2.108,811,2.108,812,2.108,813,2.108,814,2.108,815,2.108,816,2.108,817,2.863,818,3.064,819,3.064,820,1.795,821,2.108,822,2.108,823,2.108,824,2.108,825,2.108,826,2.108,827,2.809,828,2.108,829,2.108,830,3.461,831,2.108,832,2.809,833,2.108,834,2.108,835,2.108,836,2.108,837,1.795,838,2.054,839,2.108,840,2.108,841,2.108,842,2.487,843,2.108,844,1.795,845,2.108,846,2.487,847,1.589,848,1.589,849,3.298,850,1.795,851,2.108,852,2.108,853,2.108,854,2.108,855,2.108,856,1.795,857,1.795,858,2.809,859,3.298,860,2.809,861,2.809,862,1.589,863,1.589,864,1.795,865,1.436,866,1.795,867,1.795,868,1.589,869,2.246,870,3.064,871,2.108,872,2.108,873,2.108,874,1.436,875,1.436,876,1.313,877,1.436,878,1.211,879,1.436,880,1.211,881,1.795]],["title/modules/GroceryPageModule.html",[106,0.543,882,2.377]],["body/modules/GroceryPageModule.html",[3,0.231,4,0.231,9,0.198,34,0.023,44,0.742,45,0.45,51,0.231,52,0.49,69,1.039,80,2.076,104,0.018,105,0.018,106,0.712,108,1.102,109,1.759,110,2.705,111,1.99,112,1.99,113,1.238,119,2.482,120,1.99,121,1.473,123,1.636,124,1.636,130,2.648,132,1.759,136,2.271,169,2.123,558,2.972,560,2.832,561,2.123,562,2.832,563,2.123,566,2.627,882,4.843,883,3.896,884,3.896,885,3.896,886,4.254,887,4.575,888,3.896]],["title/modules/GroceryPageRoutingModule.html",[106,0.543,886,2.173]],["body/modules/GroceryPageRoutingModule.html",[0,0.644,3,0.259,4,0.259,9,0.222,34,0.023,44,0.7,45,0.504,51,0.259,52,0.55,80,1.86,104,0.019,105,0.019,108,1.236,113,1.389,123,1.472,124,1.755,129,1.311,141,2.548,143,3.038,144,2.673,145,1.859,146,2.098,568,2.734,886,3.812,888,4.371,889,5.132]],["title/components/HeaderComponent.html",[0,0.438,82,1.124]],["body/components/HeaderComponent.html",[0,0.686,1,0.833,2,1.483,3,0.131,4,0.131,5,1.057,6,1.057,7,1.057,8,1.057,9,0.112,11,1.057,12,2.722,13,2.51,15,1.576,17,1.576,19,0.489,22,1.242,26,0.833,31,1.178,33,1.242,34,0.023,35,1.305,36,0.729,37,1.172,40,1.242,44,0.586,45,0.254,51,0.131,52,0.277,53,0.883,69,0.587,70,1.576,71,1.576,72,1.057,73,2.089,74,1.057,75,1.057,76,0.833,77,1.057,78,0.786,79,1.057,80,0.786,81,1.057,82,1.646,83,1.057,84,0.786,85,1.057,86,0.786,87,1.057,88,0.833,89,0.786,90,1.057,91,0.786,92,1.057,93,0.786,94,0.883,95,1.057,96,0.786,97,1.057,98,0.833,99,0.936,100,0.742,101,1.057,102,1.057,103,1.057,104,0.012,105,0.012,129,0.66,146,2.495,217,1.242,227,1.553,253,1.914,266,1.761,312,1.284,321,2.6,336,1.316,404,1.2,407,1.678,408,2.006,412,2.224,416,2.992,420,1.79,425,1.678,428,1.79,446,1.95,447,2.054,452,1.378,453,1.378,454,2.872,458,2.215,460,1.485,461,1.378,463,3.055,465,2.538,469,1.485,475,2.402,476,1.761,483,2.626,496,1.761,499,1.611,502,1.914,503,1.611,542,1.95,544,2.908,659,3.284,794,2.908,800,1.95,802,2.908,803,3.854,817,2.402,837,2.202,838,1.611,856,2.202,857,2.202,869,1.761,876,3.183,878,1.485,880,2.215,890,2.202,891,5.733,892,4.611,893,3.856,894,1.95,895,2.586,896,2.586,897,3.856,898,3.856,899,2.626,900,2.586,901,3.284,902,2.586,903,1.95,904,1.95,905,2.908,906,2.908,907,2.586,908,2.586,909,2.626,910,2.626,911,1.95,912,1.95,913,3.284,914,3.284,915,4.323,916,3.284,917,3.854,918,1.95,919,1.95,920,2.908,921,1.95,922,1.95,923,1.95,924,2.626,925,4.611,926,2.908,927,2.586,928,2.202,929,2.586,930,2.586,931,2.586,932,2.586,933,2.586,934,2.586,935,3.856,936,2.586,937,2.586,938,2.202,939,2.202,940,2.586,941,2.202,942,2.202,943,4.122,944,4.323,945,5.314,946,3.284,947,3.856,948,5.111,949,5.111,950,5.111,951,4.611,952,4.611,953,3.856,954,5.467,955,3.284,956,4.611,957,2.586,958,2.586,959,2.586,960,1.95,961,2.586,962,1.95,963,2.586,964,2.586,965,1.95,966,2.586,967,3.856,968,2.202,969,2.586,970,3.856,971,2.586,972,2.586,973,2.586,974,2.586]],["title/modules/HomePageModule.html",[106,0.543,975,2.377]],["body/modules/HomePageModule.html",[3,0.224,4,0.224,9,0.192,34,0.023,44,0.746,45,0.436,51,0.224,52,0.475,69,1.007,84,2.06,88,2.183,104,0.017,105,0.017,106,0.69,108,1.068,109,1.705,110,2.667,111,1.93,112,1.93,113,1.201,119,2.435,120,1.93,121,1.428,123,1.605,124,1.605,130,2.597,132,1.705,136,2.202,147,3.345,558,2.949,560,2.778,561,2.059,562,2.778,563,2.059,566,2.547,975,4.874,976,3.778,977,3.778,978,3.778,979,4.221,980,4.436,981,3.778,982,4.436,983,3.345,984,4.436]],["title/modules/HomePageRoutingModule.html",[106,0.543,979,2.173]],["body/modules/HomePageRoutingModule.html",[0,0.644,3,0.259,4,0.259,9,0.222,34,0.023,44,0.7,45,0.504,51,0.259,52,0.55,84,1.86,104,0.019,105,0.019,108,1.236,113,1.389,123,1.472,124,1.755,129,1.311,141,2.548,143,3.038,144,2.673,145,1.859,146,2.098,568,2.734,979,3.812,981,4.371,985,5.132]],["title/components/LoginPage.html",[0,0.438,86,1.06]],["body/components/LoginPage.html",[0,0.699,1,0.87,2,1.531,3,0.136,4,0.136,5,1.104,6,1.104,7,1.104,8,1.104,9,0.117,11,1.104,12,2.743,13,2.533,15,1.628,17,1.628,19,0.511,20,1.185,22,1.282,26,1.523,27,1.682,28,2.272,31,1.488,33,1.282,34,0.023,35,1.422,36,1.053,37,1.21,38,2.796,40,1.282,42,1.442,43,1.442,44,0.507,45,0.265,46,1.682,51,0.136,52,0.289,53,0.922,54,1.175,69,0.613,70,1.628,71,1.628,72,1.933,73,2.134,74,1.104,75,1.104,76,0.87,77,1.104,78,0.821,79,1.104,80,0.821,81,1.104,82,0.87,83,1.104,84,0.821,85,1.104,86,1.587,87,1.104,88,0.87,89,0.821,90,1.104,91,0.821,92,1.104,93,0.821,94,0.922,95,1.104,96,0.821,97,1.104,98,0.87,99,0.978,100,0.775,101,1.104,102,1.104,103,1.104,104,0.012,105,0.012,121,0.87,129,0.69,146,2.462,158,2.712,169,2.584,182,2.48,183,4.198,208,1.551,217,1.282,227,1.831,239,1.839,245,2.712,260,2.287,287,3.392,293,2.712,336,1.615,354,1.848,376,2.036,404,1.254,407,1.733,408,2.058,412,2.272,416,2.979,418,2.782,420,1.848,425,1.733,428,1.848,435,3.556,452,2.782,453,1.439,457,3.556,458,3.197,460,1.551,461,1.439,462,2.036,463,2.122,465,2.196,468,3.392,469,1.551,496,1.839,502,2.348,503,2.48,526,2.3,643,3.392,644,3.392,673,2.036,674,2.036,675,2.48,737,1.682,740,3.567,754,1.839,794,3.003,800,3.003,802,3.003,803,3.003,817,2.48,827,2.3,830,2.3,858,4.742,862,2.036,863,2.036,864,2.3,865,1.839,866,2.3,867,2.3,868,2.036,869,1.839,870,2.036,874,1.839,875,1.839,876,1.682,877,1.839,878,1.551,879,1.839,880,1.551,921,2.036,986,2.3,987,4.731,988,3.982,989,4.731,990,3.982,991,2.701,992,2.701,993,2.712,994,2.712,995,2.712,996,2.712,997,2.712,998,3.982,999,2.701,1000,2.701,1001,2.701,1002,3.392,1003,2.3,1004,3.982,1005,3.982,1006,2.701,1007,2.701,1008,2.701,1009,2.701,1010,3.982,1011,2.701,1012,2.701,1013,2.701,1014,2.701]],["title/modules/LoginPageModule.html",[106,0.543,1015,2.377]],["body/modules/LoginPageModule.html",[3,0.231,4,0.231,9,0.198,34,0.023,44,0.742,45,0.45,51,0.231,52,0.49,69,1.039,86,2.076,104,0.018,105,0.018,106,0.712,108,1.102,109,1.759,110,2.705,111,1.99,112,1.99,113,1.238,119,2.482,120,1.99,121,1.473,123,1.636,124,1.636,130,2.648,132,1.759,136,2.271,158,3.116,558,2.972,560,2.832,561,2.123,562,2.832,563,2.123,566,2.627,1015,4.843,1016,3.896,1017,3.896,1018,3.896,1019,4.254,1020,4.575,1021,3.896]],["title/modules/LoginPageRoutingModule.html",[106,0.543,1019,2.173]],["body/modules/LoginPageRoutingModule.html",[0,0.644,3,0.259,4,0.259,9,0.222,34,0.023,44,0.7,45,0.504,51,0.259,52,0.55,86,1.86,104,0.019,105,0.019,108,1.236,113,1.389,123,1.472,124,1.755,129,1.311,141,2.548,143,3.038,144,2.673,145,1.859,146,2.098,568,2.734,1019,3.812,1021,4.371,1022,5.132]],["title/interfaces/Meal.html",[89,1.06,391,1.06]],["body/interfaces/Meal.html",[3,0.216,4,0.216,9,0.185,19,0.808,20,1.24,31,1.091,34,0.023,36,1.32,51,0.216,89,2.137,104,0.017,105,0.017,211,1.982,227,2.228,232,1.929,267,1.821,315,3.646,316,4.324,318,3.258,391,1.298,392,2.12,394,1.982,396,3.769,398,3.638,401,5.408,403,3.221,404,2.947,405,3.769,481,4.469,572,4.324,585,2.909,586,3.638,611,2.909,1023,3.638,1024,4.469]],["title/components/MealResultComponent.html",[0,0.438,88,1.124]],["body/components/MealResultComponent.html",[0,0.641,1,0.712,2,1.317,3,0.112,4,0.112,5,0.904,6,0.904,7,0.904,8,0.904,9,0.096,11,0.904,12,2.64,13,2.345,15,1.4,17,1.4,19,0.792,22,1.103,26,0.712,31,1.558,33,1.103,34,0.023,35,1.205,36,1.129,37,1.041,40,1.103,44,0.546,45,0.217,51,0.112,52,0.237,53,0.755,68,1.884,69,0.502,70,1.4,71,1.4,72,0.904,73,1.928,74,0.904,75,0.904,76,0.712,77,0.904,78,0.672,79,0.904,80,0.672,81,0.904,82,0.712,83,0.904,84,0.672,85,0.904,86,0.672,87,0.904,88,1.519,89,1.767,90,0.904,91,0.672,92,0.904,93,0.672,94,0.755,95,0.904,96,0.672,97,0.904,98,0.712,99,0.801,100,0.634,101,0.904,102,0.904,103,0.904,104,0.011,105,0.011,121,0.712,129,0.565,164,2.887,211,1.59,217,1.103,222,2.582,227,1.916,232,1.71,253,1.7,267,1.353,288,2.582,312,1.7,315,3.232,316,3.675,318,2.794,321,2.345,336,1.169,394,1.59,404,2.19,405,3.232,407,1.49,408,1.823,412,2.053,413,2.582,414,2.854,416,2.882,420,1.59,425,1.49,426,1.668,428,1.59,429,2.831,430,2.407,431,2.582,432,1.967,437,1.668,438,1.668,439,1.668,447,1.825,452,2.232,453,2.513,454,3.178,458,3.503,460,2.407,461,2.513,463,3.359,465,2.368,475,2.61,476,2.332,481,2.854,483,2.854,496,2.854,499,1.378,502,1.098,519,1.27,544,2.582,545,2.917,607,2.582,610,2.917,611,2.332,619,2.582,817,3.505,838,1.378,878,1.27,880,1.27,894,1.668,903,1.668,904,1.668,905,2.582,906,2.582,909,2.854,910,2.854,911,1.668,912,1.668,913,1.884,914,1.884,915,3.557,916,1.884,917,2.582,918,3.16,919,1.668,920,3.557,921,3.848,922,3.16,923,3.16,924,2.854,926,1.668,928,1.884,938,2.917,939,1.884,941,1.884,942,2.917,943,2.582,944,2.582,945,1.884,955,1.884,962,2.582,965,2.582,968,1.884,983,4.682,1024,3.475,1025,5.288,1026,1.884,1027,4.19,1028,3.425,1029,3.425,1030,2.212,1031,2.212,1032,2.212,1033,2.212,1034,2.212,1035,2.212,1036,2.212,1037,2.212,1038,3.425,1039,2.212,1040,1.884,1041,3.425,1042,4.596,1043,1.884,1044,3.569,1045,2.212,1046,3.425,1047,2.212,1048,1.884,1049,4.19,1050,2.212,1051,2.212,1052,2.212,1053,2.212,1054,3.425,1055,2.582,1056,3.569,1057,2.212,1058,3.425,1059,2.212,1060,2.917,1061,2.212,1062,2.212,1063,1.884,1064,1.884,1065,2.212,1066,2.212,1067,1.884,1068,2.212,1069,2.212,1070,3.425,1071,2.212,1072,2.212,1073,2.212,1074,2.212,1075,2.212,1076,2.212,1077,2.212,1078,3.425]],["title/interfaces/Nutrient.html",[391,1.06,519,2.004]],["body/interfaces/Nutrient.html",[3,0.241,4,0.241,9,0.207,19,0.905,20,1.332,34,0.022,35,1.733,36,1.251,51,0.241,104,0.018,105,0.018,227,2.146,267,2.006,391,1.454,392,2.375,396,3.798,519,3.897,731,3.966,1040,4.075,1079,4.075,1080,5.632,1081,5.78,1082,4.785,1083,4.785,1084,4.785,1085,4.785,1086,4.075,1087,4.075,1088,4.785]],["title/components/NutrientsPage.html",[0,0.438,91,1.06]],["body/components/NutrientsPage.html",[0,0.632,1,0.691,2,1.287,3,0.108,4,0.108,5,0.877,6,0.877,7,0.877,8,0.877,9,0.093,11,0.877,12,2.623,13,2.406,15,1.368,17,1.368,19,0.406,20,1.054,22,1.078,26,1.324,31,1.47,33,1.621,34,0.023,35,1.361,36,0.878,37,1.017,40,1.324,42,1.489,43,1.489,44,0.539,45,0.211,51,0.108,52,0.23,53,0.733,54,1.456,69,0.487,70,1.368,71,1.368,72,1.68,73,1.897,74,0.877,75,0.877,76,0.691,77,0.877,78,0.652,79,0.877,80,0.652,81,0.877,82,0.691,83,0.877,84,0.652,85,0.877,86,0.652,87,0.877,88,0.691,89,0.652,90,0.877,91,1.411,92,0.877,93,0.652,94,0.733,95,0.877,96,0.652,97,0.877,98,0.691,99,0.778,100,0.616,101,1.368,102,0.877,103,0.877,104,0.01,105,0.01,129,0.855,161,1.922,211,0.997,217,1.078,232,1.872,239,2.8,267,1.529,306,1.619,312,2.305,321,1.581,335,1.233,336,1.585,338,2.084,342,2.191,354,1.553,361,1.233,394,0.997,407,1.456,408,1.789,412,2.02,416,2.807,418,2.84,420,1.553,425,2.02,428,1.553,429,2.746,430,3.474,432,1.922,447,2.191,452,2.84,453,2.191,463,2.84,465,0.997,475,1.337,483,3.162,508,3.502,514,2.85,519,2.89,522,1.829,524,2.561,527,3.501,541,1.619,542,1.619,543,2.85,548,1.462,572,2.8,585,1.462,594,2.891,617,5.248,654,2.85,673,1.619,674,1.619,675,1.337,727,1.829,731,1.922,737,2.084,740,4.197,754,3.162,783,2.85,838,1.337,899,4.196,909,1.462,910,1.462,915,1.619,917,3.1,918,4.197,920,1.619,922,1.619,923,1.619,924,2.8,926,1.619,943,1.619,944,1.619,946,1.829,962,1.619,965,1.619,993,2.279,994,2.279,995,2.279,996,2.279,997,2.279,1002,1.829,1024,2.279,1048,1.829,1055,2.523,1056,2.85,1060,2.85,1063,1.829,1080,2.85,1081,2.85,1086,2.85,1089,1.829,1090,4.111,1091,3.346,1092,5.032,1093,4.341,1094,3.346,1095,2.147,1096,4.54,1097,3.346,1098,4.111,1099,2.85,1100,2.147,1101,3.346,1102,2.147,1103,3.954,1104,4.111,1105,2.147,1106,3.346,1107,2.147,1108,4.111,1109,2.147,1110,2.147,1111,1.829,1112,1.829,1113,2.147,1114,2.147,1115,2.147,1116,2.147,1117,2.147,1118,2.147,1119,2.147,1120,1.829,1121,1.829,1122,2.147,1123,2.147,1124,2.147,1125,2.147,1126,2.147,1127,2.147,1128,2.147,1129,2.147,1130,2.147,1131,2.147,1132,4.111,1133,2.147,1134,2.147,1135,4.111,1136,2.147,1137,2.147,1138,2.147,1139,3.346,1140,3.346,1141,3.346,1142,3.346,1143,2.147,1144,2.147,1145,2.147,1146,2.147,1147,2.147,1148,2.147,1149,2.147,1150,2.147,1151,2.147,1152,2.147,1153,2.147,1154,1.829,1155,2.147,1156,2.85,1157,2.147,1158,2.147,1159,2.147,1160,2.147,1161,2.147,1162,2.147]],["title/modules/NutrientsPageModule.html",[106,0.543,1163,2.377]],["body/modules/NutrientsPageModule.html",[3,0.237,4,0.237,9,0.203,34,0.023,44,0.737,45,0.462,51,0.237,52,0.504,69,1.068,91,2.09,104,0.018,105,0.018,106,0.732,108,1.133,109,1.808,110,2.739,111,2.046,112,2.046,113,1.273,119,2.525,120,2.046,121,1.514,123,1.664,124,1.664,130,2.694,132,1.808,136,2.334,527,3.546,560,2.881,561,2.183,562,2.881,563,2.183,1163,4.795,1164,4.005,1165,4.005,1166,4.005,1167,4.283,1168,4.702,1169,4.005]],["title/modules/NutrientsPageRoutingModule.html",[106,0.543,1167,2.173]],["body/modules/NutrientsPageRoutingModule.html",[0,0.644,3,0.259,4,0.259,9,0.222,34,0.023,44,0.7,45,0.504,51,0.259,52,0.55,91,1.86,104,0.019,105,0.019,108,1.236,113,1.389,123,1.472,124,1.755,129,1.311,141,2.548,143,3.038,144,2.673,145,1.859,146,2.098,568,2.734,1167,3.812,1169,4.371,1170,5.132]],["title/components/ProfileInputPage.html",[0,0.438,93,1.06]],["body/components/ProfileInputPage.html",[0,0.626,1,0.527,2,1.034,3,0.083,4,0.083,5,0.668,6,0.668,7,0.668,8,0.668,9,0.071,11,0.668,12,2.459,13,2.236,15,1.099,17,1.099,19,0.309,20,0.902,22,0.866,23,3.099,26,1.104,30,3.246,31,1.577,33,1.413,34,0.023,35,1.274,36,1.12,37,1.334,40,1.678,42,1.807,43,1.709,44,0.505,45,0.161,47,1.393,51,0.083,52,0.175,53,0.558,54,1.17,56,2.281,64,2.291,69,0.371,70,1.099,71,1.099,72,1.401,73,1.623,74,0.668,75,0.668,76,0.527,77,0.668,78,0.497,79,0.668,80,0.497,81,0.668,82,0.527,83,0.668,84,0.497,85,0.668,86,0.497,87,0.668,88,0.527,89,0.497,90,0.668,91,0.497,92,0.668,93,1.207,94,1.779,95,0.668,96,0.497,97,0.668,98,1.413,99,1.589,100,2.011,101,2.459,102,0.668,103,0.668,104,0.008,105,0.008,121,0.527,129,0.418,132,0.629,145,1.241,158,1.832,164,1.336,166,3.889,182,3.623,208,2.865,210,2.994,217,1.413,218,0.939,220,1.233,231,1.545,232,1.768,253,1.336,254,2.704,258,1.393,260,1.545,266,1.832,267,1.548,280,1.233,293,1.832,297,2.473,304,2.291,313,1.393,315,1.545,318,1.336,321,1.527,323,3.398,324,1.832,334,0.812,335,1.545,336,1.779,338,1.019,339,1.545,341,1.545,342,2.515,354,2.419,361,1.545,364,3.382,366,1.019,380,2.584,404,1.591,405,1.545,407,1.17,408,1.491,412,1.728,416,2.506,418,2.776,420,1.249,423,1.832,425,1.728,428,1.249,435,2.334,447,1.433,452,0.871,453,0.871,454,1.019,457,1.114,458,1.968,460,1.545,461,1.433,463,0.871,465,0.759,469,0.939,475,1.675,476,1.832,499,1.019,502,0.812,524,1.019,530,2.028,548,1.114,605,1.233,675,1.675,731,2.281,733,2.704,737,2.94,754,2.704,774,2.291,779,2.919,785,2.584,791,2.584,817,1.675,818,2.584,819,1.233,842,2.994,846,2.028,847,2.028,848,1.233,850,1.393,862,1.233,863,1.233,865,1.114,868,1.233,869,1.114,870,1.233,874,1.114,875,1.114,876,1.019,877,1.114,878,0.939,879,1.114,880,0.939,894,1.233,899,1.832,993,1.832,994,1.832,995,1.832,996,1.832,997,1.832,1064,1.393,1067,1.393,1093,3.929,1156,1.393,1171,4.252,1172,1.393,1173,3.427,1174,2.69,1175,3.427,1176,3.427,1177,3.427,1178,3.427,1179,3.738,1180,2.69,1181,2.69,1182,3.971,1183,2.69,1184,2.69,1185,4.438,1186,2.69,1187,2.291,1188,2.291,1189,2.291,1190,1.635,1191,1.635,1192,2.291,1193,2.291,1194,2.69,1195,1.635,1196,2.69,1197,1.635,1198,3.971,1199,1.635,1200,2.69,1201,1.635,1202,2.69,1203,1.635,1204,2.69,1205,2.69,1206,2.69,1207,1.635,1208,4.72,1209,1.635,1210,1.635,1211,1.635,1212,1.635,1213,1.635,1214,3.971,1215,1.635,1216,1.635,1217,1.635,1218,1.635,1219,1.635,1220,1.114,1221,1.393,1222,1.635,1223,1.393,1224,1.635,1225,1.635,1226,1.635,1227,3.427,1228,1.635,1229,1.393,1230,1.635,1231,1.635,1232,1.635,1233,1.635,1234,1.635,1235,2.69,1236,1.635,1237,1.635,1238,1.635,1239,1.635,1240,1.635,1241,1.635,1242,1.635,1243,1.635,1244,1.635,1245,1.635,1246,3.382,1247,3.971,1248,2.69,1249,2.69,1250,2.69,1251,2.69,1252,2.291,1253,2.69,1254,1.635,1255,2.69,1256,1.635,1257,1.635,1258,2.69,1259,1.635,1260,1.635,1261,1.635,1262,2.69,1263,2.69,1264,1.635,1265,1.635]],["title/modules/ProfileInputPageModule.html",[106,0.543,1266,2.377]],["body/modules/ProfileInputPageModule.html",[3,0.229,4,0.229,9,0.196,34,0.023,44,0.741,45,0.446,51,0.229,52,0.486,69,1.03,93,2.071,94,1.938,104,0.018,105,0.018,106,0.706,108,1.093,109,1.744,110,2.695,111,1.974,112,1.974,113,1.228,119,2.469,120,1.974,121,1.461,123,1.628,124,1.628,130,2.634,132,1.744,136,2.252,164,2.252,166,2.826,558,2.966,560,2.818,561,2.106,562,2.818,563,2.106,566,2.606,1171,3.09,1266,4.837,1267,3.864,1268,3.864,1269,3.864,1270,4.245,1271,4.537,1272,3.864]],["title/modules/ProfileInputPageRoutingModule.html",[106,0.543,1270,2.173]],["body/modules/ProfileInputPageRoutingModule.html",[0,0.64,3,0.257,4,0.257,9,0.22,34,0.023,44,0.698,45,0.501,51,0.257,52,0.546,93,1.852,94,1.74,104,0.019,105,0.019,108,1.228,113,1.379,123,1.462,124,1.748,129,1.302,141,2.53,143,3.026,144,2.665,145,1.846,146,2.083,164,2.53,166,3.174,568,2.715,1171,3.471,1270,3.796,1272,4.341]],["title/components/RecipePage.html",[0,0.438,96,1.06]],["body/components/RecipePage.html",[0,0.655,1,0.586,2,1.128,3,0.092,4,0.092,5,0.743,6,0.743,7,0.743,8,0.743,9,0.079,11,0.743,12,2.526,13,2.305,15,1.199,17,1.199,19,0.344,20,1.185,22,0.945,23,2.254,26,1.187,28,1.84,31,1.616,33,1.597,34,0.023,35,1.333,36,1.027,37,1.285,38,2.52,40,1.805,42,1.966,43,1.966,44,0.6,45,0.179,46,1.133,51,0.092,52,0.195,53,0.621,54,1.604,56,1.045,69,0.413,70,1.199,71,1.199,72,1.507,73,1.729,74,0.743,75,0.743,76,0.586,77,0.743,78,0.553,79,0.743,80,0.553,81,0.743,82,0.586,83,0.743,84,0.553,85,0.743,86,0.553,87,0.743,88,0.586,89,0.553,90,0.743,91,0.553,92,0.743,93,0.553,94,0.621,95,0.743,96,1.285,97,0.743,98,0.586,99,0.659,100,0.522,101,0.743,102,0.743,103,0.743,104,0.009,105,0.009,121,0.586,129,0.749,145,0.659,147,2.212,169,2.731,187,1.549,207,2.212,209,2.254,210,2.212,217,1.362,227,1.941,232,1.586,254,1.998,267,1.057,279,1.371,293,1.998,297,1.827,299,1.371,312,2.463,320,1.239,321,0.699,334,1.456,335,1.045,336,1.781,339,1.045,341,1.045,342,1.964,343,1.549,354,1.711,361,1.685,366,2.296,389,1.371,407,1.276,408,1.604,412,1.84,416,2.672,418,2.893,420,1.362,425,1.604,428,1.362,429,2.904,430,3.306,432,1.685,435,1.998,446,1.371,447,0.969,448,1.549,454,1.133,461,0.969,463,1.563,465,1.711,481,2.511,502,1.83,503,1.133,524,1.827,535,1.998,541,1.371,550,1.549,573,3.934,594,2.634,598,3.603,611,1.239,675,2.634,687,1.549,785,1.371,790,1.549,791,2.78,792,2.499,818,1.371,819,1.371,832,3.14,838,1.133,842,2.212,846,2.212,847,1.371,848,1.371,860,2.499,861,2.499,865,1.239,874,1.239,875,1.239,876,1.133,877,1.239,878,1.045,879,1.239,880,1.045,881,1.549,899,3.698,903,1.371,904,1.371,905,2.212,906,2.212,909,2.511,910,2.511,911,1.371,912,1.371,919,1.371,924,1.998,960,1.371,993,1.998,994,1.998,995,1.998,996,1.998,997,2.511,1003,1.549,1024,3.16,1042,1.549,1043,1.549,1044,2.499,1096,4.225,1099,2.499,1103,3.603,1111,1.549,1112,1.549,1120,1.549,1121,1.549,1154,1.549,1193,1.549,1223,1.549,1246,2.499,1273,1.549,1274,3.687,1275,2.934,1276,5.884,1277,3.687,1278,5.884,1279,2.934,1280,4.23,1281,2.934,1282,1.819,1283,2.934,1284,3.687,1285,2.934,1286,2.934,1287,1.819,1288,2.934,1289,1.819,1290,4.23,1291,2.934,1292,2.934,1293,2.934,1294,4.23,1295,4.23,1296,1.819,1297,1.819,1298,1.819,1299,2.934,1300,1.819,1301,2.934,1302,2.934,1303,1.819,1304,1.819,1305,1.819,1306,1.819,1307,1.819,1308,1.819,1309,1.819,1310,1.819,1311,1.819,1312,1.819,1313,1.819,1314,1.819,1315,1.819,1316,2.934,1317,1.819,1318,1.819,1319,1.819,1320,1.819,1321,1.819,1322,1.819,1323,1.819,1324,1.819,1325,1.819,1326,1.819,1327,2.934,1328,1.819,1329,2.934,1330,1.819,1331,1.549,1332,1.819,1333,1.819,1334,1.819,1335,1.819,1336,1.819,1337,1.819,1338,1.819,1339,2.934,1340,2.934,1341,2.934,1342,1.819,1343,1.819,1344,1.819,1345,1.819,1346,1.819,1347,1.819,1348,1.819,1349,1.819,1350,1.819,1351,1.819,1352,1.819,1353,1.819,1354,1.819,1355,1.819,1356,1.819]],["title/modules/RecipePageModule.html",[106,0.543,1357,2.377]],["body/modules/RecipePageModule.html",[3,0.231,4,0.231,9,0.198,34,0.023,44,0.742,45,0.45,51,0.231,52,0.49,69,1.039,96,2.076,104,0.018,105,0.018,106,0.712,108,1.102,109,1.759,110,2.705,111,1.99,112,1.99,113,1.238,119,2.482,120,1.99,121,1.473,123,1.636,124,1.636,130,2.648,132,1.759,136,2.271,429,2.123,558,2.972,560,2.832,561,2.123,562,2.832,563,2.123,566,2.627,1357,4.843,1358,3.896,1359,3.896,1360,3.896,1361,4.254,1362,4.575,1363,3.896]],["title/modules/RecipePageRoutingModule.html",[106,0.543,1361,2.173]],["body/modules/RecipePageRoutingModule.html",[0,0.644,3,0.259,4,0.259,9,0.222,34,0.023,44,0.7,45,0.504,51,0.259,52,0.55,96,1.86,104,0.019,105,0.019,108,1.236,113,1.389,123,1.472,124,1.755,129,1.311,141,2.548,143,3.038,144,2.673,145,1.859,146,2.098,568,2.734,1361,3.812,1363,4.371,1364,5.132]],["title/modules/SharedModule.html",[106,0.543,558,1.518]],["body/modules/SharedModule.html",[3,0.228,4,0.228,9,0.195,34,0.023,44,0.729,45,0.443,51,0.228,52,0.483,69,1.024,82,2.298,98,2.309,100,1.621,104,0.018,105,0.018,106,0.702,108,1.086,109,1.733,110,2.687,111,1.962,112,1.962,113,1.53,119,2.46,120,1.962,121,1.452,123,1.293,124,1.621,130,2.624,132,1.733,558,3.087,560,2.807,561,2.093,562,2.807,563,2.093,1220,3.071,1221,3.84,1365,3.84,1366,3.84,1367,3.84,1368,4.509,1369,4.509,1370,3.4,1371,4.509]],["title/components/UpdateGoalModalComponent.html",[0,0.438,98,1.124]],["body/components/UpdateGoalModalComponent.html",[0,0.723,1,0.946,2,1.627,3,0.148,4,0.148,5,1.2,6,1.2,7,1.2,8,1.2,9,0.127,11,1.2,12,2.783,13,2.575,15,1.73,17,1.73,19,0.555,20,0.961,22,1.363,26,0.946,31,1.532,33,0.946,34,0.023,35,1.267,36,0.939,37,0.892,40,1.598,42,1.063,43,1.063,44,0.453,45,0.289,51,0.148,52,0.314,53,1.002,69,0.667,70,1.73,71,1.73,72,1.2,73,2.22,74,1.2,75,1.2,76,0.946,77,1.2,78,0.892,79,1.2,80,0.892,81,1.2,82,0.946,83,1.2,84,0.892,85,1.2,86,0.892,87,1.2,88,0.946,89,0.892,90,1.2,91,0.892,92,1.2,93,0.892,94,1.002,95,1.2,96,0.892,97,1.2,98,1.749,99,2.498,100,2.028,101,2.708,102,1.2,103,1.2,104,0.013,105,0.013,132,1.129,164,2.101,182,1.829,217,0.946,232,1.923,253,2.101,267,1.558,321,1.627,336,1.002,354,2.992,407,1.842,408,2.159,412,2.363,414,2.883,425,2.159,467,5.49,530,3.191,731,2.431,733,3.699,820,2.501,844,4.626,1087,2.501,1093,4.341,1179,5.265,1185,5.49,1187,3.605,1188,3.605,1189,3.605,1192,4.626,1220,4.21,1229,2.501,1252,3.605,1370,4.661,1372,2.501,1373,4.963,1374,4.233,1375,5.432,1376,2.936,1377,4.233,1378,2.936,1379,2.936,1380,5.432,1381,4.233,1382,4.233,1383,5.432,1384,4.233,1385,2.936,1386,2.936,1387,4.233,1388,2.936,1389,2.936,1390,2.936,1391,2.936,1392,2.936,1393,2.936,1394,2.936,1395,2.936,1396,2.936]],["title/interfaces/User.html",[276,2.377,391,1.06]],["body/interfaces/User.html",[3,0.263,4,0.263,9,0.225,19,0.987,20,1.403,34,0.022,35,1.682,36,1.245,51,0.263,104,0.019,105,0.019,227,1.878,232,2.001,266,4.485,267,1.953,276,4.209,388,4.444,391,1.586,392,2.59,395,4.444,397,4.444,1397,4.444]],["title/coverage.html",[1398,4.07]],["body/coverage.html",[0,0.881,1,1.251,9,0.168,10,3.309,28,1.69,30,2.419,34,0.023,36,0.735,76,1.251,78,1.18,80,1.18,82,1.251,84,1.18,86,1.18,88,1.251,89,1.18,91,1.18,93,1.18,96,1.18,98,1.251,100,1.65,104,0.016,105,0.016,166,2.419,169,1.803,177,2.842,179,3.873,205,2.231,208,2.231,276,2.646,284,2.929,294,4.617,306,2.929,321,2.7,391,2.028,393,3.309,394,1.803,406,3.309,429,1.803,505,3.309,519,2.231,569,2.646,570,3.309,594,2.419,595,3.873,596,3.309,623,3.498,633,2.929,634,3.309,729,3.309,739,3.309,784,3.309,787,3.309,890,3.309,960,3.873,983,2.929,986,3.309,1023,3.309,1025,3.309,1026,3.309,1079,3.309,1089,3.309,1171,2.646,1172,3.309,1220,2.646,1273,3.309,1370,2.929,1372,3.309,1397,3.309,1398,3.309,1399,3.885,1400,3.885,1401,3.309,1402,3.309,1403,6.123,1404,5.754,1405,3.885,1406,3.885,1407,3.885,1408,3.885,1409,5.136,1410,5.136,1411,3.885,1412,3.885,1413,3.885,1414,3.885,1415,3.885,1416,3.885,1417,3.885,1418,3.885,1419,3.885,1420,5.136,1421,3.885,1422,3.885,1423,3.885,1424,3.885,1425,3.885,1426,3.885,1427,3.885,1428,3.885,1429,3.885,1430,3.885,1431,3.885,1432,3.885,1433,3.885,1434,3.885,1435,3.885,1436,3.309,1437,3.309,1438,3.885]],["title/dependencies.html",[109,1.615,1439,2.475]],["body/dependencies.html",[34,0.023,45,0.476,49,4.12,50,4.12,104,0.018,105,0.018,109,1.86,126,5.03,127,4.453,129,1.235,132,1.86,282,3.648,283,3.648,561,2.245,563,2.245,622,3.648,1055,3.648,1440,4.837,1441,7.077,1442,4.837,1443,4.837,1444,4.837,1445,4.837,1446,5.905,1447,4.837,1448,6.807,1449,4.837,1450,4.837,1451,4.837,1452,4.837,1453,4.837,1454,5.905,1455,4.837,1456,4.837,1457,4.837,1458,4.837,1459,4.837,1460,4.837]],["title/index.html",[19,0.66,1461,2.972]],["body/index.html",[1,2.105,2,1.376,34,0.023,69,0.813,76,1.778,78,1.678,80,1.678,82,2.105,84,1.678,86,1.678,88,1.778,91,1.678,93,1.678,96,1.678,98,2.105,104,0.015,105,0.015,106,0.557,107,4.451,108,0.862,109,1.376,110,1.557,111,1.557,112,1.557,113,0.969,114,3.049,115,3.049,116,3.049,117,3.049,118,3.439,119,2.116,120,1.557,121,1.153,144,1.463,178,2.229,392,1.777,553,4.643,554,3.049,555,3.049,556,3.049,557,3.439,558,3.054,882,4.529,883,3.049,884,3.049,885,3.049,886,3.439,975,4.643,976,3.049,977,3.049,978,3.049,979,3.439,1015,4.529,1016,3.049,1017,3.049,1018,3.049,1019,3.439,1163,4.351,1164,3.049,1165,3.049,1166,3.049,1167,3.439,1266,4.529,1267,3.049,1268,3.049,1269,3.049,1270,3.439,1331,3.049,1357,4.529,1358,3.049,1359,3.049,1360,3.049,1361,3.439,1365,3.049,1366,3.049,1367,3.049,1461,3.049,1462,3.58,1463,3.58,1464,3.58,1465,3.58]],["title/modules.html",[108,1.151]],["body/modules.html",[34,0.018,104,0.018,105,0.018,107,3.244,108,1.147,118,2.967,127,5.362,553,3.244,557,2.967,558,2.073,882,3.244,886,2.967,975,3.244,979,2.967,1015,3.244,1019,2.967,1163,3.244,1167,2.967,1266,3.244,1270,2.967,1357,3.244,1361,2.967,1466,7.111,1467,7.111,1468,7.324,1469,7.057,1470,7.057]],["title/properties.html",[20,0.954,1439,2.475]],["body/properties.html",[20,1.253,34,0.022,84,1.678,104,0.02,105,0.02,217,1.778,1471,5.521,1472,5.521,1473,6.388,1474,5.521,1475,5.521,1476,5.521,1477,5.521]],["title/routes.html",[144,1.953]],["body/routes.html",[34,0.02,104,0.02,105,0.02,144,2.339]],["title/miscellaneous/variables.html",[1478,2.475,1479,3.579]],["body/miscellaneous/variables.html",[19,0.919,34,0.023,36,1.257,42,2.408,43,2.408,104,0.018,105,0.018,179,3.664,218,3.401,227,1.477,284,4.465,285,4.138,297,3.026,335,2.791,597,4.465,623,4.528,901,4.138,1401,5.043,1402,5.043,1436,4.138,1437,4.138,1478,4.138,1479,4.138,1480,4.859,1481,4.859,1482,4.859,1483,4.859,1484,4.859,1485,4.859,1486,4.859,1487,4.859,1488,4.859,1489,4.859,1490,4.859,1491,4.859,1492,5.921,1493,5.921]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/DatabaseService.html":{},"interfaces/Favourite.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"modules/FavsPageModule.html":{},"modules/FavsPageRoutingModule.html":{},"interfaces/Filter.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"interfaces/Goal.html":{},"injectables/GoalsService.html":{},"interfaces/Grocery.html":{},"components/GroceryPage.html":{},"modules/GroceryPageModule.html":{},"modules/GroceryPageRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Meal.html":{},"components/MealResultComponent.html":{},"interfaces/Nutrient.html":{},"components/NutrientsPage.html":{},"modules/NutrientsPageModule.html":{},"modules/NutrientsPageRoutingModule.html":{},"components/ProfileInputPage.html":{},"modules/ProfileInputPageModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"components/RecipePage.html":{},"modules/RecipePageModule.html":{},"modules/RecipePageRoutingModule.html":{},"modules/SharedModule.html":{},"components/UpdateGoalModalComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":321,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GetRecipeService.html":{},"injectables/GoalsService.html":{},"interfaces/Grocery.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1472,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":1460,"title":{},"body":{"dependencies.html":{}}}],["0.15s",{"_index":967,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0.3s",{"_index":879,"title":{},"body":{"components/GroceryPage.html":{},"components/LoginPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["0/1",{"_index":1403,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1419,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1420,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1404,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1418,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1421,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":1147,"title":{},"body":{"components/NutrientsPage.html":{}}}],["0px",{"_index":945,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{}}}],["1",{"_index":299,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/Grocery.html":{},"components/RecipePage.html":{}}}],["1.05",{"_index":1069,"title":{},"body":{"components/MealResultComponent.html":{}}}],["100",{"_index":915,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{}}}],["1000",{"_index":1337,"title":{},"body":{"components/RecipePage.html":{}}}],["10px",{"_index":918,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{}}}],["11/32",{"_index":1417,"title":{},"body":{"coverage.html":{}}}],["111",{"_index":959,"title":{},"body":{"components/HeaderComponent.html":{}}}],["12",{"_index":1463,"title":{},"body":{"index.html":{}}}],["12/25",{"_index":1429,"title":{},"body":{"coverage.html":{}}}],["13d8e2",{"_index":486,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["13px",{"_index":953,"title":{},"body":{"components/HeaderComponent.html":{}}}],["15/16",{"_index":1433,"title":{},"body":{"coverage.html":{}}}],["1500",{"_index":850,"title":{},"body":{"components/GroceryPage.html":{},"components/ProfileInputPage.html":{}}}],["15px",{"_index":1065,"title":{},"body":{"components/MealResultComponent.html":{}}}],["16px",{"_index":1152,"title":{},"body":{"components/NutrientsPage.html":{}}}],["17",{"_index":1462,"title":{},"body":{"index.html":{}}}],["17.0.4",{"_index":1441,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":1407,"title":{},"body":{"coverage.html":{}}}],["180",{"_index":1161,"title":{},"body":{"components/NutrientsPage.html":{}}}],["18px",{"_index":965,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{}}}],["1].original",{"_index":1341,"title":{},"body":{"components/RecipePage.html":{}}}],["1px",{"_index":542,"title":{},"body":{"components/FavsPage.html":{},"components/HeaderComponent.html":{},"components/NutrientsPage.html":{}}}],["2",{"_index":1055,"title":{},"body":{"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"dependencies.html":{}}}],["2.5",{"_index":1061,"title":{},"body":{"components/MealResultComponent.html":{}}}],["2.6.2",{"_index":1458,"title":{},"body":{"dependencies.html":{}}}],["2/11",{"_index":1408,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1406,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":1108,"title":{},"body":{"components/NutrientsPage.html":{}}}],["200ms",{"_index":1066,"title":{},"body":{"components/MealResultComponent.html":{}}}],["20px",{"_index":1150,"title":{},"body":{"components/NutrientsPage.html":{}}}],["22",{"_index":1465,"title":{},"body":{"index.html":{}}}],["248",{"_index":1046,"title":{},"body":{"components/MealResultComponent.html":{}}}],["2500",{"_index":1140,"title":{},"body":{"components/NutrientsPage.html":{}}}],["25px",{"_index":1076,"title":{},"body":{"components/MealResultComponent.html":{}}}],["28px",{"_index":928,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{}}}],["2px",{"_index":946,"title":{},"body":{"components/HeaderComponent.html":{},"components/NutrientsPage.html":{}}}],["3/6",{"_index":1405,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1410,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":955,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{}}}],["3000",{"_index":1231,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["300px",{"_index":1148,"title":{},"body":{"components/NutrientsPage.html":{}}}],["30px",{"_index":1355,"title":{},"body":{"components/RecipePage.html":{}}}],["32px",{"_index":961,"title":{},"body":{"components/HeaderComponent.html":{}}}],["34",{"_index":1416,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":949,"title":{},"body":{"components/HeaderComponent.html":{}}}],["3px",{"_index":954,"title":{},"body":{"components/HeaderComponent.html":{}}}],["4",{"_index":1464,"title":{},"body":{"index.html":{}}}],["4.5",{"_index":1346,"title":{},"body":{"components/RecipePage.html":{}}}],["4/5",{"_index":1431,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":1423,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":951,"title":{},"body":{"components/HeaderComponent.html":{}}}],["41",{"_index":1426,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":1409,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":1422,"title":{},"body":{"coverage.html":{}}}],["47e273",{"_index":1265,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["48",{"_index":1428,"title":{},"body":{"coverage.html":{}}}],["48px",{"_index":925,"title":{},"body":{"components/HeaderComponent.html":{}}}],["4px",{"_index":947,"title":{},"body":{"components/HeaderComponent.html":{}}}],["5",{"_index":937,"title":{},"body":{"components/HeaderComponent.html":{}}}],["5.0.6",{"_index":1448,"title":{},"body":{"dependencies.html":{}}}],["5.4.2",{"_index":1444,"title":{},"body":{"dependencies.html":{}}}],["5.5.0",{"_index":1446,"title":{},"body":{"dependencies.html":{}}}],["5/8",{"_index":1412,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":960,"title":{},"body":{"components/HeaderComponent.html":{},"components/RecipePage.html":{},"coverage.html":{}}}],["52",{"_index":1424,"title":{},"body":{"coverage.html":{}}}],["5820b27af054474c88676c2fae0c1c9d",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5px",{"_index":1060,"title":{},"body":{"components/MealResultComponent.html":{},"components/NutrientsPage.html":{}}}],["6/10",{"_index":1414,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1413,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1411,"title":{},"body":{"coverage.html":{}}}],["62.5",{"_index":1052,"title":{},"body":{"components/MealResultComponent.html":{}}}],["63",{"_index":1434,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":958,"title":{},"body":{"components/HeaderComponent.html":{}}}],["66",{"_index":950,"title":{},"body":{"components/HeaderComponent.html":{}}}],["6px",{"_index":963,"title":{},"body":{"components/HeaderComponent.html":{}}}],["7",{"_index":1331,"title":{},"body":{"components/RecipePage.html":{},"index.html":{}}}],["7.0.0",{"_index":1454,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1456,"title":{},"body":{"dependencies.html":{}}}],["7/11",{"_index":1435,"title":{},"body":{"coverage.html":{}}}],["7/17",{"_index":1427,"title":{},"body":{"coverage.html":{}}}],["75px",{"_index":1078,"title":{},"body":{"components/MealResultComponent.html":{}}}],["7px",{"_index":952,"title":{},"body":{"components/HeaderComponent.html":{}}}],["80",{"_index":1430,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":969,"title":{},"body":{"components/HeaderComponent.html":{}}}],["9/17",{"_index":1425,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":936,"title":{},"body":{"components/HeaderComponent.html":{}}}],["93",{"_index":1432,"title":{},"body":{"coverage.html":{}}}],["97.5",{"_index":1059,"title":{},"body":{"components/MealResultComponent.html":{}}}],["access",{"_index":1099,"title":{},"body":{"components/NutrientsPage.html":{},"components/RecipePage.html":{}}}],["accessors",{"_index":746,"title":{},"body":{"injectables/GoalsService.html":{}}}],["according",{"_index":357,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["achieve",{"_index":732,"title":{},"body":{"interfaces/Goal.html":{}}}],["achieving",{"_index":735,"title":{},"body":{"interfaces/Goal.html":{}}}],["activatedroute",{"_index":1096,"title":{},"body":{"components/NutrientsPage.html":{},"components/RecipePage.html":{}}}],["active",{"_index":266,"title":{},"body":{"injectables/DatabaseService.html":{},"components/HeaderComponent.html":{},"components/ProfileInputPage.html":{},"interfaces/User.html":{}}}],["active:number",{"_index":388,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/User.html":{}}}],["active=${active",{"_index":390,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["actual_component",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["add",{"_index":1246,"title":{},"body":{"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["added",{"_index":219,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["addfavourite",{"_index":186,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["addfavourite(favourite",{"_index":204,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["addgoal",{"_index":741,"title":{},"body":{"injectables/GoalsService.html":{}}}],["addgoal(goal",{"_index":749,"title":{},"body":{"injectables/GoalsService.html":{}}}],["addgrocery",{"_index":187,"title":{},"body":{"injectables/DatabaseService.html":{},"components/RecipePage.html":{}}}],["addgrocery(grocery",{"_index":224,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["addgrocerycont",{"_index":871,"title":{},"body":{"components/GroceryPage.html":{}}}],["adding",{"_index":366,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["adds",{"_index":207,"title":{},"body":{"injectables/DatabaseService.html":{},"components/GroceryPage.html":{},"components/RecipePage.html":{}}}],["addtogroceries",{"_index":792,"title":{},"body":{"components/GroceryPage.html":{},"components/RecipePage.html":{}}}],["addtogroceries(grocery",{"_index":1286,"title":{},"body":{"components/RecipePage.html":{}}}],["adduser",{"_index":188,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["adduser(name",{"_index":226,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["adduser(name:string",{"_index":386,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["adjust",{"_index":356,"title":{},"body":{"injectables/DatabaseService.html":{},"components/GroceryPage.html":{}}}],["align",{"_index":452,"title":{},"body":{"components/FavouriteComponent.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{}}}],["amount",{"_index":731,"title":{},"body":{"interfaces/Goal.html":{},"injectables/GoalsService.html":{},"interfaces/Nutrient.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["amount:number",{"_index":776,"title":{},"body":{"injectables/GoalsService.html":{}}}],["androidscheme",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":1440,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":561,"title":{},"body":{"modules/FavsPageModule.html":{},"modules/GroceryPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/NutrientsPageModule.html":{},"modules/ProfileInputPageModule.html":{},"modules/RecipePageModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{}}}],["angular/compiler",{"_index":1442,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/DatabaseService.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"modules/FavsPageModule.html":{},"modules/FavsPageRoutingModule.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"modules/GroceryPageModule.html":{},"modules/GroceryPageRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"modules/NutrientsPageModule.html":{},"modules/NutrientsPageRoutingModule.html":{},"components/ProfileInputPage.html":{},"modules/ProfileInputPageModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"components/RecipePage.html":{},"modules/RecipePageModule.html":{},"modules/RecipePageRoutingModule.html":{},"modules/SharedModule.html":{},"components/UpdateGoalModalComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":563,"title":{},"body":{"modules/FavsPageModule.html":{},"modules/GroceryPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/NutrientsPageModule.html":{},"modules/ProfileInputPageModule.html":{},"modules/RecipePageModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"modules/FavsPageRoutingModule.html":{},"components/GroceryPage.html":{},"modules/GroceryPageRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"modules/NutrientsPageRoutingModule.html":{},"components/ProfileInputPage.html":{},"modules/ProfileInputPageRoutingModule.html":{},"components/RecipePage.html":{},"modules/RecipePageRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":619,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"components/MealResultComponent.html":{}}}],["apikey",{"_index":597,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["app.component",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{},"coverage.html":{},"index.html":{}}}],["appid",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":358,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["apply",{"_index":641,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["applyfilter",{"_index":635,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["applyfilter(filter",{"_index":639,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["applyfilter(filter:filter",{"_index":679,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["appmodule",{"_index":107,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["appname",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":118,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["arial",{"_index":1146,"title":{},"body":{"components/NutrientsPage.html":{}}}],["around",{"_index":1075,"title":{},"body":{"components/MealResultComponent.html":{}}}],["arr",{"_index":813,"title":{},"body":{"components/GroceryPage.html":{}}}],["array",{"_index":524,"title":{},"body":{"components/FavsPage.html":{},"interfaces/Filter.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["assign",{"_index":829,"title":{},"body":{"components/GroceryPage.html":{}}}],["assigns",{"_index":293,"title":{},"body":{"injectables/DatabaseService.html":{},"components/LoginPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["async",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"components/FavouriteComponent.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["author",{"_index":1476,"title":{},"body":{"properties.html":{}}}],["auto",{"_index":838,"title":{},"body":{"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/RecipePage.html":{}}}],["autoincrement",{"_index":311,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["available",{"_index":1470,"title":{},"body":{"modules.html":{}}}],["await",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["back",{"_index":1093,"title":{},"body":{"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["background",{"_index":475,"title":{},"body":{"components/FavouriteComponent.html":{},"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{}}}],["bar",{"_index":1453,"title":{},"body":{"dependencies.html":{}}}],["barbase",{"_index":1261,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["barprogress",{"_index":1264,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["base",{"_index":680,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["based",{"_index":432,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"injectables/GetRecipeService.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/RecipePage.html":{}}}],["before",{"_index":1292,"title":{},"body":{"components/RecipePage.html":{}}}],["better",{"_index":912,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/RecipePage.html":{}}}],["between",{"_index":499,"title":{},"body":{"components/FavouriteComponent.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/ProfileInputPage.html":{}}}],["black",{"_index":1056,"title":{},"body":{"components/MealResultComponent.html":{},"components/NutrientsPage.html":{}}}],["bline",{"_index":1160,"title":{},"body":{"components/NutrientsPage.html":{}}}],["block",{"_index":939,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{}}}],["bold",{"_index":923,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{}}}],["bool",{"_index":815,"title":{},"body":{"components/GroceryPage.html":{}}}],["boolean",{"_index":254,"title":{},"body":{"injectables/DatabaseService.html":{},"components/GroceryPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["bootstrap",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/FavsPageModule.html":{},"modules/GroceryPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/NutrientsPageModule.html":{},"modules/ProfileInputPageModule.html":{},"modules/RecipePageModule.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["border",{"_index":447,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["bottom",{"_index":541,"title":{},"body":{"components/FavsPage.html":{},"components/NutrientsPage.html":{},"components/RecipePage.html":{}}}],["bottom:0",{"_index":466,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["bottom:15px",{"_index":547,"title":{},"body":{"components/FavsPage.html":{}}}],["bought",{"_index":786,"title":{},"body":{"interfaces/Grocery.html":{}}}],["bound",{"_index":996,"title":{},"body":{"components/LoginPage.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["box",{"_index":943,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{}}}],["breakfast",{"_index":590,"title":{},"body":{"interfaces/Filter.html":{}}}],["breaks",{"_index":1291,"title":{},"body":{"components/RecipePage.html":{}}}],["browse",{"_index":1468,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":550,"title":{},"body":{"components/FavsPage.html":{},"components/RecipePage.html":{}}}],["button,ion",{"_index":873,"title":{},"body":{"components/GroceryPage.html":{}}}],["button:hover",{"_index":874,"title":{},"body":{"components/GroceryPage.html":{},"components/LoginPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["calc(50",{"_index":1345,"title":{},"body":{"components/RecipePage.html":{}}}],["calculates",{"_index":1117,"title":{},"body":{"components/NutrientsPage.html":{}}}],["call",{"_index":826,"title":{},"body":{"components/GroceryPage.html":{}}}],["called",{"_index":995,"title":{},"body":{"components/LoginPage.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["caloric",{"_index":585,"title":{},"body":{"interfaces/Filter.html":{},"interfaces/Goal.html":{},"interfaces/Meal.html":{},"components/NutrientsPage.html":{}}}],["calorie",{"_index":754,"title":{},"body":{"injectables/GoalsService.html":{},"components/LoginPage.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{}}}],["caloriearr",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["calorieintake",{"_index":740,"title":{},"body":{"injectables/GoalsService.html":{},"components/LoginPage.html":{},"components/NutrientsPage.html":{}}}],["calorieratio",{"_index":1092,"title":{},"body":{"components/NutrientsPage.html":{}}}],["calories",{"_index":402,"title":{},"body":{"interfaces/Favourite.html":{},"injectables/GetRecipeService.html":{}}}],["cals",{"_index":316,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/Favourite.html":{},"interfaces/Meal.html":{},"components/MealResultComponent.html":{}}}],["cals}}kcals",{"_index":1041,"title":{},"body":{"components/MealResultComponent.html":{}}}],["cancel",{"_index":1179,"title":{},"body":{"components/ProfileInputPage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["capacitor",{"_index":282,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{},"dependencies.html":{}}}],["capacitor.config.ts",{"_index":1401,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["capacitor/android",{"_index":1445,"title":{},"body":{"dependencies.html":{}}}],["capacitor/app",{"_index":1447,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":1449,"title":{},"body":{"dependencies.html":{}}}],["capacitor/haptics",{"_index":1450,"title":{},"body":{"dependencies.html":{}}}],["capacitor/keyboard",{"_index":1451,"title":{},"body":{"dependencies.html":{}}}],["capacitor/splash",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["capacitor/status",{"_index":1452,"title":{},"body":{"dependencies.html":{}}}],["capacitorconfig",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capacitorsqlite",{"_index":281,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{}}}],["carbohydrate",{"_index":403,"title":{},"body":{"interfaces/Favourite.html":{},"interfaces/Filter.html":{},"interfaces/Meal.html":{}}}],["carbs",{"_index":315,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/Favourite.html":{},"injectables/GetRecipeService.html":{},"interfaces/Meal.html":{},"components/MealResultComponent.html":{},"components/ProfileInputPage.html":{}}}],["card",{"_index":1047,"title":{},"body":{"components/MealResultComponent.html":{}}}],["cases",{"_index":1338,"title":{},"body":{"components/RecipePage.html":{}}}],["catch",{"_index":341,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FavsPage.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["catch(err",{"_index":777,"title":{},"body":{"injectables/GoalsService.html":{}}}],["catch(error",{"_index":369,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{}}}],["catches",{"_index":513,"title":{},"body":{"components/FavsPage.html":{}}}],["cb6862",{"_index":491,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["center",{"_index":453,"title":{},"body":{"components/FavouriteComponent.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{}}}],["change",{"_index":837,"title":{},"body":{"components/GroceryPage.html":{},"components/HeaderComponent.html":{}}}],["class",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/DatabaseService.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"modules/FavsPageModule.html":{},"modules/FavsPageRoutingModule.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"modules/GroceryPageModule.html":{},"modules/GroceryPageRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"modules/NutrientsPageModule.html":{},"modules/NutrientsPageRoutingModule.html":{},"components/ProfileInputPage.html":{},"modules/ProfileInputPageModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"components/RecipePage.html":{},"modules/RecipePageModule.html":{},"modules/RecipePageRoutingModule.html":{},"modules/SharedModule.html":{},"components/UpdateGoalModalComponent.html":{}}}],["closes",{"_index":1380,"title":{},"body":{"components/UpdateGoalModalComponent.html":{}}}],["cluster_appmodule",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_favspagemodule",{"_index":554,"title":{},"body":{"modules/FavsPageModule.html":{},"index.html":{}}}],["cluster_favspagemodule_declarations",{"_index":556,"title":{},"body":{"modules/FavsPageModule.html":{},"index.html":{}}}],["cluster_favspagemodule_imports",{"_index":555,"title":{},"body":{"modules/FavsPageModule.html":{},"index.html":{}}}],["cluster_grocerypagemodule",{"_index":883,"title":{},"body":{"modules/GroceryPageModule.html":{},"index.html":{}}}],["cluster_grocerypagemodule_declarations",{"_index":884,"title":{},"body":{"modules/GroceryPageModule.html":{},"index.html":{}}}],["cluster_grocerypagemodule_imports",{"_index":885,"title":{},"body":{"modules/GroceryPageModule.html":{},"index.html":{}}}],["cluster_homepagemodule",{"_index":976,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_declarations",{"_index":977,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_imports",{"_index":978,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_loginpagemodule",{"_index":1016,"title":{},"body":{"modules/LoginPageModule.html":{},"index.html":{}}}],["cluster_loginpagemodule_declarations",{"_index":1018,"title":{},"body":{"modules/LoginPageModule.html":{},"index.html":{}}}],["cluster_loginpagemodule_imports",{"_index":1017,"title":{},"body":{"modules/LoginPageModule.html":{},"index.html":{}}}],["cluster_nutrientspagemodule",{"_index":1164,"title":{},"body":{"modules/NutrientsPageModule.html":{},"index.html":{}}}],["cluster_nutrientspagemodule_declarations",{"_index":1166,"title":{},"body":{"modules/NutrientsPageModule.html":{},"index.html":{}}}],["cluster_nutrientspagemodule_imports",{"_index":1165,"title":{},"body":{"modules/NutrientsPageModule.html":{},"index.html":{}}}],["cluster_profileinputpagemodule",{"_index":1267,"title":{},"body":{"modules/ProfileInputPageModule.html":{},"index.html":{}}}],["cluster_profileinputpagemodule_declarations",{"_index":1268,"title":{},"body":{"modules/ProfileInputPageModule.html":{},"index.html":{}}}],["cluster_profileinputpagemodule_imports",{"_index":1269,"title":{},"body":{"modules/ProfileInputPageModule.html":{},"index.html":{}}}],["cluster_recipepagemodule",{"_index":1358,"title":{},"body":{"modules/RecipePageModule.html":{},"index.html":{}}}],["cluster_recipepagemodule_declarations",{"_index":1359,"title":{},"body":{"modules/RecipePageModule.html":{},"index.html":{}}}],["cluster_recipepagemodule_imports",{"_index":1360,"title":{},"body":{"modules/RecipePageModule.html":{},"index.html":{}}}],["cluster_sharedmodule",{"_index":1365,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1366,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_exports",{"_index":1367,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["color",{"_index":476,"title":{},"body":{"components/FavouriteComponent.html":{},"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/ProfileInputPage.html":{}}}],["color:#ebb403",{"_index":504,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["color:#ff6700",{"_index":881,"title":{},"body":{"components/GroceryPage.html":{},"components/RecipePage.html":{}}}],["color:#ffa118",{"_index":875,"title":{},"body":{"components/GroceryPage.html":{},"components/LoginPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["color:black",{"_index":932,"title":{},"body":{"components/HeaderComponent.html":{}}}],["column",{"_index":1058,"title":{},"body":{"components/MealResultComponent.html":{}}}],["commonmodule",{"_index":560,"title":{},"body":{"modules/FavsPageModule.html":{},"modules/GroceryPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/NutrientsPageModule.html":{},"modules/ProfileInputPageModule.html":{},"modules/RecipePageModule.html":{},"modules/SharedModule.html":{}}}],["community/sqlite",{"_index":283,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{},"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"modules/FavsPageRoutingModule.html":{},"components/GroceryPage.html":{},"modules/GroceryPageRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"modules/NutrientsPageRoutingModule.html":{},"components/ProfileInputPage.html":{},"modules/ProfileInputPageRoutingModule.html":{},"components/RecipePage.html":{},"modules/RecipePageRoutingModule.html":{},"components/UpdateGoalModalComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["componentprops",{"_index":1237,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{},"index.html":{}}}],["composite",{"_index":834,"title":{},"body":{"components/GroceryPage.html":{}}}],["comps/favourite/favourite.component",{"_index":565,"title":{},"body":{"modules/FavsPageModule.html":{}}}],["comps/meal",{"_index":982,"title":{},"body":{"modules/HomePageModule.html":{}}}],["comps/update",{"_index":1219,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["config",{"_index":1402,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["conflicting",{"_index":349,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["connection",{"_index":241,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["consider",{"_index":588,"title":{},"body":{"interfaces/Filter.html":{}}}],["console.error('error",{"_index":361,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["console.error('observer",{"_index":1326,"title":{},"body":{"components/RecipePage.html":{}}}],["console.error('there",{"_index":778,"title":{},"body":{"injectables/GoalsService.html":{}}}],["console.log('successful",{"_index":1137,"title":{},"body":{"components/NutrientsPage.html":{}}}],["console.log(data[0",{"_index":1242,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["console.log(err",{"_index":536,"title":{},"body":{"components/FavsPage.html":{}}}],["console.log(newsummary.length",{"_index":1332,"title":{},"body":{"components/RecipePage.html":{}}}],["console.log(this.nutrientsarr",{"_index":1123,"title":{},"body":{"components/NutrientsPage.html":{}}}],["console.log(url",{"_index":723,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["const",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/DatabaseService.html":{},"modules/FavsPageRoutingModule.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"modules/GroceryPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/NutrientsPageRoutingModule.html":{},"components/ProfileInputPage.html":{},"modules/ProfileInputPageRoutingModule.html":{},"components/RecipePage.html":{},"modules/RecipePageRoutingModule.html":{}}}],["constraint",{"_index":212,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["construct",{"_index":626,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["constructor(database",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/LoginPage.html":{}}}],["constructor(databaseservice",{"_index":747,"title":{},"body":{"injectables/GoalsService.html":{}}}],["constructor(getter",{"_index":1282,"title":{},"body":{"components/RecipePage.html":{}}}],["constructor(http",{"_index":600,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{}}}],["constructor(modalcontroller",{"_index":1376,"title":{},"body":{"components/UpdateGoalModalComponent.html":{}}}],["constructor(private",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["constructor(recipedetailsgetter",{"_index":1095,"title":{},"body":{"components/NutrientsPage.html":{}}}],["constructor(router",{"_index":894,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/ProfileInputPage.html":{}}}],["container",{"_index":1350,"title":{},"body":{"components/RecipePage.html":{}}}],["containing",{"_index":614,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{}}}],["content",{"_index":404,"title":{},"body":{"interfaces/Favourite.html":{},"components/FavouriteComponent.html":{},"interfaces/Filter.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"interfaces/Meal.html":{},"components/MealResultComponent.html":{},"components/ProfileInputPage.html":{}}}],["contribution",{"_index":1085,"title":{},"body":{"interfaces/Nutrient.html":{}}}],["controller",{"_index":1187,"title":{},"body":{"components/ProfileInputPage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["controls",{"_index":816,"title":{},"body":{"components/GroceryPage.html":{}}}],["converts",{"_index":1116,"title":{},"body":{"components/NutrientsPage.html":{}}}],["corresponding",{"_index":898,"title":{},"body":{"components/HeaderComponent.html":{}}}],["count",{"_index":621,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{}}}],["couple",{"_index":1391,"title":{},"body":{"components/UpdateGoalModalComponent.html":{}}}],["cover",{"_index":484,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["coverage",{"_index":1398,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpf",{"_index":1074,"title":{},"body":{"components/MealResultComponent.html":{}}}],["create",{"_index":304,"title":{},"body":{"injectables/DatabaseService.html":{},"components/ProfileInputPage.html":{}}}],["creates",{"_index":292,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["criteria",{"_index":645,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["crud",{"_index":381,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["cuisine",{"_index":571,"title":{},"body":{"interfaces/Filter.html":{},"injectables/GetRecipeService.html":{}}}],["cuisine=\"+filter.cuisine",{"_index":708,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["current",{"_index":240,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/Goal.html":{},"injectables/GoalsService.html":{}}}],["currently",{"_index":1193,"title":{},"body":{"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["cursor",{"_index":941,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{}}}],["cutindex",{"_index":1327,"title":{},"body":{"components/RecipePage.html":{}}}],["cutting",{"_index":1301,"title":{},"body":{"components/RecipePage.html":{}}}],["daily",{"_index":1086,"title":{},"body":{"interfaces/Nutrient.html":{},"components/NutrientsPage.html":{}}}],["darkgray",{"_index":1159,"title":{},"body":{"components/NutrientsPage.html":{}}}],["data",{"_index":354,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GetRecipeService.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/LoginPage.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["data[1",{"_index":1243,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["database",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"interfaces/Goal.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/LoginPage.html":{},"components/RecipePage.html":{}}}],["database.service",{"_index":763,"title":{},"body":{"injectables/GoalsService.html":{}}}],["databaseservice",{"_index":28,"title":{"injectables/DatabaseService.html":{}},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/LoginPage.html":{},"components/RecipePage.html":{},"coverage.html":{}}}],["datareturned",{"_index":1239,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["db",{"_index":180,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/Favourite.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{}}}],["db_favs",{"_index":284,"title":{},"body":{"injectables/DatabaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/FavsPageModule.html":{},"modules/GroceryPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/NutrientsPageModule.html":{},"modules/ProfileInputPageModule.html":{},"modules/RecipePageModule.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["default",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"components/FavsPage.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/LoginPage.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"interfaces/Favourite.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"interfaces/Goal.html":{},"injectables/GoalsService.html":{},"interfaces/Grocery.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"interfaces/Meal.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["delay",{"_index":849,"title":{},"body":{"components/GroceryPage.html":{}}}],["delete",{"_index":233,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{}}}],["deleted",{"_index":423,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/ProfileInputPage.html":{}}}],["deleteerror",{"_index":360,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["deletefav",{"_index":411,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{}}}],["deletefav(fav",{"_index":421,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{}}}],["deletefavbyid",{"_index":189,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["deletefavbyid(id",{"_index":229,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["deletegoal",{"_index":1180,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["deletegoal(goal",{"_index":1194,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["deletegoalbyid",{"_index":742,"title":{},"body":{"injectables/GoalsService.html":{}}}],["deletegoalbyid(id",{"_index":751,"title":{},"body":{"injectables/GoalsService.html":{}}}],["deletegrocery",{"_index":793,"title":{},"body":{"components/GroceryPage.html":{}}}],["deletegrocery(grocery",{"_index":798,"title":{},"body":{"components/GroceryPage.html":{}}}],["deletegrocerybyname",{"_index":190,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["deletegrocerybyname(name",{"_index":234,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["deletequery",{"_index":350,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["deleteresult",{"_index":351,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["deletes",{"_index":231,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/ProfileInputPage.html":{}}}],["deleteuserbyid",{"_index":191,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["deleteuserbyid(id",{"_index":236,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["deleting",{"_index":214,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["deletion",{"_index":355,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["dependencies",{"_index":109,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/FavsPageModule.html":{},"modules/GroceryPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/NutrientsPageModule.html":{},"modules/ProfileInputPageModule.html":{},"modules/RecipePageModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"index.html":{}}}],["description",{"_index":217,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{},"properties.html":{}}}],["desired",{"_index":1253,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["detailed",{"_index":610,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"components/MealResultComponent.html":{}}}],["details",{"_index":430,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"injectables/GetRecipeDetailsService.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/RecipePage.html":{}}}],["details.service",{"_index":1112,"title":{},"body":{"components/NutrientsPage.html":{},"components/RecipePage.html":{}}}],["details.service.ts",{"_index":596,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"coverage.html":{}}}],["details.service.ts:13",{"_index":602,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{}}}],["details.service.ts:26",{"_index":609,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{}}}],["details.service.ts:38",{"_index":616,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{}}}],["diet",{"_index":572,"title":{},"body":{"interfaces/Filter.html":{},"injectables/GetRecipeService.html":{},"interfaces/Meal.html":{},"components/NutrientsPage.html":{}}}],["diet=\"+filter.diet.join",{"_index":712,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["dietary",{"_index":586,"title":{},"body":{"interfaces/Filter.html":{},"interfaces/Meal.html":{}}}],["different",{"_index":528,"title":{},"body":{"components/FavsPage.html":{}}}],["dinner",{"_index":592,"title":{},"body":{"interfaces/Filter.html":{}}}],["direction",{"_index":921,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{}}}],["direction:column",{"_index":468,"title":{},"body":{"components/FavouriteComponent.html":{},"components/LoginPage.html":{}}}],["direction:row",{"_index":459,"title":{},"body":{"components/FavouriteComponent.html":{},"components/GroceryPage.html":{}}}],["directive",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["directives",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["dismisses",{"_index":1192,"title":{},"body":{"components/ProfileInputPage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["display",{"_index":817,"title":{},"body":{"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/ProfileInputPage.html":{}}}],["display:flex",{"_index":457,"title":{},"body":{"components/FavouriteComponent.html":{},"components/GroceryPage.html":{},"components/LoginPage.html":{},"components/ProfileInputPage.html":{}}}],["div",{"_index":1050,"title":{},"body":{"components/MealResultComponent.html":{}}}],["documentation",{"_index":1399,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["during",{"_index":371,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FavsPage.html":{},"injectables/GoalsService.html":{}}}],["dynamic",{"_index":1443,"title":{},"body":{"dependencies.html":{}}}],["e.amount",{"_index":1133,"title":{},"body":{"components/NutrientsPage.html":{}}}],["e.amount}}{{e.unit",{"_index":1142,"title":{},"body":{"components/NutrientsPage.html":{}}}],["e.g",{"_index":589,"title":{},"body":{"interfaces/Filter.html":{}}}],["e.name",{"_index":1132,"title":{},"body":{"components/NutrientsPage.html":{}}}],["e.percentofdailyneeds",{"_index":1135,"title":{},"body":{"components/NutrientsPage.html":{}}}],["e.unit",{"_index":1134,"title":{},"body":{"components/NutrientsPage.html":{}}}],["ease",{"_index":880,"title":{},"body":{"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["ebb403",{"_index":488,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["element",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["elementref",{"_index":1216,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["empty",{"_index":1115,"title":{},"body":{"components/NutrientsPage.html":{}}}],["encryption",{"_index":298,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["end",{"_index":824,"title":{},"body":{"components/GroceryPage.html":{}}}],["ensures",{"_index":1384,"title":{},"body":{"components/UpdateGoalModalComponent.html":{}}}],["enter",{"_index":1252,"title":{},"body":{"components/ProfileInputPage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["entry",{"_index":216,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["environment",{"_index":623,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apikey",{"_index":618,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{}}}],["err",{"_index":535,"title":{},"body":{"components/FavsPage.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/RecipePage.html":{}}}],["error",{"_index":342,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FavsPage.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["error.message.includes('unique",{"_index":345,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["errors",{"_index":365,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FavsPage.html":{}}}],["etc",{"_index":738,"title":{},"body":{"interfaces/Goal.html":{}}}],["evenly",{"_index":462,"title":{},"body":{"components/FavouriteComponent.html":{},"components/GroceryPage.html":{},"components/LoginPage.html":{}}}],["eventemitter",{"_index":1388,"title":{},"body":{"components/UpdateGoalModalComponent.html":{}}}],["events",{"_index":1077,"title":{},"body":{"components/MealResultComponent.html":{}}}],["example",{"_index":382,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["execute",{"_index":326,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["execution",{"_index":768,"title":{},"body":{"injectables/GoalsService.html":{}}}],["existing",{"_index":215,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["exists",{"_index":307,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["export",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/DatabaseService.html":{},"interfaces/Favourite.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"modules/FavsPageModule.html":{},"modules/FavsPageRoutingModule.html":{},"interfaces/Filter.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"interfaces/Goal.html":{},"injectables/GoalsService.html":{},"interfaces/Grocery.html":{},"components/GroceryPage.html":{},"modules/GroceryPageModule.html":{},"modules/GroceryPageRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Meal.html":{},"components/MealResultComponent.html":{},"interfaces/Nutrient.html":{},"components/NutrientsPage.html":{},"modules/NutrientsPageModule.html":{},"modules/NutrientsPageRoutingModule.html":{},"components/ProfileInputPage.html":{},"modules/ProfileInputPageModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"components/RecipePage.html":{},"modules/RecipePageModule.html":{},"modules/RecipePageRoutingModule.html":{},"modules/SharedModule.html":{},"components/UpdateGoalModalComponent.html":{},"interfaces/User.html":{}}}],["exports",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FavsPageModule.html":{},"modules/FavsPageRoutingModule.html":{},"modules/GroceryPageModule.html":{},"modules/GroceryPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/NutrientsPageModule.html":{},"modules/NutrientsPageRoutingModule.html":{},"modules/ProfileInputPageModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"modules/RecipePageModule.html":{},"modules/RecipePageRoutingModule.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["exports:[headercomponent",{"_index":1371,"title":{},"body":{"modules/SharedModule.html":{}}}],["f5deb3",{"_index":477,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["facilitates",{"_index":1038,"title":{},"body":{"components/MealResultComponent.html":{}}}],["facts",{"_index":1141,"title":{},"body":{"components/NutrientsPage.html":{}}}],["failed",{"_index":346,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["false",{"_index":297,"title":{},"body":{"injectables/DatabaseService.html":{},"components/GroceryPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":920,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{}}}],["family:$p",{"_index":1353,"title":{},"body":{"components/RecipePage.html":{}}}],["family:$p3",{"_index":1349,"title":{},"body":{"components/RecipePage.html":{}}}],["fat",{"_index":405,"title":{},"body":{"interfaces/Favourite.html":{},"interfaces/Filter.html":{},"injectables/GetRecipeService.html":{},"interfaces/Meal.html":{},"components/MealResultComponent.html":{},"components/ProfileInputPage.html":{}}}],["fats",{"_index":317,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/Favourite.html":{}}}],["fav",{"_index":415,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{}}}],["fav.cals",{"_index":441,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["fav.carbs",{"_index":442,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["fav.fats",{"_index":443,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["fav.name",{"_index":440,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["fav.protein",{"_index":444,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["favimg",{"_index":445,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["favinfo",{"_index":449,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["favitem",{"_index":539,"title":{},"body":{"components/FavsPage.html":{}}}],["favoptions",{"_index":497,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["favourite",{"_index":205,"title":{"interfaces/Favourite.html":{}},"body":{"injectables/DatabaseService.html":{},"interfaces/Favourite.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"coverage.html":{}}}],["favourite'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["favourite.component.html",{"_index":410,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["favourite.component.scss",{"_index":409,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["favouritecomponent",{"_index":76,"title":{"components/FavouriteComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"modules/FavsPageModule.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{},"coverage.html":{},"index.html":{}}}],["favourites",{"_index":245,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FavsPage.html":{},"injectables/GoalsService.html":{},"components/LoginPage.html":{}}}],["favs",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/DatabaseService.html":{},"components/FavsPage.html":{},"modules/FavsPageModule.html":{},"injectables/GoalsService.html":{},"components/NutrientsPage.html":{}}}],["favs'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["favs.page",{"_index":564,"title":{},"body":{"modules/FavsPageModule.html":{},"modules/FavsPageRoutingModule.html":{}}}],["favs.page.html",{"_index":507,"title":{},"body":{"components/FavsPage.html":{}}}],["favs.page.scss",{"_index":506,"title":{},"body":{"components/FavsPage.html":{}}}],["favsdb",{"_index":285,"title":{},"body":{"injectables/DatabaseService.html":{},"miscellaneous/variables.html":{}}}],["favspage",{"_index":78,"title":{"components/FavsPage.html":{}},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"modules/FavsPageModule.html":{},"modules/FavsPageRoutingModule.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{},"coverage.html":{},"index.html":{}}}],["favspagemodule",{"_index":553,"title":{"modules/FavsPageModule.html":{}},"body":{"modules/FavsPageModule.html":{},"index.html":{},"modules.html":{}}}],["favspageroutingmodule",{"_index":557,"title":{"modules/FavsPageRoutingModule.html":{}},"body":{"modules/FavsPageModule.html":{},"modules/FavsPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["fetch",{"_index":727,"title":{},"body":{"injectables/GetRecipeService.html":{},"components/NutrientsPage.html":{}}}],["fetched",{"_index":1104,"title":{},"body":{"components/NutrientsPage.html":{}}}],["fetches",{"_index":1103,"title":{},"body":{"components/NutrientsPage.html":{},"components/RecipePage.html":{}}}],["fetching",{"_index":1138,"title":{},"body":{"components/NutrientsPage.html":{}}}],["ff6700",{"_index":544,"title":{},"body":{"components/FavsPage.html":{},"components/HeaderComponent.html":{},"components/MealResultComponent.html":{}}}],["ffa915",{"_index":970,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ffdc30",{"_index":916,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{}}}],["fff",{"_index":964,"title":{},"body":{"components/HeaderComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/DatabaseService.html":{},"interfaces/Favourite.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"modules/FavsPageModule.html":{},"modules/FavsPageRoutingModule.html":{},"interfaces/Filter.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"interfaces/Goal.html":{},"injectables/GoalsService.html":{},"interfaces/Grocery.html":{},"components/GroceryPage.html":{},"modules/GroceryPageModule.html":{},"modules/GroceryPageRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Meal.html":{},"components/MealResultComponent.html":{},"interfaces/Nutrient.html":{},"components/NutrientsPage.html":{},"modules/NutrientsPageModule.html":{},"modules/NutrientsPageRoutingModule.html":{},"components/ProfileInputPage.html":{},"modules/ProfileInputPageModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"components/RecipePage.html":{},"modules/RecipePageModule.html":{},"modules/RecipePageRoutingModule.html":{},"modules/SharedModule.html":{},"components/UpdateGoalModalComponent.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["filter",{"_index":569,"title":{"interfaces/Filter.html":{}},"body":{"interfaces/Filter.html":{},"injectables/GetRecipeService.html":{},"coverage.html":{}}}],["filtered",{"_index":646,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["filterform",{"_index":933,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filters",{"_index":642,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["flag",{"_index":785,"title":{},"body":{"interfaces/Grocery.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["flash",{"_index":485,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["flex",{"_index":458,"title":{},"body":{"components/FavouriteComponent.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/ProfileInputPage.html":{}}}],["flex:1",{"_index":1258,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["flow",{"_index":359,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["font",{"_index":463,"title":{},"body":{"components/FavouriteComponent.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["food",{"_index":593,"title":{},"body":{"interfaces/Filter.html":{}}}],["footnote",{"_index":1157,"title":{},"body":{"components/NutrientsPage.html":{}}}],["for(let",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["format",{"_index":1294,"title":{},"body":{"components/RecipePage.html":{}}}],["formatinstructions",{"_index":1279,"title":{},"body":{"components/RecipePage.html":{}}}],["formatinstructions(text",{"_index":1288,"title":{},"body":{"components/RecipePage.html":{}}}],["formats",{"_index":1290,"title":{},"body":{"components/RecipePage.html":{}}}],["formatted",{"_index":1295,"title":{},"body":{"components/RecipePage.html":{}}}],["formsmodule",{"_index":562,"title":{},"body":{"modules/FavsPageModule.html":{},"modules/GroceryPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/NutrientsPageModule.html":{},"modules/ProfileInputPageModule.html":{},"modules/RecipePageModule.html":{},"modules/SharedModule.html":{}}}],["framework",{"_index":1477,"title":{},"body":{"properties.html":{}}}],["front",{"_index":823,"title":{},"body":{"components/GroceryPage.html":{}}}],["full",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["func",{"_index":325,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["function",{"_index":771,"title":{},"body":{"injectables/GoalsService.html":{},"components/GroceryPage.html":{}}}],["g",{"_index":1042,"title":{},"body":{"components/MealResultComponent.html":{},"components/RecipePage.html":{}}}],["g.goalamount",{"_index":1248,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["g.name",{"_index":859,"title":{},"body":{"components/GroceryPage.html":{}}}],["g.type",{"_index":1247,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["gap",{"_index":1348,"title":{},"body":{"components/RecipePage.html":{}}}],["generates",{"_index":807,"title":{},"body":{"components/GroceryPage.html":{}}}],["getcalorieintake",{"_index":743,"title":{},"body":{"injectables/GoalsService.html":{}}}],["getdatabase",{"_index":192,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getdb",{"_index":761,"title":{},"body":{"injectables/GoalsService.html":{}}}],["getfavs",{"_index":193,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getgoals",{"_index":194,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{}}}],["getgrocery",{"_index":195,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getnutrition",{"_index":1094,"title":{},"body":{"components/NutrientsPage.html":{}}}],["getnutrition(id",{"_index":1101,"title":{},"body":{"components/NutrientsPage.html":{}}}],["getrecipe",{"_index":636,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["getrecipe(query",{"_index":647,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["getrecipe(query:string",{"_index":671,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["getrecipedetails",{"_index":598,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"components/RecipePage.html":{}}}],["getrecipedetails(id",{"_index":608,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{}}}],["getrecipedetails(id:number",{"_index":625,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{}}}],["getrecipedetailsservice",{"_index":594,"title":{"injectables/GetRecipeDetailsService.html":{}},"body":{"injectables/GetRecipeDetailsService.html":{},"components/NutrientsPage.html":{},"components/RecipePage.html":{},"coverage.html":{}}}],["getrecipenutritiondetails",{"_index":599,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{}}}],["getrecipenutritiondetails(id",{"_index":615,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{}}}],["getrecipenutritiondetails(id:number",{"_index":631,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{}}}],["getrecipeservice",{"_index":633,"title":{"injectables/GetRecipeService.html":{}},"body":{"injectables/GetRecipeService.html":{},"coverage.html":{}}}],["getter",{"_index":1284,"title":{},"body":{"components/RecipePage.html":{}}}],["getusers",{"_index":196,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["given",{"_index":654,"title":{},"body":{"injectables/GetRecipeService.html":{},"components/NutrientsPage.html":{}}}],["goal",{"_index":100,"title":{"interfaces/Goal.html":{}},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"interfaces/Goal.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"modules/SharedModule.html":{},"components/UpdateGoalModalComponent.html":{},"coverage.html":{}}}],["goal.goalamount",{"_index":770,"title":{},"body":{"injectables/GoalsService.html":{}}}],["goal.type",{"_index":769,"title":{},"body":{"injectables/GoalsService.html":{}}}],["goalactions",{"_index":868,"title":{},"body":{"components/GroceryPage.html":{},"components/LoginPage.html":{},"components/ProfileInputPage.html":{}}}],["goalamount",{"_index":323,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/Goal.html":{},"injectables/GoalsService.html":{},"components/ProfileInputPage.html":{}}}],["goalcontent",{"_index":863,"title":{},"body":{"components/GroceryPage.html":{},"components/LoginPage.html":{},"components/ProfileInputPage.html":{}}}],["goalitem",{"_index":862,"title":{},"body":{"components/GroceryPage.html":{},"components/LoginPage.html":{},"components/ProfileInputPage.html":{}}}],["goalprogress",{"_index":324,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/Goal.html":{},"injectables/GoalsService.html":{},"components/ProfileInputPage.html":{}}}],["goals",{"_index":182,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{},"components/LoginPage.html":{},"components/ProfileInputPage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["goalservice",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["goalsservice",{"_index":30,"title":{"injectables/GoalsService.html":{}},"body":{"components/AppComponent.html":{},"injectables/GoalsService.html":{},"components/ProfileInputPage.html":{},"coverage.html":{}}}],["goalupdatesuccess",{"_index":1175,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["good",{"_index":1390,"title":{},"body":{"components/UpdateGoalModalComponent.html":{}}}],["gradient(100",{"_index":914,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{}}}],["graph",{"_index":1469,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":1064,"title":{},"body":{"components/MealResultComponent.html":{},"components/ProfileInputPage.html":{}}}],["groceries",{"_index":183,"title":{},"body":{"injectables/DatabaseService.html":{},"components/GroceryPage.html":{},"components/LoginPage.html":{}}}],["grocery",{"_index":169,"title":{"interfaces/Grocery.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/DatabaseService.html":{},"interfaces/Grocery.html":{},"components/GroceryPage.html":{},"modules/GroceryPageModule.html":{},"components/LoginPage.html":{},"components/RecipePage.html":{},"coverage.html":{}}}],["grocery'},{'name",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["grocery.id",{"_index":1334,"title":{},"body":{"components/RecipePage.html":{}}}],["grocery.id.tostring",{"_index":836,"title":{},"body":{"components/GroceryPage.html":{}}}],["grocery.original",{"_index":1335,"title":{},"body":{"components/RecipePage.html":{}}}],["grocery.page",{"_index":888,"title":{},"body":{"modules/GroceryPageModule.html":{},"modules/GroceryPageRoutingModule.html":{}}}],["grocery.page.html",{"_index":789,"title":{},"body":{"components/GroceryPage.html":{}}}],["grocery.page.scss",{"_index":788,"title":{},"body":{"components/GroceryPage.html":{}}}],["grocerypage",{"_index":80,"title":{"components/GroceryPage.html":{}},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"modules/GroceryPageModule.html":{},"modules/GroceryPageRoutingModule.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{},"coverage.html":{},"index.html":{}}}],["grocerypagemodule",{"_index":882,"title":{"modules/GroceryPageModule.html":{}},"body":{"modules/GroceryPageModule.html":{},"index.html":{},"modules.html":{}}}],["grocerypageroutingmodule",{"_index":886,"title":{"modules/GroceryPageRoutingModule.html":{}},"body":{"modules/GroceryPageModule.html":{},"modules/GroceryPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["grotesk",{"_index":1044,"title":{},"body":{"components/MealResultComponent.html":{},"components/RecipePage.html":{}}}],["ground",{"_index":905,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/RecipePage.html":{}}}],["gs",{"_index":1250,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["h1",{"_index":927,"title":{},"body":{"components/HeaderComponent.html":{}}}],["h3",{"_index":919,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/RecipePage.html":{}}}],["h4",{"_index":866,"title":{},"body":{"components/GroceryPage.html":{},"components/LoginPage.html":{}}}],["handle",{"_index":343,"title":{},"body":{"injectables/DatabaseService.html":{},"components/RecipePage.html":{}}}],["handlemodaldata",{"_index":1181,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["handlemodaldata(data",{"_index":1196,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["handles",{"_index":210,"title":{},"body":{"injectables/DatabaseService.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["handling",{"_index":774,"title":{},"body":{"injectables/GoalsService.html":{},"components/ProfileInputPage.html":{}}}],["header",{"_index":891,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["header.component.html",{"_index":893,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":892,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":82,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"modules/SharedModule.html":{},"components/UpdateGoalModalComponent.html":{},"coverage.html":{},"index.html":{}}}],["height",{"_index":926,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{}}}],["height:200px",{"_index":549,"title":{},"body":{"components/FavsPage.html":{}}}],["height:24px",{"_index":474,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["height:40px",{"_index":974,"title":{},"body":{"components/HeaderComponent.html":{}}}],["height:50px",{"_index":455,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["height:5px",{"_index":1262,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["height:auto",{"_index":494,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["here",{"_index":814,"title":{},"body":{"components/GroceryPage.html":{}}}],["hide",{"_index":848,"title":{},"body":{"components/GroceryPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["hold",{"_index":1311,"title":{},"body":{"components/RecipePage.html":{}}}],["home",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"components/RecipePage.html":{}}}],["home'},{'name",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["home.page",{"_index":981,"title":{},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["homepage",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["homepagemodule",{"_index":975,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"index.html":{},"modules.html":{}}}],["homepageroutingmodule",{"_index":979,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["hook",{"_index":994,"title":{},"body":{"components/LoginPage.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["hover",{"_index":968,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{}}}],["html",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["http",{"_index":604,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{}}}],["httpclient",{"_index":601,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{}}}],["httpclientmodule",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["https",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://api.spoonacular.com/recipes/\"+id+\"/information?apikey=\"+this.apikey",{"_index":629,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{}}}],["https://api.spoonacular.com/recipes/\"+id+\"/nutritionwidget.json?apikey=\"+this.apikey",{"_index":632,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{}}}],["https://api.spoonacular.com/recipes/complexsearch?addrecipenutrition=true&apikey=\"+this.apikey",{"_index":681,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["https://api.spoonacular.com/recipes/complexsearch?query=\"+query+\"&addrecipenutrition=true&apikey=\"+this.apikey",{"_index":678,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["https://ionicframework.com",{"_index":1475,"title":{},"body":{"properties.html":{}}}],["icon",{"_index":503,"title":{},"body":{"components/FavouriteComponent.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/RecipePage.html":{}}}],["id",{"_index":232,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/Favourite.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"injectables/GetRecipeDetailsService.html":{},"interfaces/Goal.html":{},"injectables/GoalsService.html":{},"interfaces/Grocery.html":{},"components/GroceryPage.html":{},"interfaces/Meal.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{},"interfaces/User.html":{}}}],["id:number",{"_index":395,"title":{},"body":{"interfaces/Favourite.html":{},"interfaces/User.html":{}}}],["id:string",{"_index":377,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["id=${id",{"_index":374,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{}}}],["identifier",{"_index":394,"title":{},"body":{"interfaces/Favourite.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"interfaces/Goal.html":{},"interfaces/Grocery.html":{},"interfaces/Meal.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"coverage.html":{}}}],["if(filter.cuisine",{"_index":706,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["if(filter.diet.length",{"_index":710,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["if(filter.ingredients",{"_index":686,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["if(filter.intolerances.length",{"_index":718,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["if(filter.maxcals",{"_index":690,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["if(filter.maxcarbs",{"_index":694,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["if(filter.maxfat",{"_index":698,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["if(filter.minprotein",{"_index":702,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["if(filter.query",{"_index":682,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["if(filter.type",{"_index":714,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["image",{"_index":481,"title":{},"body":{"components/FavouriteComponent.html":{},"interfaces/Meal.html":{},"components/MealResultComponent.html":{},"components/RecipePage.html":{}}}],["img",{"_index":446,"title":{},"body":{"components/FavouriteComponent.html":{},"components/HeaderComponent.html":{},"components/RecipePage.html":{}}}],["implements",{"_index":407,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["import",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/DatabaseService.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"modules/FavsPageModule.html":{},"modules/FavsPageRoutingModule.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"modules/GroceryPageModule.html":{},"modules/GroceryPageRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"modules/NutrientsPageModule.html":{},"modules/NutrientsPageRoutingModule.html":{},"components/ProfileInputPage.html":{},"modules/ProfileInputPageModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"components/RecipePage.html":{},"modules/RecipePageModule.html":{},"modules/RecipePageRoutingModule.html":{},"modules/SharedModule.html":{},"components/UpdateGoalModalComponent.html":{}}}],["import('./favs/favs.module').then",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./grocery/grocery.module').then",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./home/home.module').then",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./login/login.module').then",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./nutrients/nutrients.module').then",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./recipe/recipe.module').then",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":1012,"title":{},"body":{"components/LoginPage.html":{}}}],["imports",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FavsPageModule.html":{},"modules/FavsPageRoutingModule.html":{},"modules/GroceryPageModule.html":{},"modules/GroceryPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/NutrientsPageModule.html":{},"modules/NutrientsPageRoutingModule.html":{},"modules/ProfileInputPageModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"modules/RecipePageModule.html":{},"modules/RecipePageRoutingModule.html":{},"modules/SharedModule.html":{}}}],["include",{"_index":582,"title":{},"body":{"interfaces/Filter.html":{}}}],["includeingredients=\"+filter.ingredients",{"_index":688,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["increment",{"_index":839,"title":{},"body":{"components/GroceryPage.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"interfaces/Favourite.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"interfaces/Filter.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"interfaces/Goal.html":{},"injectables/GoalsService.html":{},"interfaces/Grocery.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"interfaces/Meal.html":{},"components/MealResultComponent.html":{},"interfaces/Nutrient.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":1224,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["indicating",{"_index":255,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/Grocery.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/DatabaseService.html":{},"interfaces/Favourite.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"modules/FavsPageModule.html":{},"modules/FavsPageRoutingModule.html":{},"interfaces/Filter.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"interfaces/Goal.html":{},"injectables/GoalsService.html":{},"interfaces/Grocery.html":{},"components/GroceryPage.html":{},"modules/GroceryPageModule.html":{},"modules/GroceryPageRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Meal.html":{},"components/MealResultComponent.html":{},"interfaces/Nutrient.html":{},"components/NutrientsPage.html":{},"modules/NutrientsPageModule.html":{},"modules/NutrientsPageRoutingModule.html":{},"components/ProfileInputPage.html":{},"modules/ProfileInputPageModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"components/RecipePage.html":{},"modules/RecipePageModule.html":{},"modules/RecipePageRoutingModule.html":{},"modules/SharedModule.html":{},"components/UpdateGoalModalComponent.html":{},"interfaces/User.html":{}}}],["information",{"_index":611,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"interfaces/Meal.html":{},"components/MealResultComponent.html":{},"components/RecipePage.html":{}}}],["ingredients",{"_index":573,"title":{},"body":{"interfaces/Filter.html":{},"injectables/GetRecipeService.html":{},"components/RecipePage.html":{}}}],["ingredients[i",{"_index":1340,"title":{},"body":{"components/RecipePage.html":{}}}],["initapp",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["initgoal",{"_index":1182,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["initialization",{"_index":257,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{}}}],["initialize",{"_index":1225,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["initialized",{"_index":997,"title":{},"body":{"components/LoginPage.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["initializeplugin",{"_index":197,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["initializes",{"_index":253,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/ProfileInputPage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["initially",{"_index":1114,"title":{},"body":{"components/NutrientsPage.html":{}}}],["injectable",{"_index":177,"title":{"injectables/DatabaseService.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"injectables/GoalsService.html":{}},"body":{"injectables/DatabaseService.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"injectables/GoalsService.html":{},"coverage.html":{}}}],["injectables",{"_index":178,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"injectables/GoalsService.html":{},"index.html":{}}}],["inline",{"_index":938,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{}}}],["input",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FavouriteComponent.html":{},"injectables/GetRecipeService.html":{},"components/MealResultComponent.html":{},"components/ProfileInputPage.html":{},"modules/ProfileInputPageModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"components/UpdateGoalModalComponent.html":{}}}],["input'},{'name",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["input.module').then",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["input.module.ts",{"_index":1271,"title":{},"body":{"modules/ProfileInputPageModule.html":{}}}],["input.page",{"_index":1272,"title":{},"body":{"modules/ProfileInputPageModule.html":{},"modules/ProfileInputPageRoutingModule.html":{}}}],["input.page.html",{"_index":1174,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["input.page.scss",{"_index":1173,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["input.page.ts",{"_index":1172,"title":{},"body":{"components/ProfileInputPage.html":{},"coverage.html":{}}}],["input.page.ts:101",{"_index":1207,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["input.page.ts:118",{"_index":1203,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["input.page.ts:137",{"_index":1197,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["input.page.ts:16",{"_index":1209,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["input.page.ts:19",{"_index":1215,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["input.page.ts:22",{"_index":1212,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["input.page.ts:29",{"_index":1211,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["input.page.ts:32",{"_index":1213,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["input.page.ts:35",{"_index":1210,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["input.page.ts:38",{"_index":1186,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["input.page.ts:52",{"_index":1201,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["input.page.ts:60",{"_index":1190,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["input.page.ts:67",{"_index":1191,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["input.page.ts:74",{"_index":1199,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["input.page.ts:92",{"_index":1195,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["input/profile",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ProfileInputPage.html":{},"modules/ProfileInputPageModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"coverage.html":{}}}],["inputs",{"_index":414,"title":{},"body":{"components/FavouriteComponent.html":{},"components/GroceryPage.html":{},"components/MealResultComponent.html":{},"components/UpdateGoalModalComponent.html":{}}}],["insert",{"_index":337,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{}}}],["inset",{"_index":956,"title":{},"body":{"components/HeaderComponent.html":{}}}],["instance",{"_index":243,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{}}}],["instructions",{"_index":1276,"title":{},"body":{"components/RecipePage.html":{}}}],["intake",{"_index":737,"title":{},"body":{"interfaces/Goal.html":{},"injectables/GoalsService.html":{},"components/LoginPage.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{}}}],["integer",{"_index":308,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["interact",{"_index":1285,"title":{},"body":{"components/RecipePage.html":{}}}],["interacting",{"_index":287,"title":{},"body":{"injectables/DatabaseService.html":{},"components/LoginPage.html":{}}}],["interface",{"_index":391,"title":{"interfaces/Favourite.html":{},"interfaces/Filter.html":{},"interfaces/Goal.html":{},"interfaces/Grocery.html":{},"interfaces/Meal.html":{},"interfaces/Nutrient.html":{},"interfaces/User.html":{}},"body":{"interfaces/Favourite.html":{},"components/FavsPage.html":{},"interfaces/Filter.html":{},"interfaces/Goal.html":{},"interfaces/Grocery.html":{},"interfaces/Meal.html":{},"interfaces/Nutrient.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":392,"title":{},"body":{"interfaces/Favourite.html":{},"interfaces/Filter.html":{},"interfaces/Goal.html":{},"interfaces/Grocery.html":{},"interfaces/Meal.html":{},"interfaces/Nutrient.html":{},"interfaces/User.html":{},"index.html":{}}}],["interfaces/favourite",{"_index":278,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FavsPage.html":{}}}],["interfaces/filter",{"_index":670,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["interfaces/goal",{"_index":280,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{},"components/ProfileInputPage.html":{}}}],["interfaces/grocery",{"_index":279,"title":{},"body":{"injectables/DatabaseService.html":{},"components/GroceryPage.html":{},"components/RecipePage.html":{}}}],["interfaces/nutrient",{"_index":522,"title":{},"body":{"components/FavsPage.html":{},"components/NutrientsPage.html":{}}}],["interfaces/user",{"_index":277,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["intolerances",{"_index":574,"title":{},"body":{"interfaces/Filter.html":{},"injectables/GetRecipeService.html":{}}}],["intolerances=\"+filter.intolerances.join",{"_index":720,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["io.ionic.starter",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ion",{"_index":502,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["ionic",{"_index":1473,"title":{},"body":{"properties.html":{}}}],["ionic/angular",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/FavsPageModule.html":{},"modules/GroceryPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/NutrientsPageModule.html":{},"components/ProfileInputPage.html":{},"modules/ProfileInputPageModule.html":{},"modules/RecipePageModule.html":{},"modules/SharedModule.html":{},"components/UpdateGoalModalComponent.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/FavsPageModule.html":{},"modules/GroceryPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/NutrientsPageModule.html":{},"modules/ProfileInputPageModule.html":{},"modules/RecipePageModule.html":{},"modules/SharedModule.html":{}}}],["ionicmodule.forroot",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicons",{"_index":1455,"title":{},"body":{"dependencies.html":{}}}],["ionicroutestrategy",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["isbought",{"_index":320,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/Grocery.html":{},"components/GroceryPage.html":{},"components/RecipePage.html":{}}}],["issuccess",{"_index":842,"title":{},"body":{"components/GroceryPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["item",{"_index":209,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"injectables/GoalsService.html":{},"interfaces/Grocery.html":{},"components/GroceryPage.html":{},"components/RecipePage.html":{}}}],["item.original",{"_index":1339,"title":{},"body":{"components/RecipePage.html":{}}}],["items",{"_index":469,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/ProfileInputPage.html":{}}}],["items:center",{"_index":1009,"title":{},"body":{"components/LoginPage.html":{}}}],["jakey",{"_index":1005,"title":{},"body":{"components/LoginPage.html":{}}}],["json.stringify(filter",{"_index":725,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["justify",{"_index":460,"title":{},"body":{"components/FavouriteComponent.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/ProfileInputPage.html":{}}}],["kcals",{"_index":1249,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["key",{"_index":310,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"components/GroceryPage.html":{}}}],["label",{"_index":1145,"title":{},"body":{"components/NutrientsPage.html":{}}}],["large",{"_index":931,"title":{},"body":{"components/HeaderComponent.html":{}}}],["left",{"_index":1155,"title":{},"body":{"components/NutrientsPage.html":{}}}],["left:45",{"_index":501,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["left:7.5",{"_index":1007,"title":{},"body":{"components/LoginPage.html":{}}}],["left:75",{"_index":552,"title":{},"body":{"components/FavsPage.html":{}}}],["legend",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"modules/FavsPageModule.html":{},"components/GroceryPage.html":{},"modules/GroceryPageModule.html":{},"components/HeaderComponent.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"modules/NutrientsPageModule.html":{},"components/ProfileInputPage.html":{},"modules/ProfileInputPageModule.html":{},"components/RecipePage.html":{},"modules/RecipePageModule.html":{},"modules/SharedModule.html":{},"components/UpdateGoalModalComponent.html":{},"index.html":{}}}],["lifecycle",{"_index":993,"title":{},"body":{"components/LoginPage.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["lilita",{"_index":907,"title":{},"body":{"components/HeaderComponent.html":{}}}],["limit",{"_index":1214,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["line",{"_index":906,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/RecipePage.html":{}}}],["link",{"_index":398,"title":{},"body":{"interfaces/Favourite.html":{},"interfaces/Meal.html":{}}}],["links",{"_index":822,"title":{},"body":{"components/GroceryPage.html":{}}}],["list",{"_index":858,"title":{},"body":{"components/GroceryPage.html":{},"components/LoginPage.html":{}}}],["load",{"_index":828,"title":{},"body":{"components/GroceryPage.html":{}}}],["loadcalorieintake",{"_index":744,"title":{},"body":{"injectables/GoalsService.html":{}}}],["loadchildren",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadfavs",{"_index":198,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["loadgoals",{"_index":199,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{}}}],["loadgrocery",{"_index":200,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["loading",{"_index":515,"title":{},"body":{"components/FavsPage.html":{}}}],["loads",{"_index":260,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FavsPage.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/LoginPage.html":{},"components/ProfileInputPage.html":{}}}],["loadusers",{"_index":201,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["log",{"_index":853,"title":{},"body":{"components/GroceryPage.html":{}}}],["login",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/ProfileInputPage.html":{}}}],["login'},{'name",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["login.page",{"_index":1021,"title":{},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{}}}],["login.page.html",{"_index":988,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":987,"title":{},"body":{"components/LoginPage.html":{}}}],["loginpage",{"_index":86,"title":{"components/LoginPage.html":{}},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{},"coverage.html":{},"index.html":{}}}],["loginpagemodule",{"_index":1015,"title":{"modules/LoginPageModule.html":{}},"body":{"modules/LoginPageModule.html":{},"index.html":{},"modules.html":{}}}],["loginpageroutingmodule",{"_index":1019,"title":{"modules/LoginPageRoutingModule.html":{}},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["logs",{"_index":514,"title":{},"body":{"components/FavsPage.html":{},"components/NutrientsPage.html":{}}}],["loop",{"_index":1394,"title":{},"body":{"components/UpdateGoalModalComponent.html":{}}}],["lunch",{"_index":591,"title":{},"body":{"interfaces/Filter.html":{}}}],["m",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.favspagemodule",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.grocerypagemodule",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.loginpagemodule",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.nutrientspagemodule",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.profileinputpagemodule",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.recipepagemodule",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["macro",{"_index":467,"title":{},"body":{"components/FavouriteComponent.html":{},"components/UpdateGoalModalComponent.html":{}}}],["macrocont",{"_index":456,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["made",{"_index":775,"title":{},"body":{"injectables/GoalsService.html":{}}}],["make",{"_index":726,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["making",{"_index":606,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{}}}],["management",{"_index":291,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["managing",{"_index":1188,"title":{},"body":{"components/ProfileInputPage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["margarine",{"_index":1343,"title":{},"body":{"components/RecipePage.html":{}}}],["margin",{"_index":465,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["margin:0",{"_index":870,"title":{},"body":{"components/GroceryPage.html":{},"components/LoginPage.html":{},"components/ProfileInputPage.html":{}}}],["margin:1px",{"_index":451,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["margin:25px",{"_index":1356,"title":{},"body":{"components/RecipePage.html":{}}}],["margin:5px",{"_index":495,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["margin:auto",{"_index":1351,"title":{},"body":{"components/RecipePage.html":{}}}],["mask",{"_index":480,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["matching",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/DatabaseService.html":{},"interfaces/Favourite.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"modules/FavsPageModule.html":{},"modules/FavsPageRoutingModule.html":{},"interfaces/Filter.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"interfaces/Goal.html":{},"injectables/GoalsService.html":{},"interfaces/Grocery.html":{},"components/GroceryPage.html":{},"modules/GroceryPageModule.html":{},"modules/GroceryPageRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Meal.html":{},"components/MealResultComponent.html":{},"interfaces/Nutrient.html":{},"components/NutrientsPage.html":{},"modules/NutrientsPageModule.html":{},"modules/NutrientsPageRoutingModule.html":{},"components/ProfileInputPage.html":{},"modules/ProfileInputPageModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"components/RecipePage.html":{},"modules/RecipePageModule.html":{},"modules/RecipePageRoutingModule.html":{},"modules/SharedModule.html":{},"components/UpdateGoalModalComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.random",{"_index":855,"title":{},"body":{"components/GroceryPage.html":{}}}],["max",{"_index":548,"title":{},"body":{"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{}}}],["maxcalories=\"+number(filter.maxcals",{"_index":692,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["maxcals",{"_index":575,"title":{},"body":{"interfaces/Filter.html":{},"injectables/GetRecipeService.html":{}}}],["maxcarbs",{"_index":576,"title":{},"body":{"interfaces/Filter.html":{},"injectables/GetRecipeService.html":{}}}],["maxcarbs=\"+number(filter.maxcarbs",{"_index":696,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["maxfat",{"_index":577,"title":{},"body":{"interfaces/Filter.html":{},"injectables/GetRecipeService.html":{}}}],["maxfat=\"+number(filter.maxfat",{"_index":700,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["maximum",{"_index":584,"title":{},"body":{"interfaces/Filter.html":{},"injectables/GetRecipeService.html":{},"components/GroceryPage.html":{}}}],["meal",{"_index":89,"title":{"interfaces/Meal.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Favourite.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"interfaces/Filter.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"interfaces/Meal.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{},"coverage.html":{}}}],["mealresultcomponent",{"_index":88,"title":{"components/MealResultComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{},"coverage.html":{},"index.html":{}}}],["meals",{"_index":581,"title":{},"body":{"interfaces/Filter.html":{}}}],["measurement",{"_index":1083,"title":{},"body":{"interfaces/Nutrient.html":{}}}],["meat",{"_index":490,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["meat,.flash",{"_index":472,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["message",{"_index":819,"title":{},"body":{"components/GroceryPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["methods",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["milliseconds",{"_index":851,"title":{},"body":{"components/GroceryPage.html":{}}}],["min",{"_index":809,"title":{},"body":{"components/GroceryPage.html":{}}}],["mincarbs",{"_index":578,"title":{},"body":{"interfaces/Filter.html":{}}}],["minimum",{"_index":583,"title":{},"body":{"interfaces/Filter.html":{},"injectables/GetRecipeService.html":{},"components/GroceryPage.html":{}}}],["minprotein",{"_index":579,"title":{},"body":{"interfaces/Filter.html":{},"injectables/GetRecipeService.html":{}}}],["minprotein=\"+number(filter.minprotein",{"_index":704,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["minus",{"_index":1347,"title":{},"body":{"components/RecipePage.html":{}}}],["minutes",{"_index":1302,"title":{},"body":{"components/RecipePage.html":{}}}],["miscellaneous",{"_index":1478,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["modal.component",{"_index":1221,"title":{},"body":{"components/ProfileInputPage.html":{},"modules/SharedModule.html":{}}}],["modal.component.html",{"_index":1374,"title":{},"body":{"components/UpdateGoalModalComponent.html":{}}}],["modal.component.scss",{"_index":1373,"title":{},"body":{"components/UpdateGoalModalComponent.html":{}}}],["modal.component.ts",{"_index":1372,"title":{},"body":{"components/UpdateGoalModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:11",{"_index":1378,"title":{},"body":{"components/UpdateGoalModalComponent.html":{}}}],["modal.component.ts:13",{"_index":1377,"title":{},"body":{"components/UpdateGoalModalComponent.html":{}}}],["modal.component.ts:21",{"_index":1385,"title":{},"body":{"components/UpdateGoalModalComponent.html":{}}}],["modal.component.ts:26",{"_index":1386,"title":{},"body":{"components/UpdateGoalModalComponent.html":{}}}],["modal.component.ts:33",{"_index":1379,"title":{},"body":{"components/UpdateGoalModalComponent.html":{}}}],["modal.ondiddismiss().then((datareturned",{"_index":1238,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["modal.present",{"_index":1241,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["modal/update",{"_index":1220,"title":{},"body":{"components/ProfileInputPage.html":{},"modules/SharedModule.html":{},"components/UpdateGoalModalComponent.html":{},"coverage.html":{}}}],["modalcomponent",{"_index":1176,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["modalcontroller",{"_index":1185,"title":{},"body":{"components/ProfileInputPage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["modalinit",{"_index":1177,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["modals",{"_index":1189,"title":{},"body":{"components/ProfileInputPage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["model",{"_index":821,"title":{},"body":{"components/GroceryPage.html":{}}}],["module",{"_index":106,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FavsPageModule.html":{},"modules/FavsPageRoutingModule.html":{},"modules/GroceryPageModule.html":{},"modules/GroceryPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/NutrientsPageModule.html":{},"modules/NutrientsPageRoutingModule.html":{},"modules/ProfileInputPageModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"modules/RecipePageModule.html":{},"modules/RecipePageRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FavsPageModule.html":{},"modules/GroceryPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/NutrientsPageModule.html":{},"modules/ProfileInputPageModule.html":{},"modules/RecipePageModule.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["modules",{"_index":108,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FavsPageModule.html":{},"modules/FavsPageRoutingModule.html":{},"modules/GroceryPageModule.html":{},"modules/GroceryPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/NutrientsPageModule.html":{},"modules/NutrientsPageRoutingModule.html":{},"modules/ProfileInputPageModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"modules/RecipePageModule.html":{},"modules/RecipePageRoutingModule.html":{},"modules/SharedModule.html":{},"index.html":{},"modules.html":{}}}],["modules/shared/shared.module",{"_index":566,"title":{},"body":{"modules/FavsPageModule.html":{},"modules/GroceryPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfileInputPageModule.html":{},"modules/RecipePageModule.html":{}}}],["n",{"_index":1131,"title":{},"body":{"components/NutrientsPage.html":{}}}],["name",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"interfaces/Favourite.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"injectables/GoalsService.html":{},"interfaces/Grocery.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"interfaces/Nutrient.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{},"interfaces/User.html":{}}}],["name:string",{"_index":397,"title":{},"body":{"interfaces/Favourite.html":{},"interfaces/User.html":{}}}],["nav",{"_index":794,"title":{},"body":{"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{}}}],["nav(path",{"_index":800,"title":{},"body":{"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{}}}],["nav(path:string",{"_index":856,"title":{},"body":{"components/GroceryPage.html":{},"components/HeaderComponent.html":{}}}],["navbtn",{"_index":934,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navbtn2",{"_index":935,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navhome",{"_index":1280,"title":{},"body":{"components/RecipePage.html":{}}}],["navigate",{"_index":803,"title":{},"body":{"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{}}}],["navigates",{"_index":428,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["navigation",{"_index":420,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["needed",{"_index":852,"title":{},"body":{"components/GroceryPage.html":{}}}],["needs",{"_index":1087,"title":{},"body":{"interfaces/Nutrient.html":{},"components/UpdateGoalModalComponent.html":{}}}],["new",{"_index":208,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GetRecipeService.html":{},"components/GroceryPage.html":{},"components/LoginPage.html":{},"components/ProfileInputPage.html":{},"coverage.html":{}}}],["newgoal",{"_index":1178,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["newgrocery",{"_index":790,"title":{},"body":{"components/GroceryPage.html":{},"components/RecipePage.html":{}}}],["newnutrients",{"_index":1129,"title":{},"body":{"components/NutrientsPage.html":{}}}],["newnutrients.nutrients.foreach((e",{"_index":1130,"title":{},"body":{"components/NutrientsPage.html":{}}}],["newsummary",{"_index":1329,"title":{},"body":{"components/RecipePage.html":{}}}],["newusername",{"_index":989,"title":{},"body":{"components/LoginPage.html":{}}}],["next",{"_index":1128,"title":{},"body":{"components/NutrientsPage.html":{}}}],["ng",{"_index":820,"title":{},"body":{"components/GroceryPage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["ngmodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FavsPageModule.html":{},"modules/FavsPageRoutingModule.html":{},"modules/GroceryPageModule.html":{},"modules/GroceryPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/NutrientsPageModule.html":{},"modules/NutrientsPageRoutingModule.html":{},"modules/ProfileInputPageModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"modules/RecipePageModule.html":{},"modules/RecipePageRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngoninit",{"_index":412,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["nheader",{"_index":1149,"title":{},"body":{"components/NutrientsPage.html":{}}}],["nomster",{"_index":901,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["none",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/MealResultComponent.html":{}}}],["nowrap",{"_index":1255,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["null",{"_index":313,"title":{},"body":{"injectables/DatabaseService.html":{},"components/ProfileInputPage.html":{}}}],["number",{"_index":267,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/Favourite.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"injectables/GetRecipeDetailsService.html":{},"interfaces/Goal.html":{},"injectables/GoalsService.html":{},"interfaces/Grocery.html":{},"components/GroceryPage.html":{},"interfaces/Meal.html":{},"components/MealResultComponent.html":{},"interfaces/Nutrient.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{},"interfaces/User.html":{}}}],["number(data[1",{"_index":1245,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["number(sessionstorage.getitem('calorieintake",{"_index":1106,"title":{},"body":{"components/NutrientsPage.html":{}}}],["number(this.route.snapshot.parammap.get('id",{"_index":1121,"title":{},"body":{"components/NutrientsPage.html":{},"components/RecipePage.html":{}}}],["number:'1.2",{"_index":1143,"title":{},"body":{"components/NutrientsPage.html":{}}}],["number:\\'1.2",{"_index":1162,"title":{},"body":{"components/NutrientsPage.html":{}}}],["numbers",{"_index":1293,"title":{},"body":{"components/RecipePage.html":{}}}],["nutmodal",{"_index":1144,"title":{},"body":{"components/NutrientsPage.html":{}}}],["nutrient",{"_index":519,"title":{"interfaces/Nutrient.html":{}},"body":{"components/FavsPage.html":{},"components/MealResultComponent.html":{},"interfaces/Nutrient.html":{},"components/NutrientsPage.html":{},"coverage.html":{}}}],["nutrient's",{"_index":1084,"title":{},"body":{"interfaces/Nutrient.html":{}}}],["nutrientnav",{"_index":509,"title":{},"body":{"components/FavsPage.html":{}}}],["nutrientnav(id",{"_index":517,"title":{},"body":{"components/FavsPage.html":{}}}],["nutrientnav(id:number",{"_index":537,"title":{},"body":{"components/FavsPage.html":{}}}],["nutrients",{"_index":527,"title":{},"body":{"components/FavsPage.html":{},"components/NutrientsPage.html":{},"modules/NutrientsPageModule.html":{}}}],["nutrients'},{'name",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["nutrients.page",{"_index":1169,"title":{},"body":{"modules/NutrientsPageModule.html":{},"modules/NutrientsPageRoutingModule.html":{}}}],["nutrients.page.html",{"_index":1091,"title":{},"body":{"components/NutrientsPage.html":{}}}],["nutrients.page.scss",{"_index":1090,"title":{},"body":{"components/NutrientsPage.html":{}}}],["nutrients/:id",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["nutrientsarr",{"_index":508,"title":{},"body":{"components/FavsPage.html":{},"components/NutrientsPage.html":{}}}],["nutrientspage",{"_index":91,"title":{"components/NutrientsPage.html":{}},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"modules/NutrientsPageModule.html":{},"modules/NutrientsPageRoutingModule.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{},"coverage.html":{},"index.html":{}}}],["nutrientspagemodule",{"_index":1163,"title":{"modules/NutrientsPageModule.html":{}},"body":{"modules/NutrientsPageModule.html":{},"index.html":{},"modules.html":{}}}],["nutrientspageroutingmodule",{"_index":1167,"title":{"modules/NutrientsPageRoutingModule.html":{}},"body":{"modules/NutrientsPageModule.html":{},"modules/NutrientsPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["nutrition",{"_index":617,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"components/NutrientsPage.html":{}}}],["nutritional",{"_index":1040,"title":{},"body":{"components/MealResultComponent.html":{},"interfaces/Nutrient.html":{}}}],["object",{"_index":218,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FavsPage.html":{},"injectables/GetRecipeService.html":{},"components/GroceryPage.html":{},"components/ProfileInputPage.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":613,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{}}}],["occured",{"_index":370,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{}}}],["oil",{"_index":471,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["one",{"_index":908,"title":{},"body":{"components/HeaderComponent.html":{}}}],["oninit",{"_index":408,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["opened",{"_index":1205,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["openmodal",{"_index":1183,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["openmodal(id",{"_index":1202,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["opens",{"_index":1204,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["operation",{"_index":348,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["operations",{"_index":419,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{}}}],["optional",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"interfaces/Goal.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["orders",{"_index":529,"title":{},"body":{"components/FavsPage.html":{}}}],["out",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/FavsPageModule.html":{},"components/GroceryPage.html":{},"modules/GroceryPageModule.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/MealResultComponent.html":{},"modules/NutrientsPageModule.html":{},"components/ProfileInputPage.html":{},"modules/ProfileInputPageModule.html":{},"components/RecipePage.html":{},"modules/RecipePageModule.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["outline",{"_index":940,"title":{},"body":{"components/HeaderComponent.html":{}}}],["output",{"_index":1389,"title":{},"body":{"components/UpdateGoalModalComponent.html":{}}}],["overview",{"_index":1461,"title":{"index.html":{}},"body":{"index.html":{}}}],["p",{"_index":454,"title":{},"body":{"components/FavouriteComponent.html":{},"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["p2",{"_index":911,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/RecipePage.html":{}}}],["p3",{"_index":1342,"title":{},"body":{"components/RecipePage.html":{}}}],["package",{"_index":1439,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":917,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{}}}],["padding:0",{"_index":869,"title":{},"body":{"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/ProfileInputPage.html":{}}}],["padding:10px",{"_index":1352,"title":{},"body":{"components/RecipePage.html":{}}}],["padding:2.5",{"_index":1344,"title":{},"body":{"components/RecipePage.html":{}}}],["padding:2.5px",{"_index":450,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["page",{"_index":431,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/MealResultComponent.html":{}}}],["param",{"_index":336,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["parameter",{"_index":659,"title":{},"body":{"injectables/GetRecipeService.html":{},"components/HeaderComponent.html":{}}}],["parameterized",{"_index":766,"title":{},"body":{"injectables/GoalsService.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["params",{"_index":378,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{}}}],["passed",{"_index":1392,"title":{},"body":{"components/UpdateGoalModalComponent.html":{}}}],["passes",{"_index":1387,"title":{},"body":{"components/UpdateGoalModalComponent.html":{}}}],["path",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/FavsPageRoutingModule.html":{},"components/GroceryPage.html":{},"modules/GroceryPageRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"modules/NutrientsPageRoutingModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"modules/RecipePageRoutingModule.html":{}}}],["pathmatch",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["percent",{"_index":1139,"title":{},"body":{"components/NutrientsPage.html":{}}}],["percentage",{"_index":1088,"title":{},"body":{"interfaces/Nutrient.html":{}}}],["percentofdailyneeds",{"_index":1080,"title":{},"body":{"interfaces/Nutrient.html":{},"components/NutrientsPage.html":{}}}],["perform",{"_index":347,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["picture",{"_index":399,"title":{},"body":{"interfaces/Favourite.html":{}}}],["picturelink",{"_index":314,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/Favourite.html":{}}}],["picturelink:string",{"_index":400,"title":{},"body":{"interfaces/Favourite.html":{}}}],["pointer",{"_index":942,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{}}}],["position:absolute",{"_index":498,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{}}}],["position:relative",{"_index":540,"title":{},"body":{"components/FavsPage.html":{}}}],["preloadallmodules",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["present",{"_index":1082,"title":{},"body":{"interfaces/Nutrient.html":{}}}],["previous",{"_index":672,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["primary",{"_index":309,"title":{},"body":{"injectables/DatabaseService.html":{},"components/GroceryPage.html":{}}}],["private",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/LoginPage.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["problem",{"_index":532,"title":{},"body":{"components/FavsPage.html":{}}}],["process",{"_index":516,"title":{},"body":{"components/FavsPage.html":{}}}],["production",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"modules/ProfileInputPageModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["profileinputpage",{"_index":93,"title":{"components/ProfileInputPage.html":{}},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"modules/ProfileInputPageModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{},"coverage.html":{},"index.html":{}}}],["profileinputpagemodule",{"_index":1266,"title":{"modules/ProfileInputPageModule.html":{}},"body":{"modules/ProfileInputPageModule.html":{},"index.html":{},"modules.html":{}}}],["profileinputpageroutingmodule",{"_index":1270,"title":{"modules/ProfileInputPageRoutingModule.html":{}},"body":{"modules/ProfileInputPageModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["profileoptions",{"_index":1006,"title":{},"body":{"components/LoginPage.html":{}}}],["profileoptionscont",{"_index":1008,"title":{},"body":{"components/LoginPage.html":{}}}],["profilepic",{"_index":1013,"title":{},"body":{"components/LoginPage.html":{}}}],["progress",{"_index":733,"title":{},"body":{"interfaces/Goal.html":{},"injectables/GoalsService.html":{},"components/ProfileInputPage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["project",{"_index":1474,"title":{},"body":{"properties.html":{}}}],["promise",{"_index":221,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{}}}],["proper",{"_index":773,"title":{},"body":{"injectables/GoalsService.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"interfaces/Favourite.html":{},"components/FavsPage.html":{},"interfaces/Filter.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"interfaces/Goal.html":{},"injectables/GoalsService.html":{},"interfaces/Grocery.html":{},"components/GroceryPage.html":{},"components/LoginPage.html":{},"interfaces/Meal.html":{},"interfaces/Nutrient.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{},"interfaces/User.html":{},"properties.html":{}}}],["property",{"_index":435,"title":{},"body":{"components/FavouriteComponent.html":{},"components/LoginPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["protein",{"_index":318,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/Favourite.html":{},"interfaces/Filter.html":{},"injectables/GetRecipeService.html":{},"interfaces/Goal.html":{},"interfaces/Meal.html":{},"components/MealResultComponent.html":{},"components/ProfileInputPage.html":{}}}],["provide",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":649,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["providedin",{"_index":286,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"injectables/GoalsService.html":{}}}],["providers",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/FavsPageModule.html":{},"modules/GroceryPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/NutrientsPageModule.html":{},"modules/ProfileInputPageModule.html":{},"modules/RecipePageModule.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["public",{"_index":181,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["queries",{"_index":327,"title":{},"body":{"injectables/DatabaseService.html":{},"components/GroceryPage.html":{}}}],["query",{"_index":223,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/Filter.html":{},"injectables/GetRecipeService.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{}}}],["query=\"+filter.query",{"_index":684,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["querylist",{"_index":1217,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["radial",{"_index":913,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{}}}],["radius",{"_index":962,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{}}}],["radius:10px",{"_index":546,"title":{},"body":{"components/FavsPage.html":{}}}],["radius:15px",{"_index":448,"title":{},"body":{"components/FavouriteComponent.html":{},"components/RecipePage.html":{}}}],["radius:25px",{"_index":1263,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["random",{"_index":808,"title":{},"body":{"components/GroceryPage.html":{}}}],["randomidgenerator",{"_index":795,"title":{},"body":{"components/GroceryPage.html":{}}}],["randomidgenerator(min",{"_index":805,"title":{},"body":{"components/GroceryPage.html":{}}}],["randomidgenerator(min:number,max:number",{"_index":854,"title":{},"body":{"components/GroceryPage.html":{}}}],["ratio",{"_index":1118,"title":{},"body":{"components/NutrientsPage.html":{}}}],["reactive",{"_index":290,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["read",{"_index":383,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["recipe",{"_index":429,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/RecipePage.html":{},"modules/RecipePageModule.html":{},"coverage.html":{}}}],["recipe'},{'name",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["recipe.page",{"_index":1363,"title":{},"body":{"modules/RecipePageModule.html":{},"modules/RecipePageRoutingModule.html":{}}}],["recipe.page.html",{"_index":1275,"title":{},"body":{"components/RecipePage.html":{}}}],["recipe.page.scss",{"_index":1274,"title":{},"body":{"components/RecipePage.html":{}}}],["recipe.service.ts",{"_index":634,"title":{},"body":{"injectables/GetRecipeService.html":{},"coverage.html":{}}}],["recipe.service.ts:14",{"_index":668,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["recipe.service.ts:154",{"_index":651,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["recipe.service.ts:19",{"_index":662,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["recipe.service.ts:24",{"_index":664,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["recipe.service.ts:29",{"_index":666,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["recipe.service.ts:34",{"_index":665,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["recipe.service.ts:39",{"_index":667,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["recipe.service.ts:44",{"_index":657,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["recipe.service.ts:49",{"_index":669,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["recipe.service.ts:54",{"_index":663,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["recipe.service.ts:59",{"_index":661,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["recipe.service.ts:64",{"_index":638,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["recipe.service.ts:75",{"_index":648,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["recipe.service.ts:91",{"_index":640,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["recipe/:id",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["recipebox",{"_index":1057,"title":{},"body":{"components/MealResultComponent.html":{}}}],["recipedetailsgetter",{"_index":1098,"title":{},"body":{"components/NutrientsPage.html":{}}}],["recipegrocery",{"_index":1354,"title":{},"body":{"components/RecipePage.html":{}}}],["recipenav",{"_index":413,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/MealResultComponent.html":{}}}],["recipenav(id",{"_index":426,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/MealResultComponent.html":{}}}],["recipenav(id:number",{"_index":437,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/MealResultComponent.html":{}}}],["recipepage",{"_index":96,"title":{"components/RecipePage.html":{}},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"modules/RecipePageModule.html":{},"modules/RecipePageRoutingModule.html":{},"components/UpdateGoalModalComponent.html":{},"coverage.html":{},"index.html":{}}}],["recipepagemodule",{"_index":1357,"title":{"modules/RecipePageModule.html":{}},"body":{"modules/RecipePageModule.html":{},"index.html":{},"modules.html":{}}}],["recipepageroutingmodule",{"_index":1361,"title":{"modules/RecipePageRoutingModule.html":{}},"body":{"modules/RecipePageModule.html":{},"modules/RecipePageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["recipes",{"_index":644,"title":{},"body":{"injectables/GetRecipeService.html":{},"components/LoginPage.html":{}}}],["recipeservice",{"_index":603,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{}}}],["redirectto",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refresh",{"_index":772,"title":{},"body":{"injectables/GoalsService.html":{}}}],["reload",{"_index":353,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{}}}],["remove",{"_index":655,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["removed",{"_index":656,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["removes",{"_index":652,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["removewhitespace",{"_index":637,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["removewhitespace(text",{"_index":650,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["replaceurl",{"_index":1125,"title":{},"body":{"components/NutrientsPage.html":{}}}],["replaceurl:true",{"_index":439,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/MealResultComponent.html":{}}}],["represented",{"_index":396,"title":{},"body":{"interfaces/Favourite.html":{},"interfaces/Filter.html":{},"interfaces/Goal.html":{},"interfaces/Grocery.html":{},"interfaces/Meal.html":{},"interfaces/Nutrient.html":{}}}],["represents",{"_index":658,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["req",{"_index":845,"title":{},"body":{"components/GroceryPage.html":{}}}],["request",{"_index":531,"title":{},"body":{"components/FavsPage.html":{},"injectables/GetRecipeService.html":{}}}],["requests",{"_index":607,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"components/MealResultComponent.html":{}}}],["requirements",{"_index":363,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["reset",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/FavsPageModule.html":{},"modules/GroceryPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/NutrientsPageModule.html":{},"modules/ProfileInputPageModule.html":{},"modules/RecipePageModule.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["response",{"_index":832,"title":{},"body":{"components/GroceryPage.html":{},"components/RecipePage.html":{}}}],["response.error",{"_index":1316,"title":{},"body":{"components/RecipePage.html":{}}}],["response.extendedingredients",{"_index":1325,"title":{},"body":{"components/RecipePage.html":{}}}],["response.image",{"_index":1322,"title":{},"body":{"components/RecipePage.html":{}}}],["response.title",{"_index":1324,"title":{},"body":{"components/RecipePage.html":{}}}],["restrictions",{"_index":587,"title":{},"body":{"interfaces/Filter.html":{}}}],["result",{"_index":222,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{},"components/MealResultComponent.html":{}}}],["result'},{'name",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["result.component",{"_index":984,"title":{},"body":{"modules/HomePageModule.html":{}}}],["result.component.html",{"_index":1028,"title":{},"body":{"components/MealResultComponent.html":{}}}],["result.component.scss",{"_index":1027,"title":{},"body":{"components/MealResultComponent.html":{}}}],["result.component.ts",{"_index":1026,"title":{},"body":{"components/MealResultComponent.html":{},"coverage.html":{}}}],["result.component.ts:12",{"_index":1031,"title":{},"body":{"components/MealResultComponent.html":{}}}],["result.component.ts:13",{"_index":1030,"title":{},"body":{"components/MealResultComponent.html":{}}}],["result.component.ts:14",{"_index":1032,"title":{},"body":{"components/MealResultComponent.html":{}}}],["result.component.ts:15",{"_index":1035,"title":{},"body":{"components/MealResultComponent.html":{}}}],["result.component.ts:16",{"_index":1033,"title":{},"body":{"components/MealResultComponent.html":{}}}],["result.component.ts:17",{"_index":1034,"title":{},"body":{"components/MealResultComponent.html":{}}}],["result.component.ts:18",{"_index":1029,"title":{},"body":{"components/MealResultComponent.html":{}}}],["result.component.ts:26",{"_index":1036,"title":{},"body":{"components/MealResultComponent.html":{}}}],["result.component.ts:33",{"_index":1037,"title":{},"body":{"components/MealResultComponent.html":{}}}],["result/meal",{"_index":983,"title":{},"body":{"modules/HomePageModule.html":{},"components/MealResultComponent.html":{},"coverage.html":{}}}],["results",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/DatabaseService.html":{},"interfaces/Favourite.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"modules/FavsPageModule.html":{},"modules/FavsPageRoutingModule.html":{},"interfaces/Filter.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"interfaces/Goal.html":{},"injectables/GoalsService.html":{},"interfaces/Grocery.html":{},"components/GroceryPage.html":{},"modules/GroceryPageModule.html":{},"modules/GroceryPageRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Meal.html":{},"components/MealResultComponent.html":{},"interfaces/Nutrient.html":{},"components/NutrientsPage.html":{},"modules/NutrientsPageModule.html":{},"modules/NutrientsPageRoutingModule.html":{},"components/ProfileInputPage.html":{},"modules/ProfileInputPageModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"components/RecipePage.html":{},"modules/RecipePageModule.html":{},"modules/RecipePageRoutingModule.html":{},"modules/SharedModule.html":{},"components/UpdateGoalModalComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieval",{"_index":372,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{}}}],["retrieve",{"_index":612,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"injectables/GoalsService.html":{}}}],["retrieved",{"_index":781,"title":{},"body":{"injectables/GoalsService.html":{}}}],["retrieves",{"_index":239,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{},"components/LoginPage.html":{},"components/NutrientsPage.html":{}}}],["retrieving",{"_index":628,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{}}}],["return",{"_index":334,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FavsPage.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["returned",{"_index":1198,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["returns",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["rgb(0",{"_index":966,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rgb(248",{"_index":1045,"title":{},"body":{"components/MealResultComponent.html":{}}}],["rgb(45",{"_index":948,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rgb(58",{"_index":957,"title":{},"body":{"components/HeaderComponent.html":{}}}],["right",{"_index":1156,"title":{},"body":{"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{}}}],["right:10px",{"_index":867,"title":{},"body":{"components/GroceryPage.html":{},"components/LoginPage.html":{}}}],["right:auto",{"_index":865,"title":{},"body":{"components/GroceryPage.html":{},"components/LoginPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["rimg",{"_index":1062,"title":{},"body":{"components/MealResultComponent.html":{}}}],["rinfo",{"_index":1070,"title":{},"body":{"components/MealResultComponent.html":{}}}],["role",{"_index":1383,"title":{},"body":{"components/UpdateGoalModalComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"injectables/GoalsService.html":{}}}],["root'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["route",{"_index":899,"title":{},"body":{"components/HeaderComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["router",{"_index":416,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["router:router",{"_index":825,"title":{},"body":{"components/GroceryPage.html":{}}}],["routereusestrategy",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/FavsPageRoutingModule.html":{},"modules/GroceryPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/NutrientsPageRoutingModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"modules/RecipePageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":568,"title":{},"body":{"modules/FavsPageRoutingModule.html":{},"modules/GroceryPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/NutrientsPageRoutingModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"modules/RecipePageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":144,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/FavsPageRoutingModule.html":{},"modules/GroceryPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/NutrientsPageRoutingModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"modules/RecipePageRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routing.module",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/FavsPageModule.html":{},"modules/GroceryPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/NutrientsPageModule.html":{},"modules/ProfileInputPageModule.html":{},"modules/RecipePageModule.html":{}}}],["routing.module.ts",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/FavsPageRoutingModule.html":{},"modules/GroceryPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/NutrientsPageRoutingModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"modules/RecipePageRoutingModule.html":{}}}],["row",{"_index":496,"title":{},"body":{"components/FavouriteComponent.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{}}}],["rtitle",{"_index":1051,"title":{},"body":{"components/MealResultComponent.html":{}}}],["rxjs",{"_index":622,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"dependencies.html":{}}}],["safe",{"_index":767,"title":{},"body":{"injectables/GoalsService.html":{}}}],["sans",{"_index":909,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/RecipePage.html":{}}}],["saved",{"_index":861,"title":{},"body":{"components/GroceryPage.html":{},"components/RecipePage.html":{}}}],["scale",{"_index":1068,"title":{},"body":{"components/MealResultComponent.html":{}}}],["scale(1.05",{"_index":877,"title":{},"body":{"components/GroceryPage.html":{},"components/LoginPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["scenarios",{"_index":1200,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["schema",{"_index":303,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["schemafavs",{"_index":305,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["schemagoals",{"_index":322,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["schemagroceries",{"_index":319,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["screen",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["search",{"_index":643,"title":{},"body":{"injectables/GetRecipeService.html":{},"components/LoginPage.html":{}}}],["searches",{"_index":660,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["searching",{"_index":580,"title":{},"body":{"interfaces/Filter.html":{}}}],["select",{"_index":1251,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["selection",{"_index":1222,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["self",{"_index":1063,"title":{},"body":{"components/MealResultComponent.html":{},"components/NutrientsPage.html":{}}}],["self:center",{"_index":1010,"title":{},"body":{"components/LoginPage.html":{}}}],["send",{"_index":844,"title":{},"body":{"components/GroceryPage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["senddata",{"_index":1375,"title":{},"body":{"components/UpdateGoalModalComponent.html":{}}}],["sendgoalprogress",{"_index":1184,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["sendgoalprogress(id",{"_index":1206,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["sending",{"_index":1382,"title":{},"body":{"components/UpdateGoalModalComponent.html":{}}}],["sends",{"_index":530,"title":{},"body":{"components/FavsPage.html":{},"components/ProfileInputPage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["serif",{"_index":910,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/RecipePage.html":{}}}],["server",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":418,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/LoginPage.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["services/database.service",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/LoginPage.html":{},"components/RecipePage.html":{}}}],["services/get",{"_index":1111,"title":{},"body":{"components/NutrientsPage.html":{},"components/RecipePage.html":{}}}],["services/goals.service",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileInputPage.html":{}}}],["session",{"_index":673,"title":{},"body":{"injectables/GetRecipeService.html":{},"components/LoginPage.html":{},"components/NutrientsPage.html":{}}}],["sessionstorage.getitem('calorieintake",{"_index":998,"title":{},"body":{"components/LoginPage.html":{}}}],["sessionstorage.removeitem('query",{"_index":676,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["sessionstorage.setitem('calorieintake",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["sessionstorage.setitem('filter",{"_index":724,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["sessionstorage.setitem('query',query",{"_index":677,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["set",{"_index":389,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{},"components/RecipePage.html":{}}}],["setcalorieintake",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["settimeout",{"_index":847,"title":{},"body":{"components/GroceryPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["shadow",{"_index":944,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{}}}],["sharedmodule",{"_index":558,"title":{"modules/SharedModule.html":{}},"body":{"modules/FavsPageModule.html":{},"modules/GroceryPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfileInputPageModule.html":{},"modules/RecipePageModule.html":{},"modules/SharedModule.html":{},"index.html":{},"modules.html":{}}}],["show",{"_index":1223,"title":{},"body":{"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["showsuccessmessage",{"_index":791,"title":{},"body":{"components/GroceryPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["signal",{"_index":248,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FavsPage.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{}}}],["signals",{"_index":289,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["single",{"_index":525,"title":{},"body":{"components/FavsPage.html":{}}}],["size",{"_index":483,"title":{},"body":{"components/FavouriteComponent.html":{},"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{}}}],["size:128px",{"_index":1014,"title":{},"body":{"components/LoginPage.html":{}}}],["size:12px",{"_index":464,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["size:16px",{"_index":1256,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["size:32px",{"_index":1011,"title":{},"body":{"components/LoginPage.html":{}}}],["size:large",{"_index":1073,"title":{},"body":{"components/MealResultComponent.html":{}}}],["size:xx",{"_index":930,"title":{},"body":{"components/HeaderComponent.html":{}}}],["solid",{"_index":543,"title":{},"body":{"components/FavsPage.html":{},"components/NutrientsPage.html":{}}}],["sorted",{"_index":1312,"title":{},"body":{"components/RecipePage.html":{}}}],["sortedingredients",{"_index":1277,"title":{},"body":{"components/RecipePage.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/DatabaseService.html":{},"interfaces/Favourite.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"modules/FavsPageModule.html":{},"modules/FavsPageRoutingModule.html":{},"interfaces/Filter.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"interfaces/Goal.html":{},"injectables/GoalsService.html":{},"interfaces/Grocery.html":{},"components/GroceryPage.html":{},"modules/GroceryPageModule.html":{},"modules/GroceryPageRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Meal.html":{},"components/MealResultComponent.html":{},"interfaces/Nutrient.html":{},"components/NutrientsPage.html":{},"modules/NutrientsPageModule.html":{},"modules/NutrientsPageRoutingModule.html":{},"components/ProfileInputPage.html":{},"modules/ProfileInputPageModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"components/RecipePage.html":{},"modules/RecipePageModule.html":{},"modules/RecipePageRoutingModule.html":{},"modules/SharedModule.html":{},"components/UpdateGoalModalComponent.html":{},"interfaces/User.html":{}}}],["space",{"_index":461,"title":{},"body":{"components/FavouriteComponent.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["span",{"_index":1071,"title":{},"body":{"components/MealResultComponent.html":{}}}],["specific",{"_index":288,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FavsPage.html":{},"components/MealResultComponent.html":{}}}],["specified",{"_index":802,"title":{},"body":{"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{}}}],["splashscreen",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["splashscreen.hide",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["spoonacular",{"_index":620,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{}}}],["sql",{"_index":302,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/Favourite.html":{},"interfaces/Goal.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{}}}],["sqlite",{"_index":184,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["sqliteconnection",{"_index":272,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{}}}],["sqliteconnection(capacitorsqlite",{"_index":273,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["sqlitedbconnection",{"_index":242,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{}}}],["src/.../database.service.ts",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/comps/favourite/favourite.component.ts",{"_index":406,"title":{},"body":{"components/FavouriteComponent.html":{},"coverage.html":{}}}],["src/app/comps/favourite/favourite.component.ts:16",{"_index":417,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["src/app/comps/favourite/favourite.component.ts:25",{"_index":424,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["src/app/comps/favourite/favourite.component.ts:31",{"_index":422,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["src/app/comps/favourite/favourite.component.ts:39",{"_index":427,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["src/app/comps/header/header.component",{"_index":1369,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/comps/header/header.component.ts",{"_index":890,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/comps/header/header.component.ts:17",{"_index":900,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/comps/header/header.component.ts:24",{"_index":896,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/comps/header/header.component.ts:9",{"_index":895,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/comps/meal",{"_index":1025,"title":{},"body":{"components/MealResultComponent.html":{},"coverage.html":{}}}],["src/app/comps/update",{"_index":1370,"title":{},"body":{"modules/SharedModule.html":{},"components/UpdateGoalModalComponent.html":{},"coverage.html":{}}}],["src/app/favs/favs",{"_index":567,"title":{},"body":{"modules/FavsPageRoutingModule.html":{}}}],["src/app/favs/favs.module.ts",{"_index":559,"title":{},"body":{"modules/FavsPageModule.html":{}}}],["src/app/favs/favs.page.ts",{"_index":505,"title":{},"body":{"components/FavsPage.html":{},"coverage.html":{}}}],["src/app/favs/favs.page.ts:15",{"_index":521,"title":{},"body":{"components/FavsPage.html":{}}}],["src/app/favs/favs.page.ts:19",{"_index":510,"title":{},"body":{"components/FavsPage.html":{}}}],["src/app/favs/favs.page.ts:33",{"_index":512,"title":{},"body":{"components/FavsPage.html":{}}}],["src/app/favs/favs.page.ts:49",{"_index":511,"title":{},"body":{"components/FavsPage.html":{}}}],["src/app/favs/favs.page.ts:57",{"_index":520,"title":{},"body":{"components/FavsPage.html":{}}}],["src/app/favs/favs.page.ts:65",{"_index":518,"title":{},"body":{"components/FavsPage.html":{}}}],["src/app/grocery/grocery",{"_index":889,"title":{},"body":{"modules/GroceryPageRoutingModule.html":{}}}],["src/app/grocery/grocery.module.ts",{"_index":887,"title":{},"body":{"modules/GroceryPageModule.html":{}}}],["src/app/grocery/grocery.page.ts",{"_index":787,"title":{},"body":{"components/GroceryPage.html":{},"coverage.html":{}}}],["src/app/grocery/grocery.page.ts:15",{"_index":810,"title":{},"body":{"components/GroceryPage.html":{}}}],["src/app/grocery/grocery.page.ts:18",{"_index":812,"title":{},"body":{"components/GroceryPage.html":{}}}],["src/app/grocery/grocery.page.ts:21",{"_index":811,"title":{},"body":{"components/GroceryPage.html":{}}}],["src/app/grocery/grocery.page.ts:25",{"_index":796,"title":{},"body":{"components/GroceryPage.html":{}}}],["src/app/grocery/grocery.page.ts:37",{"_index":804,"title":{},"body":{"components/GroceryPage.html":{}}}],["src/app/grocery/grocery.page.ts:48",{"_index":799,"title":{},"body":{"components/GroceryPage.html":{}}}],["src/app/grocery/grocery.page.ts:58",{"_index":797,"title":{},"body":{"components/GroceryPage.html":{}}}],["src/app/grocery/grocery.page.ts:82",{"_index":806,"title":{},"body":{"components/GroceryPage.html":{}}}],["src/app/grocery/grocery.page.ts:90",{"_index":801,"title":{},"body":{"components/GroceryPage.html":{}}}],["src/app/home/home",{"_index":985,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/home/home.module.ts",{"_index":980,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/home/home.page.ts",{"_index":1415,"title":{},"body":{"coverage.html":{}}}],["src/app/interfaces/favourite",{"_index":433,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["src/app/interfaces/favourite.ts",{"_index":393,"title":{},"body":{"interfaces/Favourite.html":{},"coverage.html":{}}}],["src/app/interfaces/filter.ts",{"_index":570,"title":{},"body":{"interfaces/Filter.html":{},"coverage.html":{}}}],["src/app/interfaces/goal.ts",{"_index":729,"title":{},"body":{"interfaces/Goal.html":{},"coverage.html":{}}}],["src/app/interfaces/grocery.ts",{"_index":784,"title":{},"body":{"interfaces/Grocery.html":{},"coverage.html":{}}}],["src/app/interfaces/meal.ts",{"_index":1023,"title":{},"body":{"interfaces/Meal.html":{},"coverage.html":{}}}],["src/app/interfaces/nutrient.ts",{"_index":1079,"title":{},"body":{"interfaces/Nutrient.html":{},"coverage.html":{}}}],["src/app/interfaces/user.ts",{"_index":1397,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/login/login",{"_index":1022,"title":{},"body":{"modules/LoginPageRoutingModule.html":{}}}],["src/app/login/login.module.ts",{"_index":1020,"title":{},"body":{"modules/LoginPageModule.html":{}}}],["src/app/login/login.page.ts",{"_index":986,"title":{},"body":{"components/LoginPage.html":{},"coverage.html":{}}}],["src/app/login/login.page.ts:12",{"_index":999,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:15",{"_index":1000,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:18",{"_index":990,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:31",{"_index":992,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:40",{"_index":991,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/modules/shared/shared.module.ts",{"_index":1368,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/nutrients/nutrients",{"_index":1170,"title":{},"body":{"modules/NutrientsPageRoutingModule.html":{}}}],["src/app/nutrients/nutrients.module.ts",{"_index":1168,"title":{},"body":{"modules/NutrientsPageModule.html":{}}}],["src/app/nutrients/nutrients.page.ts",{"_index":1089,"title":{},"body":{"components/NutrientsPage.html":{},"coverage.html":{}}}],["src/app/nutrients/nutrients.page.ts:14",{"_index":1109,"title":{},"body":{"components/NutrientsPage.html":{}}}],["src/app/nutrients/nutrients.page.ts:17",{"_index":1110,"title":{},"body":{"components/NutrientsPage.html":{}}}],["src/app/nutrients/nutrients.page.ts:20",{"_index":1107,"title":{},"body":{"components/NutrientsPage.html":{}}}],["src/app/nutrients/nutrients.page.ts:23",{"_index":1097,"title":{},"body":{"components/NutrientsPage.html":{}}}],["src/app/nutrients/nutrients.page.ts:37",{"_index":1105,"title":{},"body":{"components/NutrientsPage.html":{}}}],["src/app/nutrients/nutrients.page.ts:46",{"_index":1100,"title":{},"body":{"components/NutrientsPage.html":{}}}],["src/app/nutrients/nutrients.page.ts:54",{"_index":1102,"title":{},"body":{"components/NutrientsPage.html":{}}}],["src/app/profile",{"_index":1171,"title":{},"body":{"components/ProfileInputPage.html":{},"modules/ProfileInputPageModule.html":{},"modules/ProfileInputPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/recipe/recipe",{"_index":1364,"title":{},"body":{"modules/RecipePageRoutingModule.html":{}}}],["src/app/recipe/recipe.module.ts",{"_index":1362,"title":{},"body":{"modules/RecipePageModule.html":{}}}],["src/app/recipe/recipe.page.ts",{"_index":1273,"title":{},"body":{"components/RecipePage.html":{},"coverage.html":{}}}],["src/app/recipe/recipe.page.ts:101",{"_index":1289,"title":{},"body":{"components/RecipePage.html":{}}}],["src/app/recipe/recipe.page.ts:109",{"_index":1287,"title":{},"body":{"components/RecipePage.html":{}}}],["src/app/recipe/recipe.page.ts:17",{"_index":1304,"title":{},"body":{"components/RecipePage.html":{}}}],["src/app/recipe/recipe.page.ts:20",{"_index":1303,"title":{},"body":{"components/RecipePage.html":{}}}],["src/app/recipe/recipe.page.ts:23",{"_index":1307,"title":{},"body":{"components/RecipePage.html":{}}}],["src/app/recipe/recipe.page.ts:24",{"_index":1309,"title":{},"body":{"components/RecipePage.html":{}}}],["src/app/recipe/recipe.page.ts:25",{"_index":1305,"title":{},"body":{"components/RecipePage.html":{}}}],["src/app/recipe/recipe.page.ts:26",{"_index":1310,"title":{},"body":{"components/RecipePage.html":{}}}],["src/app/recipe/recipe.page.ts:29",{"_index":1306,"title":{},"body":{"components/RecipePage.html":{}}}],["src/app/recipe/recipe.page.ts:32",{"_index":1308,"title":{},"body":{"components/RecipePage.html":{}}}],["src/app/recipe/recipe.page.ts:35",{"_index":1283,"title":{},"body":{"components/RecipePage.html":{}}}],["src/app/recipe/recipe.page.ts:50",{"_index":1298,"title":{},"body":{"components/RecipePage.html":{}}}],["src/app/recipe/recipe.page.ts:58",{"_index":1296,"title":{},"body":{"components/RecipePage.html":{}}}],["src/app/recipe/recipe.page.ts:80",{"_index":1297,"title":{},"body":{"components/RecipePage.html":{}}}],["src/app/recipe/recipe.page.ts:89",{"_index":1300,"title":{},"body":{"components/RecipePage.html":{}}}],["src/app/services/database.service",{"_index":434,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["src/app/services/database.service.ts",{"_index":179,"title":{},"body":{"injectables/DatabaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/database.service.ts:106",{"_index":238,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:116",{"_index":206,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:148",{"_index":259,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:162",{"_index":244,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:170",{"_index":230,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:18",{"_index":274,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:187",{"_index":225,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:20",{"_index":269,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:220",{"_index":263,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:23",{"_index":275,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:235",{"_index":250,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:245",{"_index":235,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:258",{"_index":262,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:26",{"_index":270,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:272",{"_index":249,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:279",{"_index":251,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:283",{"_index":264,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:29",{"_index":271,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:295",{"_index":228,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:306",{"_index":268,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:317",{"_index":237,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:32",{"_index":203,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:40",{"_index":252,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/get",{"_index":595,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"coverage.html":{}}}],["src/app/services/goals.service.ts",{"_index":739,"title":{},"body":{"injectables/GoalsService.html":{},"coverage.html":{}}}],["src/app/services/goals.service.ts:110",{"_index":753,"title":{},"body":{"injectables/GoalsService.html":{}}}],["src/app/services/goals.service.ts:13",{"_index":760,"title":{},"body":{"injectables/GoalsService.html":{}}}],["src/app/services/goals.service.ts:15",{"_index":748,"title":{},"body":{"injectables/GoalsService.html":{}}}],["src/app/services/goals.service.ts:18",{"_index":762,"title":{},"body":{"injectables/GoalsService.html":{}}}],["src/app/services/goals.service.ts:25",{"_index":757,"title":{},"body":{"injectables/GoalsService.html":{}}}],["src/app/services/goals.service.ts:38",{"_index":755,"title":{},"body":{"injectables/GoalsService.html":{}}}],["src/app/services/goals.service.ts:45",{"_index":750,"title":{},"body":{"injectables/GoalsService.html":{}}}],["src/app/services/goals.service.ts:63",{"_index":752,"title":{},"body":{"injectables/GoalsService.html":{}}}],["src/app/services/goals.service.ts:79",{"_index":759,"title":{},"body":{"injectables/GoalsService.html":{}}}],["src/app/services/goals.service.ts:94",{"_index":756,"title":{},"body":{"injectables/GoalsService.html":{}}}],["src/environments/environment",{"_index":624,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1436,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1437,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standard",{"_index":1119,"title":{},"body":{"components/NutrientsPage.html":{}}}],["state",{"_index":247,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{}}}],["statements",{"_index":1400,"title":{},"body":{"coverage.html":{}}}],["storage",{"_index":674,"title":{},"body":{"injectables/GetRecipeService.html":{},"components/LoginPage.html":{},"components/NutrientsPage.html":{}}}],["store",{"_index":675,"title":{},"body":{"injectables/GetRecipeService.html":{},"components/LoginPage.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["stores",{"_index":526,"title":{},"body":{"components/FavsPage.html":{},"components/LoginPage.html":{}}}],["string",{"_index":227,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/Favourite.html":{},"interfaces/Filter.html":{},"injectables/GetRecipeService.html":{},"interfaces/Goal.html":{},"injectables/GoalsService.html":{},"interfaces/Grocery.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"interfaces/Meal.html":{},"components/MealResultComponent.html":{},"interfaces/Nutrient.html":{},"components/RecipePage.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["styling",{"_index":1048,"title":{},"body":{"components/MealResultComponent.html":{},"components/NutrientsPage.html":{}}}],["sub",{"_index":1151,"title":{},"body":{"components/NutrientsPage.html":{}}}],["success",{"_index":818,"title":{},"body":{"components/GroceryPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["successful",{"_index":258,"title":{},"body":{"injectables/DatabaseService.html":{},"components/ProfileInputPage.html":{}}}],["successfully",{"_index":860,"title":{},"body":{"components/GroceryPage.html":{},"components/RecipePage.html":{}}}],["such",{"_index":736,"title":{},"body":{"interfaces/Goal.html":{}}}],["summary",{"_index":1278,"title":{},"body":{"components/RecipePage.html":{}}}],["summary.search('minutes",{"_index":1328,"title":{},"body":{"components/RecipePage.html":{}}}],["summary.slice(0",{"_index":1330,"title":{},"body":{"components/RecipePage.html":{}}}],["summaryformatter",{"_index":1281,"title":{},"body":{"components/RecipePage.html":{}}}],["summaryformatter(summary",{"_index":1299,"title":{},"body":{"components/RecipePage.html":{}}}],["support",{"_index":1466,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1467,"title":{},"body":{"modules.html":{}}}],["t",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileInputPage.html":{}}}],["table",{"_index":306,"title":{},"body":{"injectables/DatabaseService.html":{},"components/NutrientsPage.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1438,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":833,"title":{},"body":{"components/GroceryPage.html":{}}}],["target",{"_index":730,"title":{},"body":{"interfaces/Goal.html":{}}}],["td",{"_index":1154,"title":{},"body":{"components/NutrientsPage.html":{},"components/RecipePage.html":{}}}],["temp",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["text",{"_index":312,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FavouriteComponent.html":{},"interfaces/Filter.html":{},"injectables/GetRecipeService.html":{},"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/RecipePage.html":{}}}],["text.replace(/(\\d",{"_index":1333,"title":{},"body":{"components/RecipePage.html":{}}}],["text.replace(/\\s+/g",{"_index":728,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["th",{"_index":1153,"title":{},"body":{"components/NutrientsPage.html":{}}}],["this.caloriearr.push(t.goalamount",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["this.caloriearr[0].tostring",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["this.calorieintake",{"_index":783,"title":{},"body":{"injectables/GoalsService.html":{},"components/NutrientsPage.html":{}}}],["this.calorieintake.set(calorieintake.values",{"_index":782,"title":{},"body":{"injectables/GoalsService.html":{}}}],["this.cancel",{"_index":1232,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["this.cuisine",{"_index":707,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["this.database.addgrocery(newgrocery",{"_index":1336,"title":{},"body":{"components/RecipePage.html":{}}}],["this.database.addgrocery(this.newgrocery",{"_index":843,"title":{},"body":{"components/GroceryPage.html":{}}}],["this.database.deletefavbyid(fav.id.tostring",{"_index":436,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{}}}],["this.database.deletegrocerybyname(grocery.name.tostring",{"_index":835,"title":{},"body":{"components/GroceryPage.html":{}}}],["this.database.getfavs",{"_index":534,"title":{},"body":{"components/FavsPage.html":{}}}],["this.database.getgrocery",{"_index":830,"title":{},"body":{"components/GroceryPage.html":{},"components/LoginPage.html":{}}}],["this.database.initializeplugin",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["this.database.loadfavs",{"_index":533,"title":{},"body":{"components/FavsPage.html":{}}}],["this.database.loadgrocery",{"_index":827,"title":{},"body":{"components/GroceryPage.html":{},"components/LoginPage.html":{}}}],["this.databaseservice.getdatabase",{"_index":764,"title":{},"body":{"injectables/GoalsService.html":{}}}],["this.db",{"_index":295,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.db.execute(schemafavs",{"_index":328,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.db.execute(schemagoals",{"_index":330,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.db.execute(schemagroceries",{"_index":329,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.db.open",{"_index":301,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.db.query(\"select",{"_index":780,"title":{},"body":{"injectables/GoalsService.html":{}}}],["this.db.query('select",{"_index":367,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{}}}],["this.db.query(deletequery",{"_index":352,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.db.query(query",{"_index":340,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{}}}],["this.diet",{"_index":711,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["this.favs",{"_index":373,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FavsPage.html":{}}}],["this.favs.set(favs.values",{"_index":368,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.formatinstructions(response.instructions",{"_index":1318,"title":{},"body":{"components/RecipePage.html":{}}}],["this.getnutrition(this.id",{"_index":1122,"title":{},"body":{"components/NutrientsPage.html":{}}}],["this.getrecipedetails",{"_index":1314,"title":{},"body":{"components/RecipePage.html":{}}}],["this.getter.getrecipedetails(this.id).subscribe",{"_index":1315,"title":{},"body":{"components/RecipePage.html":{}}}],["this.goals",{"_index":380,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{},"components/ProfileInputPage.html":{}}}],["this.goals.set(goals.values",{"_index":379,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{}}}],["this.goalservice.getcalorieintake",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["this.goalservice.loadcalorieintake",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["this.goalsservice.addgoal(this.newgoal",{"_index":1230,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["this.goalsservice.deletegoalbyid(goal.id!.tostring",{"_index":1233,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["this.goalsservice.getgoals",{"_index":1227,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["this.goalsservice.loadgoals",{"_index":1226,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["this.goalsservice.updategoal(id",{"_index":1234,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["this.goalupdatesuccess",{"_index":1235,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["this.groceries",{"_index":376,"title":{},"body":{"injectables/DatabaseService.html":{},"components/GroceryPage.html":{},"components/LoginPage.html":{}}}],["this.groceries.set(groceries.values",{"_index":375,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.handlemodaldata(datareturned.data",{"_index":1240,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["this.http.get(url",{"_index":630,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{}}}],["this.id",{"_index":1120,"title":{},"body":{"components/NutrientsPage.html":{},"components/RecipePage.html":{}}}],["this.image",{"_index":1321,"title":{},"body":{"components/RecipePage.html":{}}}],["this.ingredients",{"_index":687,"title":{},"body":{"injectables/GetRecipeService.html":{},"components/RecipePage.html":{}}}],["this.initapp",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["this.instructions",{"_index":1317,"title":{},"body":{"components/RecipePage.html":{}}}],["this.intolerances",{"_index":719,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["this.loadfavs",{"_index":331,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.loadgoals",{"_index":333,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{}}}],["this.loadgrocery",{"_index":332,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.loadusers",{"_index":387,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.macro",{"_index":1396,"title":{},"body":{"components/UpdateGoalModalComponent.html":{}}}],["this.maxcals",{"_index":691,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["this.maxcarbs",{"_index":695,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["this.maxfat",{"_index":699,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["this.minprotein",{"_index":703,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["this.modalcontroller.create",{"_index":1236,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["this.modalcontroller.dismiss([this.id",{"_index":1395,"title":{},"body":{"components/UpdateGoalModalComponent.html":{}}}],["this.modalcontroller.dismiss(null",{"_index":1229,"title":{},"body":{"components/ProfileInputPage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["this.newgrocery.id",{"_index":840,"title":{},"body":{"components/GroceryPage.html":{}}}],["this.nutrientsarr",{"_index":1126,"title":{},"body":{"components/NutrientsPage.html":{}}}],["this.nutrientsarr.push(n",{"_index":1136,"title":{},"body":{"components/NutrientsPage.html":{}}}],["this.query",{"_index":683,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["this.randomidgenerator(10000,99999",{"_index":841,"title":{},"body":{"components/GroceryPage.html":{}}}],["this.recipedetailsgetter.getrecipenutritiondetails(id).subscribe",{"_index":1127,"title":{},"body":{"components/NutrientsPage.html":{}}}],["this.removewhitespace(url",{"_index":722,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["this.router.navigatebyurl",{"_index":1003,"title":{},"body":{"components/LoginPage.html":{},"components/RecipePage.html":{}}}],["this.router.navigatebyurl('/'+path",{"_index":857,"title":{},"body":{"components/GroceryPage.html":{},"components/HeaderComponent.html":{}}}],["this.router.navigatebyurl('/favs",{"_index":1124,"title":{},"body":{"components/NutrientsPage.html":{}}}],["this.router.navigatebyurl('/login",{"_index":1228,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["this.router.navigatebyurl('/nutrients/'+id",{"_index":538,"title":{},"body":{"components/FavsPage.html":{}}}],["this.router.navigatebyurl('/recipe/'+id",{"_index":438,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/MealResultComponent.html":{}}}],["this.sendgoalprogress(number(data[0",{"_index":1244,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["this.setcalorieintake",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["this.showsuccessmessage",{"_index":846,"title":{},"body":{"components/GroceryPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["this.sqlite.createconnection",{"_index":296,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.summary",{"_index":1319,"title":{},"body":{"components/RecipePage.html":{}}}],["this.summaryformatter(response.summary",{"_index":1320,"title":{},"body":{"components/RecipePage.html":{}}}],["this.title",{"_index":1323,"title":{},"body":{"components/RecipePage.html":{}}}],["this.type",{"_index":715,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["this.users",{"_index":384,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.users.set(users.values",{"_index":385,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["through",{"_index":1393,"title":{},"body":{"components/UpdateGoalModalComponent.html":{}}}],["throw",{"_index":362,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{}}}],["title",{"_index":1024,"title":{},"body":{"interfaces/Meal.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/RecipePage.html":{}}}],["titles",{"_index":1049,"title":{},"body":{"components/MealResultComponent.html":{}}}],["top",{"_index":545,"title":{},"body":{"components/FavsPage.html":{},"components/MealResultComponent.html":{}}}],["top:5px",{"_index":929,"title":{},"body":{"components/HeaderComponent.html":{}}}],["top:61.5",{"_index":500,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["top:65",{"_index":551,"title":{},"body":{"components/FavsPage.html":{}}}],["total",{"_index":401,"title":{},"body":{"interfaces/Favourite.html":{},"interfaces/Meal.html":{}}}],["towards",{"_index":734,"title":{},"body":{"interfaces/Goal.html":{}}}],["tr",{"_index":1158,"title":{},"body":{"components/NutrientsPage.html":{}}}],["transform",{"_index":876,"title":{},"body":{"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["transition",{"_index":878,"title":{},"body":{"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["translatey",{"_index":971,"title":{},"body":{"components/HeaderComponent.html":{}}}],["translatey(2px",{"_index":972,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["true",{"_index":335,"title":{},"body":{"injectables/DatabaseService.html":{},"components/GroceryPage.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":339,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FavsPage.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{}}}],["tslib",{"_index":1457,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"interfaces/Favourite.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"interfaces/Filter.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"interfaces/Goal.html":{},"injectables/GoalsService.html":{},"interfaces/Grocery.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"interfaces/Meal.html":{},"components/MealResultComponent.html":{},"interfaces/Nutrient.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type=\"+filter.type",{"_index":716,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["types",{"_index":364,"title":{},"body":{"injectables/DatabaseService.html":{},"components/ProfileInputPage.html":{}}}],["typically",{"_index":1113,"title":{},"body":{"components/NutrientsPage.html":{}}}],["unique",{"_index":211,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/Favourite.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"interfaces/Goal.html":{},"interfaces/Grocery.html":{},"interfaces/Meal.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{}}}],["unit",{"_index":1081,"title":{},"body":{"interfaces/Nutrient.html":{},"components/NutrientsPage.html":{}}}],["unknown",{"_index":220,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{},"components/ProfileInputPage.html":{}}}],["unused",{"_index":1313,"title":{},"body":{"components/RecipePage.html":{}}}],["update",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["updated",{"_index":1208,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["updategoal",{"_index":745,"title":{},"body":{"injectables/GoalsService.html":{}}}],["updategoal(id",{"_index":758,"title":{},"body":{"injectables/GoalsService.html":{}}}],["updategoalmodalcomponent",{"_index":98,"title":{"components/UpdateGoalModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"modules/SharedModule.html":{},"components/UpdateGoalModalComponent.html":{},"coverage.html":{},"index.html":{}}}],["updates",{"_index":261,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{}}}],["updateuserbyid",{"_index":202,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["updateuserbyid(id",{"_index":265,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["updating",{"_index":779,"title":{},"body":{"injectables/GoalsService.html":{},"components/ProfileInputPage.html":{}}}],["url",{"_index":627,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{}}}],["url('/assets/flash.png",{"_index":487,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["url('/assets/meat.png",{"_index":492,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["url('/assets/oil.png",{"_index":489,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["url('/assets/wheat.png",{"_index":482,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["url('https://fonts.cdnfonts.com/css/better",{"_index":904,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/RecipePage.html":{}}}],["url('https://fonts.cdnfonts.com/css/margarine",{"_index":903,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/RecipePage.html":{}}}],["url('https://fonts.cdnfonts.com/css/space",{"_index":1043,"title":{},"body":{"components/MealResultComponent.html":{},"components/RecipePage.html":{}}}],["url('https://fonts.googleapis.com/css2?family=lilita+one&display=swap",{"_index":902,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url.concat(this.cuisine",{"_index":709,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["url.concat(this.diet",{"_index":713,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["url.concat(this.ingredients",{"_index":689,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["url.concat(this.intolerances",{"_index":721,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["url.concat(this.maxcals",{"_index":693,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["url.concat(this.maxcarbs",{"_index":697,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["url.concat(this.maxfat",{"_index":701,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["url.concat(this.minprotein",{"_index":705,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["url.concat(this.query",{"_index":685,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["url.concat(this.type",{"_index":717,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["useclass",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":605,"title":{},"body":{"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"components/ProfileInputPage.html":{}}}],["user",{"_index":276,"title":{"interfaces/User.html":{}},"body":{"injectables/DatabaseService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["user's",{"_index":1002,"title":{},"body":{"components/LoginPage.html":{},"components/NutrientsPage.html":{}}}],["users",{"_index":185,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["uses",{"_index":897,"title":{},"body":{"components/HeaderComponent.html":{}}}],["using",{"_index":765,"title":{},"body":{"injectables/GoalsService.html":{}}}],["value",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"components/FavsPage.html":{},"injectables/GetRecipeDetailsService.html":{},"injectables/GetRecipeService.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/LoginPage.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":338,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{}}}],["var",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["variable",{"_index":294,"title":{},"body":{"injectables/DatabaseService.html":{},"components/GroceryPage.html":{},"coverage.html":{}}}],["variables",{"_index":1479,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1039,"title":{},"body":{"components/MealResultComponent.html":{}}}],["version",{"_index":1471,"title":{},"body":{"properties.html":{}}}],["viewchild",{"_index":1001,"title":{},"body":{"components/LoginPage.html":{}}}],["viewchildren",{"_index":1218,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["violation",{"_index":344,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["violations",{"_index":213,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["void",{"_index":425,"title":{},"body":{"components/FavouriteComponent.html":{},"components/FavsPage.html":{},"components/GroceryPage.html":{},"components/HeaderComponent.html":{},"components/LoginPage.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/ProfileInputPage.html":{},"components/RecipePage.html":{},"components/UpdateGoalModalComponent.html":{}}}],["wait",{"_index":831,"title":{},"body":{"components/GroceryPage.html":{}}}],["waits",{"_index":300,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["want",{"_index":478,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["webdir",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["webkit",{"_index":479,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["weight",{"_index":922,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{}}}],["weight:bold",{"_index":1072,"title":{},"body":{"components/MealResultComponent.html":{}}}],["welcome",{"_index":1004,"title":{},"body":{"components/LoginPage.html":{}}}],["wheat",{"_index":470,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["whether",{"_index":256,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["white",{"_index":1259,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["whitespace",{"_index":653,"title":{},"body":{"injectables/GetRecipeService.html":{}}}],["width",{"_index":924,"title":{},"body":{"components/HeaderComponent.html":{},"components/MealResultComponent.html":{},"components/NutrientsPage.html":{},"components/RecipePage.html":{}}}],["width:100",{"_index":1067,"title":{},"body":{"components/MealResultComponent.html":{},"components/ProfileInputPage.html":{}}}],["width:24px",{"_index":473,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["width:30",{"_index":1260,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["width:32.5",{"_index":1053,"title":{},"body":{"components/MealResultComponent.html":{}}}],["width:40px",{"_index":973,"title":{},"body":{"components/HeaderComponent.html":{}}}],["width:47.5",{"_index":493,"title":{},"body":{"components/FavouriteComponent.html":{}}}],["width:70",{"_index":864,"title":{},"body":{"components/GroceryPage.html":{},"components/LoginPage.html":{}}}],["width:90",{"_index":872,"title":{},"body":{"components/GroceryPage.html":{}}}],["width:fit",{"_index":1257,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["without",{"_index":1381,"title":{},"body":{"components/UpdateGoalModalComponent.html":{}}}],["wrap",{"_index":1254,"title":{},"body":{"components/ProfileInputPage.html":{}}}],["writable",{"_index":523,"title":{},"body":{"components/FavsPage.html":{},"components/GroceryPage.html":{}}}],["writablesignal",{"_index":246,"title":{},"body":{"injectables/DatabaseService.html":{},"components/FavsPage.html":{},"injectables/GoalsService.html":{},"components/GroceryPage.html":{}}}],["www",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z",{"_index":1054,"title":{},"body":{"components/MealResultComponent.html":{}}}],["zone.js",{"_index":1459,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/FavsPageModule.html":{},"modules/GroceryPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/NutrientsPageModule.html":{},"modules/ProfileInputPageModule.html":{},"modules/RecipePageModule.html":{},"modules/SharedModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calorieArr\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                initApp\n                            \n                            \n                                    Async\n                                setCalorieIntake\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(database: DatabaseService, goalService: GoalsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        goalService\n                                                  \n                                                        \n                                                                        GoalsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initApp\n                        \n                    \n                \n            \n            \n                \n                        \n                    initApp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setCalorieIntake\n                        \n                    \n                \n            \n            \n                \n                        \n                    setCalorieIntake()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calorieArr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { DatabaseService } from './services/database.service';\nimport { GoalsService } from './services/goals.service';\nimport { SplashScreen } from '@capacitor/splash-screen';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent {\n\n  calorieArr: any = []; \n\n  constructor(private database: DatabaseService, private goalService: GoalsService) {\n    this.initApp()\n  }\n\n  async initApp(){\n    await this.database.initializePlugin();\n    SplashScreen.hide(); \n    this.setCalorieIntake(); \n  }\n\n  async setCalorieIntake(){\n    await this.goalService.loadCalorieIntake(); \n    let temp = this.goalService.getCalorieIntake(); \n    for(let t of temp()) {\n      this.calorieArr.push(t.goalAmount)\n    }\n    sessionStorage.setItem('calorieIntake', this.calorieArr[0].toString() ?? \"none\")\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FavouriteComponent', 'selector': 'favourite'},{'name': 'FavsPage', 'selector': 'app-favs'},{'name': 'GroceryPage', 'selector': 'app-grocery'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MealResultComponent', 'selector': 'meal-result'},{'name': 'NutrientsPage', 'selector': 'app-nutrients'},{'name': 'ProfileInputPage', 'selector': 'app-profile-input'},{'name': 'RecipePage', 'selector': 'app-recipe'},{'name': 'UpdateGoalModalComponent', 'selector': 'app-update-goal-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\n\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, IonicModule.forRoot(), AppRoutingModule, HttpClientModule],\n  providers: [{ provide: RouteReuseStrategy, useClass: IonicRouteStrategy }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    loadChildren: () => \"import('./home/home.module').then( m => m.HomePageModule)\"\n  },\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'recipe/:id',\n    loadChildren: () => \"import('./recipe/recipe.module').then( m => m.RecipePageModule)\"\n  },\n  {\n    path: 'login',\n    loadChildren: () => \"import('./login/login.module').then( m => m.LoginPageModule)\"\n  },\n  {\n    path: 'favs',\n    loadChildren: () => \"import('./favs/favs.module').then( m => m.FavsPageModule)\"\n  },\n  {\n    path: 'profile-input',\n    loadChildren: () => \"import('./profile-input/profile-input.module').then( m => m.ProfileInputPageModule)\"\n  },\n  {\n    path: 'grocery',\n    loadChildren: () => \"import('./grocery/grocery.module').then( m => m.GroceryPageModule)\"\n  },\n  {\n    path: 'nutrients/:id',\n    loadChildren: () => \"import('./nutrients/nutrients.module').then( m => m.NutrientsPageModule)\"\n  }\n\n\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseService.html":{"url":"injectables/DatabaseService.html","title":"injectable - DatabaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                db\n                            \n                            \n                                    Private\n                                favs\n                            \n                            \n                                    Public\n                                goals\n                            \n                            \n                                    Private\n                                groceries\n                            \n                            \n                                    Private\n                                sqlite\n                            \n                            \n                                    Private\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFavourite\n                            \n                            \n                                    Async\n                                addGrocery\n                            \n                            \n                                    Async\n                                addUser\n                            \n                            \n                                    Async\n                                deleteFavById\n                            \n                            \n                                    Async\n                                deleteGroceryByName\n                            \n                            \n                                    Async\n                                deleteUserById\n                            \n                            \n                                getDatabase\n                            \n                            \n                                getFavs\n                            \n                            \n                                getGoals\n                            \n                            \n                                getGrocery\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Async\n                                initializePlugin\n                            \n                            \n                                    Async\n                                loadFavs\n                            \n                            \n                                    Async\n                                loadGoals\n                            \n                            \n                                    Async\n                                loadGrocery\n                            \n                            \n                                    Async\n                                loadUsers\n                            \n                            \n                                    Async\n                                updateUserById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/database.service.ts:32\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFavourite\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFavourite(favourite: Favourite)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Adds a new favourite item to the database.\nHandles UNIQUE constraint violations by deleting existing entry.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                favourite\n                                            \n                                                            Favourite\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe Favourite object to be added to the database.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                Promise with the result of the query.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addGrocery\n                        \n                    \n                \n            \n            \n                \n                        \n                    addGrocery(grocery: Grocery)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database.service.ts:187\n                        \n                    \n\n\n            \n                \n                        Adds a new grocery item to the database.\nHandles UNIQUE constraint violations as in 'addFavourite'.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                grocery\n                                            \n                                                            Grocery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe Grocery object to be added to the database.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                Promise with the result of the query.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    addUser(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database.service.ts:295\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteFavById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFavById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database.service.ts:170\n                        \n                    \n\n\n            \n                \n                        Deletes a favourite item from the database by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the favourite item to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                Promise with the result of the query.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteGroceryByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteGroceryByName(name: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database.service.ts:245\n                        \n                    \n\n\n            \n                \n                        Deletes a grocery item from the database by name and ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the grocery item.\n\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the grocery item.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                Promise with the result of the query.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUserById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database.service.ts:317\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabase\n                        \n                    \n                \n            \n            \n                \ngetDatabase()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database.service.ts:106\n                        \n                    \n\n\n            \n                \n                        Retrieves the current database connection.\n\n\n                        \n                            Returns :     SQLiteDBConnection\n\n                        \n                            \n                                The SQLiteDBConnection instance.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFavs\n                        \n                    \n                \n            \n            \n                \ngetFavs()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database.service.ts:162\n                        \n                    \n\n\n            \n                \n                        Retrieves the current favourites.\n\n\n                        \n                            Returns :     WritableSignal\n\n                        \n                            \n                                The current state of the 'favs' signal.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGoals\n                        \n                    \n                \n            \n            \n                \ngetGoals()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database.service.ts:272\n                        \n                    \n\n\n            \n                \n                        Retrieves the current goals.\n\n\n                        \n                            Returns :     WritableSignal\n\n                        \n                            \n                                The current state of the 'goals' signal.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGrocery\n                        \n                    \n                \n            \n            \n                \ngetGrocery()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database.service.ts:235\n                        \n                    \n\n\n            \n                \n                        Retrieves the current groceries.\n\n\n                        \n                            Returns :     WritableSignal\n\n                        \n                            \n                                The current state of the 'groceries' signal.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database.service.ts:279\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     WritableSignal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initializePlugin\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializePlugin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Initializes the SQLite connection and database.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A boolean indicating whether the initialization was successful.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadFavs\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadFavs()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database.service.ts:148\n                        \n                    \n\n\n            \n                \n                        Loads favourites from the database and updates the 'favs' signal.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadGoals\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadGoals()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database.service.ts:258\n                        \n                    \n\n\n            \n                \n                        Loads goals from the database and updates the 'goals' signal.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadGrocery\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadGrocery()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database.service.ts:220\n                        \n                    \n\n\n            \n                \n                        Loads groceries from the database and updates the 'groceries' signal.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database.service.ts:283\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserById(id: string, active: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database.service.ts:306\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                active\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SQLiteDBConnection\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/database.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        favs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(([]))\n                    \n                \n                    \n                        \n                                Defined in src/app/services/database.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        goals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(([]))\n                    \n                \n                    \n                        \n                                Defined in src/app/services/database.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        groceries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(([]))\n                    \n                \n                    \n                        \n                                Defined in src/app/services/database.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sqlite\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SQLiteConnection\n\n                    \n                \n                \n                    \n                        Default value : new SQLiteConnection(CapacitorSQLite)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/database.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(([]))\n                    \n                \n                    \n                        \n                                Defined in src/app/services/database.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, WritableSignal, signal } from '@angular/core';\nimport { User } from '../interfaces/user';\nimport { Favourite } from '../interfaces/favourite';\nimport { Grocery } from '../interfaces/grocery';\nimport { Goal } from '../interfaces/goal';\nimport { CapacitorSQLite, SQLiteConnection, SQLiteDBConnection } from '@capacitor-community/sqlite';\n\nconst DB_FAVS = 'favsdb'; \n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n\n  // SQLiteConnection instance for interacting with SQLite database\n  private sqlite: SQLiteConnection = new SQLiteConnection(CapacitorSQLite); \n  // Connection to a specific SQLite database\n  private db!: SQLiteDBConnection;\n\n  // Signals for reactive state management of users\n  private users: WritableSignal = signal(([])); \n\n  // Signals for reactive state management of favourites\n  private favs: WritableSignal = signal(([]));\n\n  // Signals for reactive state management of groceries\n  private groceries: WritableSignal = signal(([]));\n\n  // Signals for reactive state management of goals\n  public goals: WritableSignal = signal(([]));\n\n  constructor() { }\n\n  /**\n * Initializes the SQLite connection and database.\n * @returns A boolean indicating whether the initialization was successful.\n */\n  async initializePlugin(){\n\n      //creates the connection and assigns to variable\n      this.db = await this.sqlite.createConnection(\n      DB_FAVS,\n      false,\n      'no-encryption',\n      1,\n      false\n    ); \n\n    //waits for the connection to be active\n    await this.db.open(); \n      \n    //sql favourites schema create query\n    const schemaFavs = `CREATE TABLE IF NOT EXISTS favourites ( \n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      name TEXT NOT NULL,\n      pictureLink TEXT NOT NULL,\n      carbs TEXT NOT NULL,\n      cals TEXT NOT NULL,\n      fats TEXT NOT NULL,\n      protein TEXT NOT NULL\n      );`\n\n    //sql groceries schema create query\n    const schemaGroceries = `\n      CREATE TABLE IF NOT EXISTS groceries (\n        id INTEGER,\n        name TEXT NOT NULL,\n        isBought INTEGER DEFAULT 0,\n        PRIMARY KEY (id, name)\n      );\n    `\n\n    //sql goals schema create query\n    const schemaGoals = `\n      CREATE TABLE IF NOT EXISTS goals (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        goalAmount INTEGER NOT NULL,\n        goalProgress INTEGER DEFAULT 0,\n        type TEXT NOT NULL\n\n      );\n    `\n    //await func that execute the sql create queries\n    await this.db.execute(schemaFavs);\n\n    await this.db.execute(schemaGroceries);\n\n    await this.db.execute(schemaGoals);  \n\n    this.loadFavs(); \n\n    this.loadGrocery(); \n\n    this.loadGoals();\n\n    return true; \n\n  }\n\n  /**\n * Retrieves the current database connection.\n * @returns The SQLiteDBConnection instance.\n */\n  getDatabase(){\n    return this.db; \n  }\n\n /**\n   * Adds a new favourite item to the database.\n   * Handles UNIQUE constraint violations by deleting existing entry.\n   * @param favourite - The Favourite object to be added to the database.\n   * @returns Promise with the result of the query.\n */\n  async addFavourite(favourite: Favourite) {\n    const { id, name, pictureLink, cals, carbs, protein, fats } = favourite;\n    const query = `INSERT INTO favourites (id, name, pictureLink, carbs, cals, fats, protein) VALUES (${id}, '${name}', '${pictureLink}', '${cals}', '${carbs}', '${protein}', '${fats}')`;\n  \n    try {\n      const result = await this.db.query(query);\n      return result;\n    } catch (error: any) {\n      // Handle UNIQUE constraint violation\n      if (error.message.includes('UNIQUE constraint failed')) {\n        // Perform a DELETE operation for the conflicting id\n        const deleteQuery = `DELETE FROM favourites WHERE id = ${id}`;\n        try {\n          const deleteResult = await this.db.query(deleteQuery);\n          // Optional: Reload or update your data after the deletion\n          this.loadFavs(); // Adjust this according to your application flow\n          return deleteResult;\n        } catch (deleteError) {\n          console.error('Error deleting conflicting entry:', deleteError);\n          throw deleteError; // Handle the deletion error according to your requirements\n        }\n      } else {\n        // Handle other types of errors\n        console.error('Error adding favourite:', error);\n        throw error; // Handle the error according to your requirements\n      }\n    }\n  }\n\n  /**\n   * Loads favourites from the database and updates the 'favs' signal.\n   */\n  async loadFavs(){\n    try {\n      const favs = await this.db.query('SELECT * FROM favourites;');\n\n      this.favs.set(favs.values || []); \n    } catch(error) {\n      console.error('Error occured during retrieval'); \n    }\n   \n  }\n  /**\n   * Retrieves the current favourites.\n   * @returns The current state of the 'favs' signal.\n  */\n  getFavs() {\n    return this.favs; \n  }\n  /**\n   * Deletes a favourite item from the database by its ID.\n   * @param id - The ID of the favourite item to delete.\n   * @returns Promise with the result of the query.\n */\n  async deleteFavById(id: string) {\n    const query = `DELETE FROM favourites WHERE id=${id}`;\n\n    const result = await this.db.query(query); \n\n    this.loadFavs(); \n\n    return result; \n  }\n\n\n  /**\n   * Adds a new grocery item to the database.\n   * Handles UNIQUE constraint violations as in 'addFavourite'.\n   * @param grocery - The Grocery object to be added to the database.\n   * @returns Promise with the result of the query.\n   */\n  async addGrocery(grocery: Grocery) {\n    const { id, name, isBought } = grocery;\n    const query = `INSERT INTO groceries (id, name, isBought) VALUES (${id}, '${name}', '${isBought}')`;\n  \n    try {\n        const result = await this.db.query(query);\n        return result;\n      } catch (error: any) {\n        // Handle UNIQUE constraint violation\n        if (error.message.includes('UNIQUE constraint failed')) {\n          // Perform a DELETE operation for the conflicting id\n          const deleteQuery = `DELETE FROM groceries WHERE id = ${id}`;\n          try {\n            const deleteResult = await this.db.query(deleteQuery);\n            // Optional: Reload or update your data after the deletion\n            this.loadGrocery(); // Adjust this according to your application flow\n            return deleteResult;\n          } catch (deleteError) {\n            console.error('Error deleting conflicting entry:', deleteError);\n            throw deleteError; // Handle the deletion error according to your requirements\n          }\n        } else {\n          // Handle other types of errors\n          console.error('Error adding favourite:', error);\n          throw error; // Handle the error according to your requirements\n        }\n      }\n    }\n  \n\n  /**\n   * Loads groceries from the database and updates the 'groceries' signal.\n   */\n  async loadGrocery(){\n    try {\n      const groceries = await this.db.query('SELECT * FROM groceries;');\n\n      this.groceries.set(groceries.values || []); \n    } catch(error) {\n      console.error('Error occured during retrieval'); \n    }\n   \n  }\n  \n  /**\n * Retrieves the current groceries.\n * @returns The current state of the 'groceries' signal.\n */\n  getGrocery() {\n    return this.groceries; \n  }\n\n  /**\n   * Deletes a grocery item from the database by name and ID.\n   * @param name - The name of the grocery item.\n   * @param id - The ID of the grocery item.\n   * @returns Promise with the result of the query.\n   */\n  async deleteGroceryByName(name: string, id:string) {\n    const query = `DELETE FROM groceries WHERE name=? AND id=?`;\n    const params = [name, id] \n    const result = await this.db.query(query, params); \n\n    this.loadGrocery(); \n\n    return result; \n  }\n\n  /**\n   * Loads goals from the database and updates the 'goals' signal.\n   */\n  async loadGoals(){\n    try {\n      const goals = await this.db.query('SELECT * FROM goals;');\n  \n      this.goals.set(goals.values || []); \n    } catch(error) {\n      console.error('Error occured during goals retrieval'); \n    }\n  }\n\n  /**\n   * Retrieves the current goals.\n   * @returns The current state of the 'goals' signal.\n   */\n  getGoals(){\n    return this.goals; \n  }\n\n\n//CRUD USERS (EXAMPLE)\n  //read users\n  getUsers(){\n    return this.users;\n  }\n\n  async loadUsers(){\n    try {\n      const users = await this.db.query('SELECT * FROM users;');\n\n      this.users.set(users.values || []); \n    } catch(error) {\n      console.error('Error occured during retrieval'); \n    }\n   \n  }\n  \n  //create users\n  async addUser(name:string){\n    const query = `INSERT INTO users (name) VALUES ('${name}')`;\n\n    const result = await this.db.query(query); \n\n    this.loadUsers(); \n\n    return result; \n  }\n\n  //update users\n  async updateUserById(id: string, active:number) {\n    const query = `UPDATE users SET active=${active} WHERE id=${id}`;\n\n    const result = await this.db.query(query); \n\n    this.loadUsers(); \n\n    return result; \n  }\n  \n  //delete users\n  async deleteUserById(id: string) {\n    const query = `DELETE FROM users WHERE id=${id}`;\n\n    const result = await this.db.query(query); \n\n    this.loadUsers(); \n\n    return result; \n  }\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Favourite.html":{"url":"interfaces/Favourite.html","title":"interface - Favourite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Favourite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/favourite.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cals\n                                        \n                                \n                                \n                                        \n                                            carbs\n                                        \n                                \n                                \n                                        \n                                            fats\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            pictureLink\n                                        \n                                \n                                \n                                        \n                                            protein\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cals:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        carbs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        carbs:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fats\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fats:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictureLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pictureLink:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        protein\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        protein:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Favourite {\n    //unique identifier, defined as number in sql db\n    id:number;\n    //name of the favourite meal, represented as a string\n    name:String;\n    //link to a picture of the favourite meal\n    pictureLink:String;\n    //total calories for the favourite meal, represented as string \n    cals: String,\n    //total carbohydrate content for the favourite meal, represented as string \n    carbs: String,\n    //total fat content for the favourite meal, represented as string \n    fats: String,\n    //total protein content for the favourite meal, represented as string \n    protein: String\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavouriteComponent.html":{"url":"components/FavouriteComponent.html","title":"component - FavouriteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FavouriteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/comps/favourite/favourite.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                favourite\n            \n\n\n\n            \n                styleUrls\n                ./favourite.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./favourite.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFav\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                recipeNav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fav\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(database: DatabaseService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/comps/favourite/favourite.component.ts:16\n                            \n                        \n\n                \n                    \n                            Initializes the component with DatabaseService and Router.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for database operations.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter for navigation.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        fav\n                    \n                \n                \n                    \n                        Type :         Favourite\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/comps/favourite/favourite.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteFav\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFav(fav: Favourite)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/comps/favourite/favourite.component.ts:31\n                        \n                    \n\n\n            \n                \n                        Deletes a favourite item from the database.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fav\n                                            \n                                                            Favourite\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe favourite item to be deleted.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/comps/favourite/favourite.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipeNav\n                        \n                    \n                \n            \n            \n                \nrecipeNav(id: Number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/comps/favourite/favourite.component.ts:39\n                        \n                    \n\n\n            \n                \n                        Navigates to the recipe details page based on the recipe ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe unique identifier of the recipe.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Favourite } from 'src/app/interfaces/favourite';\nimport { DatabaseService } from 'src/app/services/database.service';\n\n\n@Component({\n  selector: 'favourite',\n  templateUrl: './favourite.component.html',\n  styleUrls: ['./favourite.component.scss'],\n})\nexport class FavouriteComponent  implements OnInit {\n   \n  // Input property for a favourite item\n   @Input() fav!: Favourite;\n  \n   /**\n    * Initializes the component with DatabaseService and Router.\n    * @param database - Service for database operations.\n    * @param router - Router for navigation.\n    */\n  constructor(private database: DatabaseService, private router: Router) { }\n\n  ngOnInit() {}\n\n  /**\n   * Deletes a favourite item from the database.\n   * @param fav - The favourite item to be deleted.\n   */\n  async deleteFav(fav: Favourite) {\n    this.database.deleteFavById(fav.id.toString()); \n  }\n\n  /**\n   * Navigates to the recipe details page based on the recipe ID.\n   * @param id - The unique identifier of the recipe.\n   */\n  recipeNav(id:Number){\n    this.router.navigateByUrl('/recipe/'+id, {replaceUrl:true}); \n     \n  }\n\n}\n\n    \n\n    \n        \n\n \n  \n     \n  \n\n  \n\n    {{fav.name}}\n\n    \n      \n        \n        {{fav.cals}}\n      \n\n      \n        \n        {{fav.carbs}}\n      \n\n      \n        \n        {{fav.fats}}\n      \n      \n        \n        {{fav.protein}}\n      \n    \n    \n    \n      \n    \n\n  \n  \n\n\n\n\n\n    \n\n    \n                \n                    ./favourite.component.scss\n                \n                .favImg img{\n    border-radius:15px; \n}\n.favInfo * {\n    padding:2.5px;\n    margin:1px; \n    text-align: center;\n}\n.favInfo p {\n    height:50px; \n}\n.macroCont {\n    display:flex;\n    flex-direction:row;\n    justify-content: space-evenly;\n    font-size:12px; \n    margin-bottom:0; \n}\n.macro {\n    display:flex;\n    flex-direction:column; \n    align-items: center;\n}\n.wheat, .oil, .meat,.flash{\n    width:24px; \n    height:24px; \n   \n}\n.wheat {\n    background-color: #F5DEB3; /* The color you want */\n    -webkit-mask-image: url('/assets/wheat.png');\n    mask-image: url('/assets/wheat.png');\n    mask-size: cover;\n}\n.flash {\n    background-color: #13d8e2; /* The color you want */\n    -webkit-mask-image: url('/assets/flash.png');\n    mask-image: url('/assets/flash.png');\n    mask-size: cover;\n}\n.oil {\n    background-color: #ebb403; /* The color you want */\n    -webkit-mask-image: url('/assets/oil.png');\n    mask-image: url('/assets/oil.png');\n    mask-size: cover;\n}\n.meat {\n    background-color: #cb6862; /* The color you want */\n    -webkit-mask-image: url('/assets/meat.png');\n    mask-image: url('/assets/meat.png');\n    mask-size: cover;\n}\n.favImg, .favInfo {\n    width:47.5%;\n    height:auto;        \n    margin:5px; \n}\n.row {\n    display:flex; \n    flex-direction:row; \n}\n\n.favOptions {\n    position:absolute; \n    display:flex;\n    flex-direction:row; \n    justify-content: space-between;\n    top:61.5%;\n    left:45%; \n    ion-icon {\n        color:#ebb403; \n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{fav.name}}                          {{fav.cals}}                            {{fav.carbs}}                            {{fav.fats}}                            {{fav.protein}}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FavouriteComponent', 'selector': 'favourite'},{'name': 'FavsPage', 'selector': 'app-favs'},{'name': 'GroceryPage', 'selector': 'app-grocery'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MealResultComponent', 'selector': 'meal-result'},{'name': 'NutrientsPage', 'selector': 'app-nutrients'},{'name': 'ProfileInputPage', 'selector': 'app-profile-input'},{'name': 'RecipePage', 'selector': 'app-recipe'},{'name': 'UpdateGoalModalComponent', 'selector': 'app-update-goal-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FavouriteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavsPage.html":{"url":"components/FavsPage.html","title":"component - FavsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FavsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/favs/favs.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favs\n            \n\n\n\n            \n                styleUrls\n                ./favs.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./favs.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                favs\n                            \n                            \n                                nutrientsArr\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteFav\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                nutrientNav\n                            \n                            \n                                recipeNav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(database: DatabaseService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/favs/favs.page.ts:19\n                            \n                        \n\n                \n                    \n                            Initializes the component with DatabaseService and Router.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for database operations.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter for navigation.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFav\n                        \n                    \n                \n            \n            \n                \ndeleteFav(fav: Favourite)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/favs/favs.page.ts:49\n                        \n                    \n\n\n            \n                \n                        Deletes a favourite item from the database.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fav\n                                            \n                                                            Favourite\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe favourite item to be deleted.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/favs/favs.page.ts:33\n                        \n                    \n\n\n            \n                \n                        Loads favourite items from the database on initialization.\nCatches and logs any errors during the loading process.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nutrientNav\n                        \n                    \n                \n            \n            \n                \nnutrientNav(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/favs/favs.page.ts:65\n                        \n                    \n\n\n            \n                \n                        Navigates to the nutrient details page for a specific recipe.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe unique identifier of the recipe.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipeNav\n                        \n                    \n                \n            \n            \n                \nrecipeNav(id: Number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/favs/favs.page.ts:57\n                        \n                    \n\n\n            \n                \n                        Navigates to the recipe details page based on the recipe ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe unique identifier of the recipe.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        favs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/favs/favs.page.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nutrientsArr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nutrient[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/favs/favs.page.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from '../services/database.service';\nimport { Favourite } from '../interfaces/favourite';\nimport { Router } from '@angular/router';\nimport { Nutrient } from '../interfaces/nutrient';\nimport { WritableSignal } from '@angular/core';\n\n@Component({\n  selector: 'app-favs',\n  templateUrl: './favs.page.html',\n  styleUrls: ['./favs.page.scss'],\n})\nexport class FavsPage implements OnInit {\n  //favs item, which is writable signal array, but may be single object\n  favs!: WritableSignal; ;\n\n\n  //interface that stores all the nutrients as array, as nutrients be in different orders\n  nutrientsArr: Nutrient[] = []; \n\n  /**\n   * Initializes the component with DatabaseService and Router.\n   * @param database - Service for database operations.\n   * @param router - Router for navigation.\n   */\n  constructor(private database: DatabaseService, private router: Router) { }\n\n\n  /**\n   * Loads favourite items from the database on initialization.\n   * Catches and logs any errors during the loading process.\n   */\n  ngOnInit() {\n    //sends request to database to return the favs as writable signal\n    //will return error if there is a problem\n    try {\n      this.database.loadFavs(); \n      this.favs = this.database.getFavs(); \n    } catch (err) {\n      console.log(err)\n    }\n\n  }\n\n  /**\n   * Deletes a favourite item from the database.\n   * @param fav - The favourite item to be deleted.\n   */\n  deleteFav(fav: Favourite) {\n    this.database.deleteFavById(fav.id.toString()); \n  }\n\n  /**\n   * Navigates to the recipe details page based on the recipe ID.\n   * @param id - The unique identifier of the recipe.\n   */\n  recipeNav(id:Number){\n    this.router.navigateByUrl('/recipe/'+id, {replaceUrl:true}); \n\n  }\n   /**\n   * Navigates to the nutrient details page for a specific recipe.\n   * @param id - The unique identifier of the recipe.\n   */\n  nutrientNav(id:number) {\n    this.router.navigateByUrl('/nutrients/'+id, {replaceUrl:true})\n  }\n\n  \n\n}\n\n    \n\n    \n        \n\n   \n    Your Favourites\n  \n\n\n\n  \n    \n      \n    \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./favs.page.scss\n                \n                .favItem {\n    position:relative; \n    border-bottom: 1px solid #FF6700;\n    border-top: 1px solid #FF6700;\n    border-radius:10px; \n    margin-bottom:15px; \n    max-height:200px; \n}\n.favItem ion-button {\n    position:absolute;\n    top:65%;\n    left:75%; \n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Your Favourites                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FavouriteComponent', 'selector': 'favourite'},{'name': 'FavsPage', 'selector': 'app-favs'},{'name': 'GroceryPage', 'selector': 'app-grocery'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MealResultComponent', 'selector': 'meal-result'},{'name': 'NutrientsPage', 'selector': 'app-nutrients'},{'name': 'ProfileInputPage', 'selector': 'app-profile-input'},{'name': 'RecipePage', 'selector': 'app-recipe'},{'name': 'UpdateGoalModalComponent', 'selector': 'app-update-goal-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FavsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FavsPageModule.html":{"url":"modules/FavsPageModule.html","title":"module - FavsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    FavsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FavsPageModule\n\n\n\ncluster_FavsPageModule_imports\n\n\n\ncluster_FavsPageModule_declarations\n\n\n\n\nFavouriteComponent\n\nFavouriteComponent\n\n\n\nFavsPageModule\n\nFavsPageModule\n\nFavsPageModule -->\n\nFavouriteComponent->FavsPageModule\n\n\n\n\n\nFavsPage\n\nFavsPage\n\nFavsPageModule -->\n\nFavsPage->FavsPageModule\n\n\n\n\n\nFavsPageRoutingModule\n\nFavsPageRoutingModule\n\nFavsPageModule -->\n\nFavsPageRoutingModule->FavsPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nFavsPageModule -->\n\nSharedModule->FavsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/favs/favs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FavouriteComponent\n                        \n                        \n                            FavsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FavsPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FavsPageRoutingModule } from './favs-routing.module';\n\nimport { FavsPage } from './favs.page';\nimport { FavouriteComponent } from '../comps/favourite/favourite.component';\nimport { SharedModule } from '../modules/shared/shared.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FavsPageRoutingModule,\n    SharedModule\n  ],\n  declarations: [FavsPage, FavouriteComponent],\n})\nexport class FavsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FavsPageRoutingModule.html":{"url":"modules/FavsPageRoutingModule.html","title":"module - FavsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FavsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/favs/favs-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FavsPage } from './favs.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FavsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FavsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Filter.html":{"url":"interfaces/Filter.html","title":"interface - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cuisine\n                                        \n                                \n                                \n                                        \n                                            diet\n                                        \n                                \n                                \n                                        \n                                            ingredients\n                                        \n                                \n                                \n                                        \n                                            intolerances\n                                        \n                                \n                                \n                                        \n                                            maxCals\n                                        \n                                \n                                \n                                        \n                                            maxCarbs\n                                        \n                                \n                                \n                                        \n                                            maxFat\n                                        \n                                \n                                \n                                        \n                                            minCarbs\n                                        \n                                \n                                \n                                        \n                                            minProtein\n                                        \n                                \n                                \n                                        \n                                            query\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cuisine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cuisine:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        diet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        diet:     String[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredients:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intolerances\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        intolerances:     String[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxCals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxCals:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxCarbs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxCarbs:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxFat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxFat:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minCarbs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minCarbs:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minProtein\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minProtein:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        query:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Filter {\n    // Text query for searching meals, represented as a string\n    query: String;\n\n    // Ingredients to include in the meal, represented as a string\n    ingredients: String;\n\n    // Minimum protein content for the meal, represented as a string\n    minProtein: String;\n\n    // Minimum carbohydrate content for the meal, represented as a string\n    minCarbs: String;\n\n    // Maximum carbohydrate content for the meal, represented as a string\n    maxCarbs: String;\n\n    // Maximum fat content for the meal, represented as a string\n    maxFat: String;\n\n    // Maximum caloric content for the meal, represented as a string\n    maxCals: String;\n\n    // Cuisine type of the meal, represented as a string\n    cuisine: String;\n\n    // Array of dietary restrictions to consider for the meal\n    diet: String[];\n\n    // Type of the meal, represented as a string (e.g., breakfast, lunch, dinner)\n    type: String;\n\n    // Array of food intolerances to consider for the meal\n    intolerances: String[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetRecipeDetailsService.html":{"url":"injectables/GetRecipeDetailsService.html","title":"injectable - GetRecipeDetailsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetRecipeDetailsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/get-recipe-details.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRecipeDetails\n                            \n                            \n                                getRecipeNutritionDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/get-recipe-details.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor for the RecipeService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAn instance of the HttpClient class used for making HTTP requests.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRecipeDetails\n                        \n                    \n                \n            \n            \n                \ngetRecipeDetails(id: Number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/get-recipe-details.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Get detailed information about a recipe by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the recipe to retrieve details for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable containing recipe details.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRecipeNutritionDetails\n                        \n                    \n                \n            \n            \n                \ngetRecipeNutritionDetails(id: Number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/get-recipe-details.service.ts:38\n                        \n                    \n\n\n            \n                \n                        Get nutrition details for a recipe by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the recipe to retrieve nutrition details for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable containing nutrition details.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiKey\n                    \n                \n                    \n                        \n                                Defined in src/app/services/get-recipe-details.service.ts:13\n                        \n                    \n\n            \n                \n                    The API key used for making requests to the Spoonacular API.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, count } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetRecipeDetailsService {\n  /**\n * The API key used for making requests to the Spoonacular API.\n */\n  apiKey = environment.apiKey; \n\n  /**\n * Constructor for the RecipeService class.\n * @param http - An instance of the HttpClient class used for making HTTP requests.\n */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Get detailed information about a recipe by its ID.\n   * @param id - The ID of the recipe to retrieve details for.\n   * @returns An Observable containing recipe details.\n   */\n  getRecipeDetails(id:Number): Observable {\n    // Construct the API URL for retrieving recipe details\n    let url = \"https://api.spoonacular.com/recipes/\"+id+\"/information?apiKey=\"+this.apiKey; \n    \n    return this.http.get(url)\n  }\n\n  /**\n   * Get nutrition details for a recipe by its ID.\n   * @param id - The ID of the recipe to retrieve nutrition details for.\n   * @returns An Observable containing nutrition details.\n   */\n  getRecipeNutritionDetails(id:Number): Observable {\n    // Construct the API URL for retrieving nutrition details\n    let url = \"https://api.spoonacular.com/recipes/\"+id+\"/nutritionWidget.json?apiKey=\"+this.apiKey;\n\n    return this.http.get(url); \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetRecipeService.html":{"url":"injectables/GetRecipeService.html","title":"injectable - GetRecipeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetRecipeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/get-recipe.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiKey\n                            \n                            \n                                cuisine\n                            \n                            \n                                diet\n                            \n                            \n                                ingredients\n                            \n                            \n                                intolerances\n                            \n                            \n                                maxCals\n                            \n                            \n                                maxCarbs\n                            \n                            \n                                maxFat\n                            \n                            \n                                minProtein\n                            \n                            \n                                query\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                getRecipe\n                            \n                            \n                                removeWhitespace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/get-recipe.service.ts:64\n                            \n                        \n\n                \n                    \n                            Constructor for the RecipeService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAn instance of the HttpClient class used for making HTTP requests.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(filter: Filter)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/get-recipe.service.ts:91\n                        \n                    \n\n\n            \n                \n                        Apply filters to recipe search and get matching recipes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe filter object containing search criteria.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable containing filtered recipe data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRecipe\n                        \n                    \n                \n            \n            \n                \ngetRecipe(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/get-recipe.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Get a recipe based on the provided query string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe query string for recipe search.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable containing recipe data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeWhitespace\n                        \n                    \n                \n            \n            \n                \nremoveWhitespace(text: String)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/get-recipe.service.ts:154\n                        \n                    \n\n\n            \n                \n                        Removes whitespace from a given string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe input text to remove whitespace from.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The text with whitespace removed.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiKey\n                    \n                \n                    \n                        \n                                Defined in src/app/services/get-recipe.service.ts:64\n                        \n                    \n\n            \n                \n                    The API key used for making requests to the Spoonacular API.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cuisine\n                        \n                    \n                \n            \n                \n                    \n                        Default value : String()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/get-recipe.service.ts:44\n                        \n                    \n\n            \n                \n                    Represents the Cuisine parameter for recipe searches.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        diet\n                        \n                    \n                \n            \n                \n                    \n                        Default value : String()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/get-recipe.service.ts:59\n                        \n                    \n\n            \n                \n                    Represents the Diet parameter for recipe searches.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredients\n                        \n                    \n                \n            \n                \n                    \n                        Default value : String()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/get-recipe.service.ts:19\n                        \n                    \n\n            \n                \n                    Represents the Ingredients parameter for recipe searches.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intolerances\n                        \n                    \n                \n            \n                \n                    \n                        Default value : String()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/get-recipe.service.ts:54\n                        \n                    \n\n            \n                \n                    Represents the Intolerances parameter for recipe searches.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxCals\n                        \n                    \n                \n            \n                \n                    \n                        Default value : String()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/get-recipe.service.ts:24\n                        \n                    \n\n            \n                \n                    Represents the Maximum Calories parameter for recipe searches.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxCarbs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : String()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/get-recipe.service.ts:34\n                        \n                    \n\n            \n                \n                    Represents the Maximum Carbs parameter for recipe searches.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxFat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : String()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/get-recipe.service.ts:29\n                        \n                    \n\n            \n                \n                    Represents the Maximum Fat parameter for recipe searches.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minProtein\n                        \n                    \n                \n            \n                \n                    \n                        Default value : String()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/get-recipe.service.ts:39\n                        \n                    \n\n            \n                \n                    Represents the Minimum Protein parameter for recipe searches.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Default value : String()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/get-recipe.service.ts:14\n                        \n                    \n\n            \n                \n                    Represents the Query parameter for recipe searches.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Default value : String()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/get-recipe.service.ts:49\n                        \n                    \n\n            \n                \n                    Represents the Type parameter for recipe searches.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable} from '@angular/core';\nimport { Observable, count } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Filter } from '../interfaces/filter';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetRecipeService {\n/**\n * Represents the Query parameter for recipe searches.\n */\nquery = String();\n\n/**\n * Represents the Ingredients parameter for recipe searches.\n */\ningredients = String();\n\n/**\n * Represents the Maximum Calories parameter for recipe searches.\n */\nmaxCals = String();\n\n/**\n * Represents the Maximum Fat parameter for recipe searches.\n */\nmaxFat = String();\n\n/**\n * Represents the Maximum Carbs parameter for recipe searches.\n */\nmaxCarbs = String();\n\n/**\n * Represents the Minimum Protein parameter for recipe searches.\n */\nminProtein = String();\n\n/**\n * Represents the Cuisine parameter for recipe searches.\n */\ncuisine = String();\n\n/**\n * Represents the Type parameter for recipe searches.\n */\ntype = String();\n\n/**\n * Represents the Intolerances parameter for recipe searches.\n */\nintolerances = String();\n\n/**\n * Represents the Diet parameter for recipe searches.\n */\ndiet = String();\n\n/**\n * The API key used for making requests to the Spoonacular API.\n */\napiKey = environment.apiKey;\n  /**\n   * Constructor for the RecipeService class.\n   * @param http - An instance of the HttpClient class used for making HTTP requests.\n   */\n  constructor(private http: HttpClient) { }\n  /**\n   * Get a recipe based on the provided query string.\n   * @param query - The query string for recipe search.\n   * @returns An Observable containing recipe data.\n   */\n  getRecipe(query:string): Observable {\n    // Remove the previous query from session storage and store the new query\n    sessionStorage.removeItem('query'); \n\n    sessionStorage.setItem('query',query); \n\n    // Construct the API URL for recipe search\n    let url = \"https://api.spoonacular.com/recipes/complexSearch?query=\"+query+\"&addRecipeNutrition=true&apiKey=\"+this.apiKey; \n   \n    return this.http.get(url)\n  }\n  /**\n   * Apply filters to recipe search and get matching recipes.\n   * @param filter - The filter object containing search criteria.\n   * @returns An Observable containing filtered recipe data.\n   */\n  applyFilter(filter:Filter): Observable {\n    \n    // Construct the base API URL for recipe search\n    let url = \"https://api.spoonacular.com/recipes/complexSearch?addRecipeNutrition=true&apiKey=\"+this.apiKey; \n   \n    // Apply filters to the URL if provided in the filter object\n    if(filter.query != \"\"){\n      this.query = \"&query=\"+filter.query; \n      url = url.concat(this.query)\n    }\n    if(filter.ingredients != \"\"){\n      this.ingredients = \"&includeIngredients=\"+filter.ingredients; \n      url = url.concat(this.ingredients)\n    }\n    if(filter.maxCals != \"\"){\n      this.maxCals = \"&maxCalories=\"+Number(filter.maxCals); \n      url = url.concat(this.maxCals)\n    }\n    if(filter.maxCarbs != \"\"){\n      this.maxCarbs = \"&maxCarbs=\"+Number(filter.maxCarbs); \n      url = url.concat(this.maxCarbs)\n    }\n    if(filter.maxFat != \"\"){\n      this.maxFat = \"&maxFat=\"+Number(filter.maxFat); \n      url = url.concat(this.maxFat)\n    }\n    if(filter.minProtein != \"\"){\n      this.minProtein = \"&minProtein=\"+Number(filter.minProtein); \n      url = url.concat(this.minProtein)\n    }\n    if(filter.cuisine != \"\"){\n      this.cuisine = \"&cuisine=\"+filter.cuisine; \n      url = url.concat(this.cuisine); \n    }\n    if(filter.diet.length != 0){\n      this.diet = \"&diet=\"+filter.diet.join('|');; \n      url = url.concat(this.diet); \n    }\n    if(filter.type != \"\"){\n      this.type = \"&type=\"+filter.type; \n      url = url.concat(this.type); \n    }\n    if(filter.intolerances.length != 0){\n      this.intolerances = \"&intolerances=\"+filter.intolerances.join(); \n      url = url.concat(this.intolerances); \n    }\n\n    // Remove whitespace from the URL\n    url = this.removeWhitespace(url); \n    console.log(url); \n\n    // Store the filter in session storage\n    sessionStorage.setItem('filter', JSON.stringify(filter)); \n\n    // Make the HTTP request to fetch filtered recipes\n    return this.http.get(url)\n  }\n\n  /**\n   * Removes whitespace from a given string.\n   * @param text - The input text to remove whitespace from.\n   * @returns The text with whitespace removed.\n   */\n  removeWhitespace(text: String) {\n    return text.replace(/\\s+/g, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Goal.html":{"url":"interfaces/Goal.html","title":"interface - Goal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Goal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/goal.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            goalAmount\n                                        \n                                \n                                \n                                        \n                                            goalProgress\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        goalAmount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        goalAmount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        goalProgress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        goalProgress:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Goal {\n    // Optional unique identifier, defined as number in SQL database\n    id?: number;\n\n    // The target amount to achieve for the goal, represented as a number\n    goalAmount: number;\n\n    // Current progress towards achieving the goal, represented as a number\n    goalProgress: number;\n\n    // Type of the goal, such as 'protein intake', 'caloric intake', etc., represented as a string\n    type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoalsService.html":{"url":"injectables/GoalsService.html","title":"injectable - GoalsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoalsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/goals.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calorieIntake\n                            \n                            \n                                    Private\n                                goals\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addGoal\n                            \n                            \n                                    Async\n                                deleteGoalById\n                            \n                            \n                                getCalorieIntake\n                            \n                            \n                                getGoals\n                            \n                            \n                                    Async\n                                loadCalorieIntake\n                            \n                            \n                                    Async\n                                loadGoals\n                            \n                            \n                                    Async\n                                updateGoal\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    db\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(databaseService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/goals.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        databaseService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addGoal\n                        \n                    \n                \n            \n            \n                \n                        \n                    addGoal(goal: Goal)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/goals.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Loads goals from the database and updates the 'goals' signal.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                goal\n                                            \n                                                            Goal\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteGoalById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteGoalById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/goals.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Deletes a goal item from the database by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the goal item to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                Promise with the result of the query.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCalorieIntake\n                        \n                    \n                \n            \n            \n                \ngetCalorieIntake()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/goals.service.ts:110\n                        \n                    \n\n\n            \n                \n                        Retrieves the current calorie intake goals.\n\n\n                        \n                            Returns :     WritableSignal\n\n                        \n                            \n                                The current state of the 'calorieIntake' signal.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGoals\n                        \n                    \n                \n            \n            \n                \ngetGoals()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/goals.service.ts:38\n                        \n                    \n\n\n            \n                \n                        Retrieves the current favourites.\n\n\n                        \n                            Returns :     WritableSignal\n\n                        \n                            \n                                The current state of the 'favs' signal.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadCalorieIntake\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadCalorieIntake()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/goals.service.ts:94\n                        \n                    \n\n\n            \n                \n                        Loads calorie intake goals from the database and updates the 'calorieIntake' signal.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadGoals\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadGoals()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/goals.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Loads goals from the database and updates the 'goals' signal.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateGoal\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateGoal(id: number, amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/goals.service.ts:79\n                        \n                    \n\n\n            \n                \n                        Updates a goal item from the database by goalProgress and ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the goal item.\n\n\n                                            \n                                        \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                Promise with the result of the query.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        calorieIntake\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(([]))\n                    \n                \n                    \n                        \n                                Defined in src/app/services/goals.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        goals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(([]))\n                    \n                \n                    \n                        \n                                Defined in src/app/services/goals.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        db\n                    \n                \n\n                \n                    \n                        getdb()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/goals.service.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, WritableSignal, signal } from '@angular/core';\n\nimport { CapacitorSQLite, SQLiteConnection, SQLiteDBConnection } from '@capacitor-community/sqlite';\nimport { DatabaseService } from './database.service';\nimport { Goal } from '../interfaces/goal';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoalsService {\n\n  private goals: WritableSignal = signal(([]));\n\n  private calorieIntake: WritableSignal = signal(([]));\n  constructor(private databaseService: DatabaseService) { }\n\n  private get db(): SQLiteDBConnection {\n    return this.databaseService.getDatabase();\n  }\n\n  /**\n   * Loads goals from the database and updates the 'goals' signal.\n   */\n  async loadGoals(){\n    try {\n      const goals = await this.db.query('SELECT * FROM goals;');\n      this.goals.set(goals.values || []); \n    } \n    catch(error) {\n      console.error('Error occured during goals retrieval'); \n    } \n  }\n  /**\n   * Retrieves the current favourites.\n   * @returns The current state of the 'favs' signal.\n  */\n  getGoals(){\n    return this.goals; \n  }\n\n  /**\n   * Loads goals from the database and updates the 'goals' signal.\n   */\n  async addGoal(goal: Goal): Promise {  \n    // Using parameterized query for safe SQL execution\n    const query = `INSERT INTO Goals (type, goalAmount, goalProgress) VALUES (?, ?, ?)`;\n    const params = [goal.type, goal.goalAmount, 0];\n    try {\n        const result = await this.db.query(query, params);\n        this.loadGoals(); // Function to refresh or reload the goals data\n        return result;\n    } catch (error: any) {\n        console.error('Error adding goal:', error);\n        throw error; // Proper error handling\n    }\n  }\n  /**\n   * Deletes a goal item from the database by its ID.\n   * @param id - The ID of the goal item to delete.\n   * @returns Promise with the result of the query.\n */\n  async deleteGoalById(id: string) {\n    const query = `DELETE FROM goals WHERE id=${id}`;\n  \n    const result = await this.db.query(query); \n  \n    this.loadGoals(); \n  \n    return result; \n  }\n\n  /**\n * Updates a goal item from the database by goalProgress and ID.\n  * @param goalProgress - The amount of progress made on the goal\n  * @param id - The ID of the goal item.\n  * @returns Promise with the result of the query.\n  */\n  async updateGoal(id: number, amount:number){\n    const query = 'UPDATE goals SET goalProgress = ? WHERE id = ?';\n    const params = [amount, id]\n    try {\n      const result = await this.db.query(query, params);\n      this.loadGoals()\n      return result\n    } catch(err) {\n      console.error('There was an error updating the goals', err)\n      throw err\n    }\n  }\n  /**\n   * Loads calorie intake goals from the database and updates the 'calorieIntake' signal.\n   */\n  async loadCalorieIntake(){\n    try {\n      // Query the database to retrieve calorie intake goals\n      const calorieIntake = await this.db.query(\"SELECT * FROM goals WHERE type = 'Calorie Intake';\");\n      \n      // Update the 'calorieIntake' signal with the retrieved data\n      this.calorieIntake.set(calorieIntake.values || []); \n    } catch(error) {\n      console.error('Error occured during goals retrieval'); \n    }\n  }\n\n  /**\n   * Retrieves the current calorie intake goals.\n   * @returns The current state of the 'calorieIntake' signal.\n   */\n  getCalorieIntake(){\n    return this.calorieIntake; \n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Grocery.html":{"url":"interfaces/Grocery.html","title":"interface - Grocery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Grocery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/grocery.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isBought\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isBought\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isBought:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Grocery {\n    // Unique identifier for the grocery item, defined as a number\n    id: Number;\n\n    // Name of the grocery item, represented as a string\n    name: String;\n\n    // Flag indicating if the grocery item is bought (1) or not bought (0), represented as a number\n    isBought: Number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroceryPage.html":{"url":"components/GroceryPage.html","title":"component - GroceryPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroceryPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/grocery/grocery.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-grocery\n            \n\n\n\n            \n                styleUrls\n                ./grocery.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./grocery.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                groceries\n                            \n                            \n                                newGrocery\n                            \n                            \n                                showSuccessMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addToGroceries\n                            \n                            \n                                    Async\n                                deleteGrocery\n                            \n                            \n                                nav\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                randomIdGenerator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(database: DatabaseService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/grocery/grocery.page.ts:25\n                            \n                        \n\n                \n                    \n                            Initializes the component with the DatabaseService and Router.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for database operations.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter for navigation.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addToGroceries\n                        \n                    \n                \n            \n            \n                \n                        \n                    addToGroceries()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/grocery/grocery.page.ts:58\n                        \n                    \n\n\n            \n                \n                        Adds a new grocery item to the database.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteGrocery\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteGrocery(grocery: Grocery)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/grocery/grocery.page.ts:48\n                        \n                    \n\n\n            \n                \n                        Deletes a grocery item from the database.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                grocery\n                                            \n                                                            Grocery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe grocery item to be deleted.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nav\n                        \n                    \n                \n            \n            \n                \nnav(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/grocery/grocery.page.ts:90\n                        \n                    \n\n\n            \n                \n                        Navigates to a specified path.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to navigate to as a string.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/grocery/grocery.page.ts:37\n                        \n                    \n\n\n            \n                \n                        Loads grocery data from the database on initialization.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomIdGenerator\n                        \n                    \n                \n            \n            \n                \nrandomIdGenerator(min: number, max: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/grocery/grocery.page.ts:82\n                        \n                    \n\n\n            \n                \n                        Generates a random number between specified minimum and maximum values.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                min\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe minimum value.\n\n\n                                            \n                                        \n                                        \n                                                max\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe maximum value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Number\n\n                        \n                            \n                                A random number between min and max.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        groceries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grocery/grocery.page.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newGrocery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Grocery\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 0,\n    name: \"\",\n    isBought: 0\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/grocery/grocery.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccessMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/grocery/grocery.page.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, WritableSignal } from '@angular/core';\nimport { DatabaseService } from '../services/database.service';\nimport { Grocery } from '../interfaces/grocery';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-grocery',\n  templateUrl: './grocery.page.html',\n  styleUrls: ['./grocery.page.scss'],\n})\nexport class GroceryPage implements OnInit {\n  //groceries is writable signal arr of groceries\n  //this is a signal between the object here and the db\n  groceries!: WritableSignal; \n\n  //bool that controls the display of success message\n  showSuccessMessage: Boolean = false \n  \n  //grocery ng model, links to front end inputs\n  newGrocery : Grocery = {\n    id: 0,\n    name: \"\",\n    isBought: 0\n  }; \n\n  /**\n   * Initializes the component with the DatabaseService and Router.\n   * @param database - Service for database operations.\n   * @param router - Router for navigation.\n   */\n  constructor(private database: DatabaseService, private router:Router) { }\n\n  /**\n   * Loads grocery data from the database on initialization.\n   */\n  ngOnInit() {\n    //call the sql query to db\n    this.database.loadGrocery(); \n    //load the results and assign to variable\n    this.groceries = this.database.getGrocery(); \n  }\n\n  /**\n   * Deletes a grocery item from the database.\n   * @param grocery - The grocery item to be deleted.\n   */\n  async deleteGrocery(grocery: Grocery) {\n    //wait for their to be response on delete grocery function\n    //takes name and id as its composite primary key\n    await this.database.deleteGroceryByName(grocery.name.toString(), grocery.id.toString()); \n    this.groceries = this.database.getGrocery(); \n  }\n\n  /**\n   * Adds a new grocery item to the database.\n   */\n  async addToGroceries() {\n    //change this to auto increment\n    this.newGrocery.id = this.randomIdGenerator(10000,99999)\n    try {\n      const isSuccess = await this.database.addGrocery(this.newGrocery); //send req to db, await the response\n      if (isSuccess) {\n        this.showSuccessMessage = true; // Display success message\n        this.database.loadGrocery(); ///queries for all groceries from db\n        this.groceries = this.database.getGrocery(); //loads them to object\n        setTimeout(() => {\n          this.showSuccessMessage = false; // Hide success message after a delay\n        }, 1500); // Adjust the delay (in milliseconds) as needed\n      }\n    } catch (error) {\n      console.error('Error adding grocery:', error); // log err if err\n\n    }\n  }\n   /**\n   * Generates a random number between specified minimum and maximum values.\n   * @param min - The minimum value.\n   * @param max - The maximum value.\n   * @returns A random number between min and max.\n   */\n  randomIdGenerator(min:number,max:number) : Number {\n      return Math.random() * (max - min) + min; //returns a number between the min and max\n  }\n\n  /**\n   * Navigates to a specified path.\n   * @param path - The path to navigate to as a string.\n   */\n  nav(path:string){\n    this.router.navigateByUrl('/'+path); //nav by string\n  }\n\n}\n\n    \n\n    \n        \n\n\n   \n    Grocery List\n  \n  \n          \n     \n    \n    \n      \n    \n  \n\n        \n          \n            \n               \n                {{g.name}}\n              \n              \n                \n              \n            \n          \n         \n\n        \n          \n          \n              Grocery Successfully Saved!\n          \n               \n\n    \n    \n\n    \n                \n                    ./grocery.page.scss\n                \n                .goalItem {\n    display: flex;\n    justify-content: space-evenly;\n  }\n  \n.goalContent {\n  display: flex;\n  width:70%; \n  margin-right:auto; \n  h4 {\n      margin-right:10px; \n  }\n}\n.goalActions {\n  display:flex;\n  * {\n      padding:0;\n      margin:0; \n  }\n}\n.addGroceryCont {\n  display:flex;\n  flex-direction:row; \n  width:90%;\n  margin:0 auto; \n  align-items: center;\n}\nion-button,ion-icon {\n  padding:0;\n  margin:0; \n}\nion-button:hover {\n  color:#ffa118;\n  transform: scale(1.05);\n  transition: 0.3s ease-in-out;\n  }\nion-icon {\n color:#FF6700; \n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Grocery List                                                                                                    {{g.name}}                                                                                                                                   Grocery Successfully Saved!                             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FavouriteComponent', 'selector': 'favourite'},{'name': 'FavsPage', 'selector': 'app-favs'},{'name': 'GroceryPage', 'selector': 'app-grocery'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MealResultComponent', 'selector': 'meal-result'},{'name': 'NutrientsPage', 'selector': 'app-nutrients'},{'name': 'ProfileInputPage', 'selector': 'app-profile-input'},{'name': 'RecipePage', 'selector': 'app-recipe'},{'name': 'UpdateGoalModalComponent', 'selector': 'app-update-goal-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroceryPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroceryPageModule.html":{"url":"modules/GroceryPageModule.html","title":"module - GroceryPageModule","body":"\n                   \n\n\n\n\n    Modules\n    GroceryPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GroceryPageModule\n\n\n\ncluster_GroceryPageModule_declarations\n\n\n\ncluster_GroceryPageModule_imports\n\n\n\n\nGroceryPage\n\nGroceryPage\n\n\n\nGroceryPageModule\n\nGroceryPageModule\n\nGroceryPageModule -->\n\nGroceryPage->GroceryPageModule\n\n\n\n\n\nGroceryPageRoutingModule\n\nGroceryPageRoutingModule\n\nGroceryPageModule -->\n\nGroceryPageRoutingModule->GroceryPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nGroceryPageModule -->\n\nSharedModule->GroceryPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/grocery/grocery.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GroceryPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GroceryPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GroceryPageRoutingModule } from './grocery-routing.module';\n\nimport { GroceryPage } from './grocery.page';\n\nimport { SharedModule } from '../modules/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    GroceryPageRoutingModule,\n    SharedModule\n  ],\n  declarations: [GroceryPage]\n})\nexport class GroceryPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroceryPageRoutingModule.html":{"url":"modules/GroceryPageRoutingModule.html","title":"module - GroceryPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    GroceryPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/grocery/grocery-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GroceryPage } from './grocery.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GroceryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class GroceryPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/comps/header/header.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                nav\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/comps/header/header.component.ts:9\n                            \n                        \n\n                \n                    \n                            Initializes the component with the Router.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter for navigation.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        nav\n                        \n                    \n                \n            \n            \n                \nnav(path: String)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/comps/header/header.component.ts:24\n                        \n                    \n\n\n            \n                \n                        Navigates to a specified path.\nUses the path parameter to navigate to the corresponding route.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to navigate to as a string.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/comps/header/header.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent  implements OnInit {\n\n  /**\n   * Initializes the component with the Router.\n   * @param router - Router for navigation.\n   */\n  constructor(private router: Router) { }\n\n  ngOnInit() {}\n\n  /**\n   * Navigates to a specified path.\n   * Uses the path parameter to navigate to the corresponding route.\n   * @param path - The path to navigate to as a string.\n   */\n  nav(path:String) {\n    this.router.navigateByUrl('/'+path);  \n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        Nomster\n      \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @import url('https://fonts.googleapis.com/css2?family=Lilita+One&display=swap');\n@import url('https://fonts.cdnfonts.com/css/margarine');\n@import url('https://fonts.cdnfonts.com/css/better-ground-line');\n$p : 'Lilita One',\nsans-serif;\n$p2 : 'Better Ground Line',\nsans-serif;\n\nion-header {\n    background: radial-gradient(100% 100% at 100% 0%, #ffdc30 0%, #FF6700 100%);\n    padding: 10px;\n    margin: 0;\n}\n\nh3 {\n    font-family: $p;\n}\n\n.header {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    font-family: $p;\n    font-weight: bold;\n    margin: 0;\n    padding: 0;\n\n}\n\n.header img {\n    width: 48px;\n    height: 48px;\n}\n\n.header h1 {\n    font-size: 28px;\n    margin-top:5px;\n}\nion-icon {\n    font-size:xx-large;\n    color:black; \n}\n#filterForm {\n    margin: 0;\n    padding: 0;\n}\n.navBtn, .navBtn2 {\n    width: 90%;\n    margin: auto 5%;\n    display: inline-block;\n    outline: 0;\n    border: 0;\n    cursor: pointer;\n    will-change: box-shadow, transform;\n    background: radial-gradient(100% 100% at 100% 0%, #ffdc30 0%, #FF6700 100%);\n    box-shadow: 0px 2px 4px rgb(45 35 66 / 40%), 0px 7px 13px -3px rgb(45 35 66 / 30%), inset 0px -3px 0px rgb(58 65 111 / 50%);\n    padding: 0 32px;\n    border-radius: 6px;\n    color: #fff;\n    height: 48px;\n    font-size: 18px;\n    text-shadow: 0 1px 0 rgb(0 0 0 / 40%);\n    transition: box-shadow 0.15s ease, transform 0.15s ease;\n\n    &:hover {\n        box-shadow: 0px 4px 8px rgb(45 35 66 / 40%), 0px 7px 13px -3px rgb(45 35 66 / 30%), inset 0px -3px 0px #ffa915;\n        transform: translateY(-2px);\n    }\n\n    &:active {\n        box-shadow: inset 0px 3px 7px #ffa915;\n        transform: translateY(2px);\n    }\n}\n.navBtn2 {\n    width:40px; \n    height:40px; \n    padding:0; \n\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Nomster                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FavouriteComponent', 'selector': 'favourite'},{'name': 'FavsPage', 'selector': 'app-favs'},{'name': 'GroceryPage', 'selector': 'app-grocery'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MealResultComponent', 'selector': 'meal-result'},{'name': 'NutrientsPage', 'selector': 'app-nutrients'},{'name': 'ProfileInputPage', 'selector': 'app-profile-input'},{'name': 'RecipePage', 'selector': 'app-recipe'},{'name': 'UpdateGoalModalComponent', 'selector': 'app-update-goal-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nMealResultComponent\n\nMealResultComponent\n\nHomePageModule -->\n\nMealResultComponent->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHomePageModule -->\n\nSharedModule->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                        \n                            MealResultComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\nimport { MealResultComponent } from '../comps/meal-result/meal-result.component';\nimport { HomePageRoutingModule } from './home-routing.module';\n\nimport { SharedModule } from '../modules/shared/shared.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule,\n    SharedModule\n  ],\n  declarations: [HomePage, MealResultComponent]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calorieIntake\n                            \n                            \n                                groceries\n                            \n                            \n                                newUserName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                nav\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(database: DatabaseService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.page.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for interacting with the database.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter service for navigation.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        nav\n                        \n                    \n                \n            \n            \n                \nnav(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.page.ts:40\n                        \n                    \n\n\n            \n                \n                        Navigates to a specified path.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to navigate to as a string.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.page.ts:31\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that is called after data-bound properties of a directive are initialized.\nLoads the grocery list from the database and assigns it to the 'groceries' property.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calorieIntake\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sessionStorage.getItem('calorieIntake')\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groceries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.page.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newUserName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.page.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DatabaseService } from '../services/database.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n // Property to store the grocery list; type is any\n groceries: any; \n\n // Property to store the new user's name as a string\n newUserName = ''; \n\n // Retrieves and stores the user's calorie intake from session storage\n calorieIntake = sessionStorage.getItem('calorieIntake'); \n\n /**\n  * Constructor for the component.\n  * @param database - Service for interacting with the database.\n  * @param router - Router service for navigation.\n  */\n constructor(private database: DatabaseService, private router: Router) { }\n\n /**\n  * Lifecycle hook that is called after data-bound properties of a directive are initialized.\n  * Loads the grocery list from the database and assigns it to the 'groceries' property.\n  */\n ngOnInit() {\n   this.database.loadGrocery(); \n   this.groceries = this.database.getGrocery(); \n }\n\n /**\n  * Navigates to a specified path.\n  * @param path - The path to navigate to as a string.\n  */\n nav(path: string) {\n   this.router.navigateByUrl('/' + path); \n }\n\n}\n\n    \n\n    \n        \n\n  \n    \n    Welcome Jakey!\n  \n  \n\n  \n    \n    Search Recipes\n  \n  \n    \n    Favourites\n  \n  \n    \n    Grocery List\n  \n  \n    \n    My Goals\n  \n\n\n\n    \n\n    \n                \n                    ./login.page.scss\n                \n                \n.profileOptions {\n    display:flex; \n    flex-direction:column; \n    margin-left:7.5%; \n}\n\n.profileOptionsCont {\n  display:flex;\n  flex-direction: row;\n  align-items:center;\n  ion-icon {\n    align-self:center; \n    font-size:32px !important; \n  }\n}\nion-button:hover {\n  color:#ffa118;\n  transform: scale(1.05);\n  transition: 0.3s ease-in-out;\n}\n.goalItem {\n  display: flex;\n  justify-content: space-evenly;\n}\n\n.goalContent {\n  display: flex;\n  width:70%; \n  margin-right:auto; \n  h4 {\n      margin-right:10px; \n  }\n}\n.goalActions {\n  display:flex;\n  * {\n      padding:0;\n      margin:0; \n  }\n}\n.profilePic {\n  align-self:center;\n  display:flex;\n  flex-direction:column;\n  align-items: center;\n  ion-icon {\n    font-size:128px; \n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Welcome Jakey!              Search Recipes            Favourites            Grocery List            My Goals  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FavouriteComponent', 'selector': 'favourite'},{'name': 'FavsPage', 'selector': 'app-favs'},{'name': 'GroceryPage', 'selector': 'app-grocery'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MealResultComponent', 'selector': 'meal-result'},{'name': 'NutrientsPage', 'selector': 'app-nutrients'},{'name': 'ProfileInputPage', 'selector': 'app-profile-input'},{'name': 'RecipePage', 'selector': 'app-recipe'},{'name': 'UpdateGoalModalComponent', 'selector': 'app-update-goal-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageModule.html":{"url":"modules/LoginPageModule.html","title":"module - LoginPageModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_imports\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLoginPageModule -->\n\nSharedModule->LoginPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/login/login.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoginPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\nimport { SharedModule } from '../modules/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    SharedModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageRoutingModule.html":{"url":"modules/LoginPageRoutingModule.html","title":"module - LoginPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/login/login-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Meal.html":{"url":"interfaces/Meal.html","title":"interface - Meal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Meal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/meal.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cals\n                                        \n                                \n                                \n                                        \n                                            carbs\n                                        \n                                \n                                \n                                        \n                                            diet\n                                        \n                                \n                                \n                                        \n                                            fat\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            protein\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cals:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        carbs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        carbs:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        diet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        diet:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fat:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        protein\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        protein:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Meal {\n    // Unique identifier for the meal, defined as a number\n    id: number;\n\n    // Title of the meal, represented as a string\n    title: String;\n\n    // Total caloric content of the meal, represented as a string\n    cals: String;\n\n    // Total carbohydrate content of the meal, represented as a string\n    carbs: String;\n\n    // Total protein content of the meal, represented as a string\n    protein: String;\n\n    // Total fat content of the meal, represented as a string\n    fat: String;\n\n    // Dietary information for the meal, can be of any type\n    diet: any;\n\n    // Link to an image of the meal\n    image: String;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MealResultComponent.html":{"url":"components/MealResultComponent.html","title":"component - MealResultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MealResultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/comps/meal-result/meal-result.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                meal-result\n            \n\n\n\n            \n                styleUrls\n                ./meal-result.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./meal-result.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                recipeNav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cals\n                            \n                            \n                                carbs\n                            \n                            \n                                fat\n                            \n                            \n                                id\n                            \n                            \n                                image\n                            \n                            \n                                protein\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/comps/meal-result/meal-result.component.ts:18\n                            \n                        \n\n                \n                    \n                            Initializes the component with the Router.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter for navigation.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cals\n                    \n                \n                \n                    \n                        Type :         String\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/comps/meal-result/meal-result.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        carbs\n                    \n                \n                \n                    \n                        Type :         String\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/comps/meal-result/meal-result.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fat\n                    \n                \n                \n                    \n                        Type :         String\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/comps/meal-result/meal-result.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         Number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/comps/meal-result/meal-result.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        image\n                    \n                \n                \n                    \n                        Type :         String\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/comps/meal-result/meal-result.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        protein\n                    \n                \n                \n                    \n                        Type :         String\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/comps/meal-result/meal-result.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         String\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/comps/meal-result/meal-result.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/comps/meal-result/meal-result.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipeNav\n                        \n                    \n                \n            \n            \n                \nrecipeNav(id: Number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/comps/meal-result/meal-result.component.ts:33\n                        \n                    \n\n\n            \n                \n                        Navigates to the recipe details page based on the recipe ID.\nFacilitates specific API requests for detailed recipe information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe unique identifier of the recipe.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'meal-result',\n  templateUrl: './meal-result.component.html',\n  styleUrls: ['./meal-result.component.scss'],\n})\nexport class MealResultComponent  implements OnInit {\n   // Inputs for various nutritional and recipe details\n   @Input() carbs!: String;\n   @Input() cals!: String;\n   @Input() fat!: String;\n   @Input() protein!: String;\n   @Input() id!: Number;\n   @Input() image!: String;\n   @Input() title!: String;\n \n  /**\n  * Initializes the component with the Router.\n  * @param router - Router for navigation.\n  */\n  constructor(private router: Router) { }\n\n  ngOnInit() {}\n\n  /**\n   * Navigates to the recipe details page based on the recipe ID.\n   * Facilitates specific API requests for detailed recipe information.\n   * @param id - The unique identifier of the recipe.\n   */\n  recipeNav(id:Number){\n    this.router.navigateByUrl('/recipe/'+id, {replaceUrl:true}); \n  }\n\n}\n\n    \n\n    \n             \n      \n        \n          {{title}}\n        \n        \n          {{cals}}kcals\n        \n      \n\n      \n      \n        \n          {{carbs}} g \n          Carbs\n        \n        \n          {{fat}} g \n          Fat\n        \n        \n          {{protein}} g \n          Protein\n        \n      \n      \n    \n\n    \n                \n                    ./meal-result.component.scss\n                \n                @import url('https://fonts.cdnfonts.com/css/space-grotesk');\n@import url('https://fonts.cdnfonts.com/css/margarine');\n@import url('https://fonts.cdnfonts.com/css/better-ground-line');\n$p: 'Space Grotesk', sans-serif;\n$p2: 'Better Ground Line', sans-serif;\n\nion-content {\n  --background: rgb(248, 248, 248);\n}\n\n/* RECIPE CARD STYLING */\n.titles {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n}\n\n.titles div {\n  display: flex;\n  flex-direction: row;\n}\n\n.titles h3 {\n  font-weight: bold;\n  font-family: 'Space Grotesk', sans-serif;\n  margin: 0;\n}\n\n.rTitle {\n  width: 62.5%;\n}\n\n.cals {\n  width:32.5%;\n}\n\n\n.cals p {\n  font-size: 28px;\n  font-weight: bold;\n  z-index: 2;\n  color: black;\n  font-family: $p;\n  margin: 0px;\n}\n\n.cals i {\n  font-size: 18px;\n  color: black;\n  font-family: $p;\n}\n\n.recipeBox {\n  display: flex;\n  flex-direction: column;\n  width: 97.5%;\n  margin: 5px auto 5px;\n  padding: 2.5%;\n}\n\n.rImg {\n  margin-top: 10px;\n  display: inline-block;\n  align-self: center;\n  background: gray;\n  border-radius: 15px;\n  box-shadow: 0 0 10px black;\n  transition: 200ms ease-in-out;\n  width:100%; \n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 0 10px #FF6700;\n    scale: 1.05;\n  }\n}\n\n.rInfo span {\n  font-family: $p;\n  font-weight:bold; \n  font-size:large; \n}\n\n.cpf {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  margin-top: -25px;\n  pointer-events: none;\n  z-index: 2;\n}\n\n.nutrient {\n  display: inline;\n  border-radius: 100%;\n  width: 75px;\n  height: 75px;\n  padding: 30% 0 0% 0;\n  font-size: 18px;\n  font-weight: bold;\n  text-align: center;\n  background: radial-gradient(100% 100% at 100% 0%, #ffdc30 0%, #FF6700 100%);\n}\n\n.rInfo {\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                             {{title}}                          {{cals}}kcals                                            {{carbs}} g           Carbs                          {{fat}} g           Fat                          {{protein}} g           Protein                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FavouriteComponent', 'selector': 'favourite'},{'name': 'FavsPage', 'selector': 'app-favs'},{'name': 'GroceryPage', 'selector': 'app-grocery'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MealResultComponent', 'selector': 'meal-result'},{'name': 'NutrientsPage', 'selector': 'app-nutrients'},{'name': 'ProfileInputPage', 'selector': 'app-profile-input'},{'name': 'RecipePage', 'selector': 'app-recipe'},{'name': 'UpdateGoalModalComponent', 'selector': 'app-update-goal-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MealResultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Nutrient.html":{"url":"interfaces/Nutrient.html","title":"interface - Nutrient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Nutrient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/nutrient.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            percentOfDailyNeeds\n                                        \n                                \n                                \n                                        \n                                            unit\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percentOfDailyNeeds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        percentOfDailyNeeds:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Nutrient {\n    // Name of the nutrient, represented as a string\n    name: string;\n\n    // Amount of the nutrient present, represented as a number\n    amount: number;\n\n    // Unit of measurement for the nutrient amount, represented as a string\n    unit: string;\n\n    // Nutrient's contribution to the daily nutritional needs, represented as a percentage\n    percentOfDailyNeeds: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NutrientsPage.html":{"url":"components/NutrientsPage.html","title":"component - NutrientsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NutrientsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/nutrients/nutrients.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nutrients\n            \n\n\n\n            \n                styleUrls\n                ./nutrients.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./nutrients.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calorieIntake\n                            \n                            \n                                calorieRatio\n                            \n                            \n                                id\n                            \n                            \n                                nutrientsArr\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                back\n                            \n                            \n                                getNutrition\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(recipeDetailsGetter: GetRecipeDetailsService, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/nutrients/nutrients.page.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        recipeDetailsGetter\n                                                  \n                                                        \n                                                                        GetRecipeDetailsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to get recipe details.\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nActivatedRoute service to access route parameters.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter service for navigation.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        back\n                        \n                    \n                \n            \n            \n                \nback()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/nutrients/nutrients.page.ts:46\n                        \n                    \n\n\n            \n                \n                        Navigates back to the 'favs' route.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNutrition\n                        \n                    \n                \n            \n            \n                \ngetNutrition(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/nutrients/nutrients.page.ts:54\n                        \n                    \n\n\n            \n                \n                        Fetches nutrition details for a given recipe ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe recipe ID for which nutrition details are to be fetched.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/nutrients/nutrients.page.ts:37\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that is called after data-bound properties of a directive are initialized.\nRetrieves the recipe ID from the route, fetches nutrition details, and logs the nutrients array.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calorieIntake\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Number(sessionStorage.getItem('calorieIntake'))\n                    \n                \n                    \n                        \n                                Defined in src/app/nutrients/nutrients.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calorieRatio\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.calorieIntake / 2000\n                    \n                \n                    \n                        \n                                Defined in src/app/nutrients/nutrients.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/nutrients/nutrients.page.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nutrientsArr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nutrient[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/nutrients/nutrients.page.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { Nutrient } from '../interfaces/nutrient';\nimport { GetRecipeDetailsService } from '../services/get-recipe-details.service';\n\n@Component({\n  selector: 'app-nutrients',\n  templateUrl: './nutrients.page.html',\n  styleUrls: ['./nutrients.page.scss'],\n})\nexport class NutrientsPage implements OnInit {\n// Unique identifier, typically fetched from route parameters.\nid!: number; \n\n// Array to store nutrient details, initially empty.\nnutrientsArr: Nutrient[] = []; \n\n// Retrieves the user's caloric intake from session storage and converts it to a number.\ncalorieIntake = Number(sessionStorage.getItem('calorieIntake')); \n\n// Calculates the ratio of calorie intake to a standard 2000 calorie diet.\ncalorieRatio = this.calorieIntake / 2000;\n\n/**\n * Constructor for the component.\n * @param recipeDetailsGetter - Service to get recipe details.\n * @param route - ActivatedRoute service to access route parameters.\n * @param router - Router service for navigation.\n */\nconstructor(private recipeDetailsGetter: GetRecipeDetailsService, private route: ActivatedRoute, private router: Router) { }\n\n/**\n * Lifecycle hook that is called after data-bound properties of a directive are initialized.\n * Retrieves the recipe ID from the route, fetches nutrition details, and logs the nutrients array.\n */\nngOnInit() {\n  this.id = Number(this.route.snapshot.paramMap.get('id')!);\n  this.getNutrition(this.id);\n  console.log(this.nutrientsArr);\n}\n\n/**\n * Navigates back to the 'favs' route.\n */\nback(): void {\n  this.router.navigateByUrl('/favs', {replaceUrl: true}); \n}\n\n/**\n * Fetches nutrition details for a given recipe ID.\n * @param id - The recipe ID for which nutrition details are to be fetched.\n */\ngetNutrition(id: number) {\n  this.nutrientsArr = []; \n  this.recipeDetailsGetter.getRecipeNutritionDetails(id).subscribe({\n    next: (newNutrients) => {\n      newNutrients.nutrients.forEach((e: { name: any; amount: any; unit: any; percentOfDailyNeeds: any; }) => {\n        let n: Nutrient = {\n          name: e.name,\n          amount: e.amount,\n          unit: e.unit,\n          percentOfDailyNeeds: e.percentOfDailyNeeds\n        };\n        this.nutrientsArr.push(n);\n      });\n      console.log('Successful Fetch');\n    },\n    error: (error) => {\n      console.error('Error fetching nutrition details:', error);\n    }\n  });\n}\n}\n\n    \n\n    \n        \n\n\n  \n    BACK\n      \n        \n          * Percent Daily Values are based on a {{(calorieIntake === 0) ? 2500 : calorieIntake}} calorie diet.\n          Nutrition Facts\n        \n        \n          \n            {{e.name}} {{e.amount}}{{e.unit}}\n            \n            {{(e.percentOfDailyNeeds / calorieRatio) | number:'1.2-2'}}%\n          \n        \n      \n\n\n\n    \n\n    \n                \n                    ./nutrients.page.scss\n                \n                \n\n// NUTRITION MODAL STYLING\n.nutModal {\n    text-align: center;\n    border-radius: 10px;\n    box-shadow: 10px 10px 10px black;\n    padding: 10px;\n    font-size: 18px;\n  }\n  \n  .nutrition-label {\n    font-family: Arial, sans-serif;\n    border: 2px solid #000;\n    max-width: 300px;\n    margin: 0 auto;\n    padding: 10px;\n  }\n  \n  .nHeader {\n    text-align: center;\n    font-weight: bold;\n  }\n  \n  .title {\n    font-size: 20px;\n  }\n  \n  .sub-title {\n    font-size: 16px;\n  }\n  \n  table {\n    width: 100%;\n  }\n  \n  th,\n  td {\n    padding: 5px;\n    text-align: left;\n  }\n  \n  .right-align {\n    text-align: right;\n  }\n  \n  .footnote {\n    font-size: 10px;\n  }\n  \n  tr {\n    border-bottom: 1px solid darkgray;\n  }\n  \n  .bLine {\n    height: 5px;\n    width: 180%;\n    background: black;\n    align-self: center;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      BACK                        * Percent Daily Values are based on a {{(calorieIntake === 0) ? 2500 : calorieIntake}} calorie diet.          Nutrition Facts                                      {{e.name}} {{e.amount}}{{e.unit}}                        {{(e.percentOfDailyNeeds / calorieRatio) | number:\\'1.2-2\\'}}%                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FavouriteComponent', 'selector': 'favourite'},{'name': 'FavsPage', 'selector': 'app-favs'},{'name': 'GroceryPage', 'selector': 'app-grocery'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MealResultComponent', 'selector': 'meal-result'},{'name': 'NutrientsPage', 'selector': 'app-nutrients'},{'name': 'ProfileInputPage', 'selector': 'app-profile-input'},{'name': 'RecipePage', 'selector': 'app-recipe'},{'name': 'UpdateGoalModalComponent', 'selector': 'app-update-goal-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NutrientsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NutrientsPageModule.html":{"url":"modules/NutrientsPageModule.html","title":"module - NutrientsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    NutrientsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NutrientsPageModule\n\n\n\ncluster_NutrientsPageModule_imports\n\n\n\ncluster_NutrientsPageModule_declarations\n\n\n\n\nNutrientsPage\n\nNutrientsPage\n\n\n\nNutrientsPageModule\n\nNutrientsPageModule\n\nNutrientsPageModule -->\n\nNutrientsPage->NutrientsPageModule\n\n\n\n\n\nNutrientsPageRoutingModule\n\nNutrientsPageRoutingModule\n\nNutrientsPageModule -->\n\nNutrientsPageRoutingModule->NutrientsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/nutrients/nutrients.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NutrientsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NutrientsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NutrientsPageRoutingModule } from './nutrients-routing.module';\n\nimport { NutrientsPage } from './nutrients.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NutrientsPageRoutingModule\n  ],\n  declarations: [NutrientsPage]\n})\nexport class NutrientsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NutrientsPageRoutingModule.html":{"url":"modules/NutrientsPageRoutingModule.html","title":"module - NutrientsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    NutrientsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/nutrients/nutrients-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NutrientsPage } from './nutrients.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NutrientsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NutrientsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileInputPage.html":{"url":"components/ProfileInputPage.html","title":"component - ProfileInputPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileInputPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile-input/profile-input.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile-input\n            \n\n\n\n            \n                styleUrls\n                ./profile-input.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile-input.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                goals\n                            \n                            \n                                goalUpdateSuccess\n                            \n                            \n                                modalComponent\n                            \n                            \n                                modalInit\n                            \n                            \n                                newGoal\n                            \n                            \n                                showSuccessMessage\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                back\n                            \n                            \n                                cancel\n                            \n                            \n                                    Async\n                                deleteGoal\n                            \n                            \n                                handleModalData\n                            \n                            \n                                    Async\n                                initGoal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                openModal\n                            \n                            \n                                    Async\n                                sendGoalProgress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, goalsService: GoalsService, modalController: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile-input/profile-input.page.ts:38\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter service for navigation.\n\n\n                                                        \n                                                \n                                                \n                                                        goalsService\n                                                  \n                                                        \n                                                                        GoalsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for handling goals.\n\n\n                                                        \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nController for managing modals.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        back\n                        \n                    \n                \n            \n            \n                \nback()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile-input/profile-input.page.ts:60\n                        \n                    \n\n\n            \n                \n                        Navigates back to the login route.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile-input/profile-input.page.ts:67\n                        \n                    \n\n\n            \n                \n                        Dismisses the currently active modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteGoal\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteGoal(goal: Goal)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile-input/profile-input.page.ts:92\n                        \n                    \n\n\n            \n                \n                        Deletes a goal by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                goal\n                                            \n                                                            Goal\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe goal to be deleted.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleModalData\n                        \n                    \n                \n            \n            \n                \nhandleModalData(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile-input/profile-input.page.ts:137\n                        \n                    \n\n\n            \n                \n                        Handles the data returned from the goal update modal.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data returned from the modal.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initGoal\n                        \n                    \n                \n            \n            \n                \n                        \n                    initGoal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile-input/profile-input.page.ts:74\n                        \n                    \n\n\n            \n                \n                        Initializes a new goal and handles success or error scenarios.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile-input/profile-input.page.ts:52\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that is called after data-bound properties of a directive are initialized.\nLoads goals from the service and assigns them to the 'goals' property.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openModal\n                        \n                    \n                \n            \n            \n                \n                        \n                    openModal(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile-input/profile-input.page.ts:118\n                        \n                    \n\n\n            \n                \n                        Opens a modal for updating goal progress.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the goal for which the modal is opened.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendGoalProgress\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendGoalProgress(id: number, goalAmount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile-input/profile-input.page.ts:101\n                        \n                    \n\n\n            \n                \n                        Sends the updated goal progress to the service.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the goal to be updated.\n\n\n                                            \n                                        \n                                        \n                                                goalAmount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated goal amount.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        goals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile-input/profile-input.page.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goalUpdateSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Boolean()\n                    \n                \n                    \n                        \n                                Defined in src/app/profile-input/profile-input.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalComponent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : UpdateGoalModalComponent\n                    \n                \n                    \n                        \n                                Defined in src/app/profile-input/profile-input.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalInit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/profile-input/profile-input.page.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newGoal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Goal\n\n                    \n                \n                \n                    \n                        Default value : {\n    goalAmount: 0,\n    type: '',\n    goalProgress: 0\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/profile-input/profile-input.page.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccessMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Boolean()\n                    \n                \n                    \n                        \n                                Defined in src/app/profile-input/profile-input.page.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        types\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Carbs Limit', 'Calorie Intake', 'Fat Limit', 'Protein Intake']\n                    \n                \n                    \n                        \n                                Defined in src/app/profile-input/profile-input.page.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit, QueryList, ViewChildren } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GoalsService } from '../services/goals.service';\nimport { Goal } from '../interfaces/goal';\nimport { ModalController } from '@ionic/angular';\nimport { UpdateGoalModalComponent } from '../comps/update-goal-modal/update-goal-modal.component';\n\n\n@Component({\n  selector: 'app-profile-input',\n  templateUrl: './profile-input.page.html',\n  styleUrls: ['./profile-input.page.scss'],\n})\nexport class ProfileInputPage implements OnInit {\n  // Property to store goals; type is any\n  goals: any;\n\n  // Array of goal types for selection\n  types = ['Carbs Limit', 'Calorie Intake', 'Fat Limit', 'Protein Intake'];\n\n  // Object to store a new goal with default values\n  newGoal: Goal = {\n    goalAmount: 0,\n    type: '',\n    goalProgress: 0\n  };\n\n  // Component to be used for the update goal modal\n  modalComponent = UpdateGoalModalComponent;\n\n  // Flag to show or hide the success message\n  showSuccessMessage = Boolean();\n\n  // Flag to indicate if goal update was successful\n  goalUpdateSuccess = Boolean();\n\n  // Flag to initialize the modal\n  modalInit = false;\n\n  /**\n   * Constructor for the component.\n   * @param router - Router service for navigation.\n   * @param goalsService - Service for handling goals.\n   * @param modalController - Controller for managing modals.\n   */\n  constructor(private router: Router, private goalsService: GoalsService, private modalController: ModalController) { }\n\n  /**\n   * Lifecycle hook that is called after data-bound properties of a directive are initialized.\n   * Loads goals from the service and assigns them to the 'goals' property.\n   */\n  ngOnInit() {\n    this.goalsService.loadGoals();\n    this.goals = this.goalsService.getGoals();\n  }\n\n  /**\n   * Navigates back to the login route.\n   */\n  back() {\n    this.router.navigateByUrl('/login');\n  }\n\n  /**\n   * Dismisses the currently active modal.\n   */\n  cancel() {\n    this.modalController.dismiss(null, 'cancel');\n  }\n\n  /**\n   * Initializes a new goal and handles success or error scenarios.\n   */\n  async initGoal() {\n    try {\n      const isSuccess = await this.goalsService.addGoal(this.newGoal);\n      if (isSuccess) {\n        this.showSuccessMessage = true;\n        this.goals = this.goalsService.getGoals();\n        setTimeout(() => this.showSuccessMessage = false, 3000);\n      }\n    } catch (error) {\n      console.error('Error adding goal:', error);\n    }\n    this.cancel();\n  }\n\n  /**\n   * Deletes a goal by its ID.\n   * @param goal - The goal to be deleted.\n   */\n  async deleteGoal(goal: Goal) {\n    this.goalsService.deleteGoalById(goal.id!.toString())\n  }\n\n  /**\n   * Sends the updated goal progress to the service.\n   * @param id - The ID of the goal to be updated.\n   * @param goalAmount - The updated goal amount.\n   */\n  async sendGoalProgress(id: number, goalAmount: number) {\n    try {\n      const isSuccess = await this.goalsService.updateGoal(id, goalAmount);\n      if (isSuccess) {\n        this.goalUpdateSuccess = true;\n        this.goals = this.goalsService.getGoals();\n        setTimeout(() => this.goalUpdateSuccess = false, 1500);\n      }\n    } catch (error) {\n      console.error('Error updating goal:', error);\n    }\n  }\n\n  /**\n   * Opens a modal for updating goal progress.\n   * @param id - The ID of the goal for which the modal is opened.\n   */\n  async openModal(id: number) {\n    const modal = await this.modalController.create({\n      component: UpdateGoalModalComponent,\n      componentProps: { 'id': id }\n    });\n\n    modal.onDidDismiss().then((dataReturned) => {\n      if (dataReturned !== null) {\n        this.handleModalData(dataReturned.data);\n      }\n    });\n\n    return await modal.present();\n  }\n\n  /**\n   * Handles the data returned from the goal update modal.\n   * @param data - The data returned from the modal.\n   */\n  handleModalData(data: any) {\n    console.log(data[0], data[1]);\n    this.sendGoalProgress(Number(data[0]), Number(data[1]));\n  }\n\n}\n\n    \n\n    \n        \n \n  \n    My Goals\n  \n  \n    Add New Goal!\n  \n \n    \n      {{g.type}} : \n      {{g.goalAmount}}\n        {{ g.type === 'Calorie Intake' ? 'kcals' : 'gs' }}\n        \n      \n    \n    \n      \n        \n      \n      \n        \n      \n    \n    \n      \n    \n  \n\n\n  \n    \n       \n        \n          BACK\n        \n        \n          \n            Create a New Goal!\n            Select the goal type and then enter the desired goal amount.\n          \n        \n          \n            \n              \n                {{t}}\n              \n            \n          \n            \n              \n            \n          \n        \n        ADD GOAL\n      \n    \n  \n\n  \n  \n\n\n\n    \n\n    \n                \n                    ./profile-input.page.scss\n                \n                .goalItem {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: nowrap; \n}\n\n.goalContent {\n    font-size:16px; \n    display: flex;\n    width:fit-content; \n    margin-right:auto; \n    flex:1; \n    p {\n        white-space: nowrap;\n    }\n}\n.goalActions {\n    justify-content: right;\n    align-items: center;\n    display:flex;\n    flex:1;\n    max-width:30%;\n    * {\n        padding:0;\n        margin:0; \n    }\n\n}\n\nion-button:hover {\n    color:#ffa118;\n    transform: scale(1.05);\n    transition: 0.3s ease-in-out;\n}\n.barBase {\n    width:100%; \n    height:5px; \n    background-color: gray;\n    border-radius:25px; \n}\n.barProgress {\n    height:5px; \n    background-color: #47e273;\n    border-radius:25px; \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       My Goals        Add New Goal!             {{g.type}} :       {{g.goalAmount}}        {{ g.type === \\'Calorie Intake\\' ? \\'kcals\\' : \\'gs\\' }}                                                                                                                 BACK                                      Create a New Goal!            Select the goal type and then enter the desired goal amount.                                                                      {{t}}                                                                                                    ADD GOAL                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FavouriteComponent', 'selector': 'favourite'},{'name': 'FavsPage', 'selector': 'app-favs'},{'name': 'GroceryPage', 'selector': 'app-grocery'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MealResultComponent', 'selector': 'meal-result'},{'name': 'NutrientsPage', 'selector': 'app-nutrients'},{'name': 'ProfileInputPage', 'selector': 'app-profile-input'},{'name': 'RecipePage', 'selector': 'app-recipe'},{'name': 'UpdateGoalModalComponent', 'selector': 'app-update-goal-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileInputPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileInputPageModule.html":{"url":"modules/ProfileInputPageModule.html","title":"module - ProfileInputPageModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileInputPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileInputPageModule\n\n\n\ncluster_ProfileInputPageModule_declarations\n\n\n\ncluster_ProfileInputPageModule_imports\n\n\n\n\nProfileInputPage\n\nProfileInputPage\n\n\n\nProfileInputPageModule\n\nProfileInputPageModule\n\nProfileInputPageModule -->\n\nProfileInputPage->ProfileInputPageModule\n\n\n\n\n\nProfileInputPageRoutingModule\n\nProfileInputPageRoutingModule\n\nProfileInputPageModule -->\n\nProfileInputPageRoutingModule->ProfileInputPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nProfileInputPageModule -->\n\nSharedModule->ProfileInputPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile-input/profile-input.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProfileInputPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProfileInputPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SharedModule } from '../modules/shared/shared.module';\n\nimport { ProfileInputPageRoutingModule } from './profile-input-routing.module';\n\nimport { ProfileInputPage } from './profile-input.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProfileInputPageRoutingModule,\n    SharedModule\n  ],\n  declarations: [ProfileInputPage]\n})\nexport class ProfileInputPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileInputPageRoutingModule.html":{"url":"modules/ProfileInputPageRoutingModule.html","title":"module - ProfileInputPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileInputPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile-input/profile-input-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfileInputPage } from './profile-input.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfileInputPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfileInputPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecipePage.html":{"url":"components/RecipePage.html","title":"component - RecipePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RecipePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/recipe/recipe.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recipe\n            \n\n\n\n            \n                styleUrls\n                ./recipe.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./recipe.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                details\n                            \n                            \n                                id\n                            \n                            \n                                image\n                            \n                            \n                                ingredients\n                            \n                            \n                                instructions\n                            \n                            \n                                showSuccessMessage\n                            \n                            \n                                sortedIngredients\n                            \n                            \n                                summary\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addToGroceries\n                            \n                            \n                                formatInstructions\n                            \n                            \n                                getRecipeDetails\n                            \n                            \n                                navHome\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                summaryFormatter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(getter: GetRecipeDetailsService, route: ActivatedRoute, router: Router, database: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/recipe/recipe.page.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        getter\n                                                  \n                                                        \n                                                                        GetRecipeDetailsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to get recipe details.\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nActivatedRoute service to access route parameters.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter service for navigation.\n\n\n                                                        \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to interact with the database.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addToGroceries\n                        \n                    \n                \n            \n            \n                \n                        \n                    addToGroceries(grocery: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/recipe/recipe.page.ts:109\n                        \n                    \n\n\n            \n                \n                        Adds a grocery item to the database and handles the response.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                grocery\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe grocery item to add.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatInstructions\n                        \n                    \n                \n            \n            \n                \nformatInstructions(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/recipe/recipe.page.ts:101\n                        \n                    \n\n\n            \n                \n                        Formats the instructions text by adding breaks before numbers.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe instructions text to format.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The formatted instructions.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRecipeDetails\n                        \n                    \n                \n            \n            \n                \ngetRecipeDetails()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/recipe/recipe.page.ts:58\n                        \n                    \n\n\n            \n                \n                        Fetches recipe details and assigns them to component properties.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navHome\n                        \n                    \n                \n            \n            \n                \nnavHome()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/recipe/recipe.page.ts:80\n                        \n                    \n\n\n            \n                \n                        Navigates to the home route.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/recipe/recipe.page.ts:50\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that is called after data-bound properties of a directive are initialized.\nFetches recipe details based on the recipe ID.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        summaryFormatter\n                        \n                    \n                \n            \n            \n                \nsummaryFormatter(summary: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/recipe/recipe.page.ts:89\n                        \n                    \n\n\n            \n                \n                        Formats the summary by cutting it off after 'minutes'.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                summary\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe summary string to format.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The formatted summary.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/recipe/recipe.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Number()\n                    \n                \n                    \n                        \n                                Defined in src/app/recipe/recipe.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Default value : String('')\n                    \n                \n                    \n                        \n                                Defined in src/app/recipe/recipe.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/recipe/recipe.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        instructions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : String('')\n                    \n                \n                    \n                        \n                                Defined in src/app/recipe/recipe.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccessMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Boolean()\n                    \n                \n                    \n                        \n                                Defined in src/app/recipe/recipe.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortedIngredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/recipe/recipe.page.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        summary\n                        \n                    \n                \n            \n                \n                    \n                        Default value : String('')\n                    \n                \n                    \n                        \n                                Defined in src/app/recipe/recipe.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : String('')\n                    \n                \n                    \n                        \n                                Defined in src/app/recipe/recipe.page.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {GetRecipeDetailsService} from '../services/get-recipe-details.service';\nimport { ActivatedRoute, Data } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { DatabaseService } from '../services/database.service';\nimport { Grocery } from '../interfaces/grocery';\n\n\n\n@Component({\n  selector: 'app-recipe',\n  templateUrl: './recipe.page.html',\n  styleUrls: ['./recipe.page.scss'],\n})\nexport class RecipePage implements OnInit {\n// Property to store the ID of the recipe, initialized to a number\nid = Number(); \n\n// Property to hold recipe details; type is any\ndetails: any;\n\n// String properties to store recipe information\ninstructions = String(''); \nsummary = String('');\nimage = String('');\ntitle = String('');\n\n// Array to store recipe ingredients\ningredients: any[] = []; \n\n// Array to store sorted ingredients; currently unused\nsortedIngredients: any[] = [];\n\n// Flag to show or hide the success message\nshowSuccessMessage = Boolean(); \n\n/**\n * Constructor for the component.\n * @param getter - Service to get recipe details.\n * @param route - ActivatedRoute service to access route parameters.\n * @param router - Router service for navigation.\n * @param database - Service to interact with the database.\n */\nconstructor(private getter: GetRecipeDetailsService, private route: ActivatedRoute, private router: Router, private database: DatabaseService) { }\n\n/**\n * Lifecycle hook that is called after data-bound properties of a directive are initialized.\n * Fetches recipe details based on the recipe ID.\n */\nngOnInit() {\n  this.id = Number(this.route.snapshot.paramMap.get('id')!);\n  this.getRecipeDetails();\n}\n\n/**\n * Fetches recipe details and assigns them to component properties.\n */\ngetRecipeDetails() {\n  this.getter.getRecipeDetails(this.id).subscribe(\n    async (response) => {\n      if (!response.error) {\n        this.instructions = this.formatInstructions(response.instructions);\n        this.summary = this.summaryFormatter(response.summary); \n        this.image = response.image; \n        this.title = response.title; \n        this.ingredients = response.extendedIngredients;  \n      } else {\n        console.error('Error:', response.error); \n      }\n    },\n    (err) => {\n      console.error('Observer got an error:', err);\n    }\n  );\n}\n\n/**\n * Navigates to the home route.\n */\nnavHome() {  \n  this.router.navigateByUrl('/'); \n}\n\n/**\n * Formats the summary by cutting it off after 'minutes'.\n * @param summary - The summary string to format.\n * @returns The formatted summary.\n */\nsummaryFormatter(summary: string) {\n  let cutIndex = summary.search('minutes'); \n  let newSummary = summary.slice(0, cutIndex + 7);\n  console.log(newSummary.length); \n  return newSummary; \n}\n\n/**\n * Formats the instructions text by adding breaks before numbers.\n * @param text - The instructions text to format.\n * @returns The formatted instructions.\n */\nformatInstructions(text: string) {\n  return text.replace(/(\\d+\\.) /g, '$1');\n}\n\n/**\n * Adds a grocery item to the database and handles the response.\n * @param grocery - The grocery item to add.\n */\nasync addToGroceries(grocery: any) {\n  let newGrocery: Grocery = {\n    id: grocery.id,\n    name: grocery.original,\n    isBought: 0\n  };\n  try {\n    const isSuccess = await this.database.addGrocery(newGrocery);\n    if (isSuccess) {\n      this.showSuccessMessage = true;\n      setTimeout(() => this.showSuccessMessage = false, 1000);\n    } else {\n      // Handle cases where addGrocery returns false\n    }\n  } catch (error) {\n    console.error('Error adding grocery:', error);\n  }\n}\n\n}\n\n    \n\n    \n        \n\n\n\n  \n    \n    \n        Grocery Successfully Saved!\n    \n  \n\n  \n    {{title}}\n  \n \n    \n      \n    \n    \n      \n        Ingredients\n        \n          \n            \n               {{ item.original }} \n               \n            \n            \n               {{ ingredients[i + 1].original }} \n              \n            \n          \n          \n          \n        \n      \n    \n   \n    Instructions\n    \n    \n\n  \n\n\n\n\n    \n\n    \n                \n                    ./recipe.page.scss\n                \n                @import url('https://fonts.cdnfonts.com/css/space-grotesk'); \n@import url('https://fonts.cdnfonts.com/css/margarine');\n@import url('https://fonts.cdnfonts.com/css/better-ground-line');\n \n $p : 'Space Grotesk', sans-serif; \n $p2 : 'Better Ground Line', sans-serif;\n $p3 :'Margarine', sans-serif;  \n\n\n\nimg {\n    padding:2.5%;\n    border-radius:15px; \n}\ntd {\n    width: calc(50% - 4.5%); /* Set the width to 50% minus the margin gap */\n    font-family:$p3; \n}\n#container {\n    margin:auto;\n    padding:10px; \n}\nh3 {\n    font-family:$p; \n}\n\n.recipeGrocery {\n    margin-bottom:-30px; \n}\nion-icon {\n    color:#FF6700; \n   }\nion-button {\n    margin:25px auto;\n    margin-right:auto;  \n}\nion-button:hover {\n    color:#ffa118;\n    transform: scale(1.05);\n    transition: 0.3s ease-in-out;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Grocery Successfully Saved!            {{title}}                                   Ingredients                                             {{ item.original }}                                                       {{ ingredients[i + 1].original }}                                                                                  Instructions          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FavouriteComponent', 'selector': 'favourite'},{'name': 'FavsPage', 'selector': 'app-favs'},{'name': 'GroceryPage', 'selector': 'app-grocery'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MealResultComponent', 'selector': 'meal-result'},{'name': 'NutrientsPage', 'selector': 'app-nutrients'},{'name': 'ProfileInputPage', 'selector': 'app-profile-input'},{'name': 'RecipePage', 'selector': 'app-recipe'},{'name': 'UpdateGoalModalComponent', 'selector': 'app-update-goal-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecipePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RecipePageModule.html":{"url":"modules/RecipePageModule.html","title":"module - RecipePageModule","body":"\n                   \n\n\n\n\n    Modules\n    RecipePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RecipePageModule\n\n\n\ncluster_RecipePageModule_declarations\n\n\n\ncluster_RecipePageModule_imports\n\n\n\n\nRecipePage\n\nRecipePage\n\n\n\nRecipePageModule\n\nRecipePageModule\n\nRecipePageModule -->\n\nRecipePage->RecipePageModule\n\n\n\n\n\nRecipePageRoutingModule\n\nRecipePageRoutingModule\n\nRecipePageModule -->\n\nRecipePageRoutingModule->RecipePageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nRecipePageModule -->\n\nSharedModule->RecipePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/recipe/recipe.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RecipePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RecipePageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RecipePageRoutingModule } from './recipe-routing.module';\n\nimport { RecipePage } from './recipe.page';\nimport { SharedModule } from '../modules/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RecipePageRoutingModule,\n    SharedModule\n  ],\n  declarations: [RecipePage]\n})\nexport class RecipePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RecipePageRoutingModule.html":{"url":"modules/RecipePageRoutingModule.html","title":"module - RecipePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    RecipePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/recipe/recipe-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RecipePage } from './recipe.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RecipePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RecipePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nUpdateGoalModalComponent\n\nUpdateGoalModalComponent\n\nSharedModule -->\n\nUpdateGoalModalComponent->SharedModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nUpdateGoalModalComponent \n\nUpdateGoalModalComponent \n\nUpdateGoalModalComponent  -->\n\nSharedModule->UpdateGoalModalComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HeaderComponent\n                        \n                        \n                            UpdateGoalModalComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderComponent\n                        \n                        \n                            UpdateGoalModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from 'src/app/comps/header/header.component';\nimport { UpdateGoalModalComponent } from 'src/app/comps/update-goal-modal/update-goal-modal.component';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [HeaderComponent, UpdateGoalModalComponent],\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule\n  ],\n  exports:[HeaderComponent, UpdateGoalModalComponent]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateGoalModalComponent.html":{"url":"components/UpdateGoalModalComponent.html","title":"component - UpdateGoalModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateGoalModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/comps/update-goal-modal/update-goal-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-goal-modal\n            \n\n\n\n            \n                styleUrls\n                ./update-goal-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./update-goal-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                macro\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalController: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/comps/update-goal-modal/update-goal-modal.component.ts:13\n                            \n                        \n\n                \n                    \n                            Initializes the component with ModalController.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nController for managing modals.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/comps/update-goal-modal/update-goal-modal.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/comps/update-goal-modal/update-goal-modal.component.ts:33\n                        \n                    \n\n\n            \n                \n                        Closes the modal without sending data.\nDismisses the modal with the 'cancel' role and ensures no data update.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/comps/update-goal-modal/update-goal-modal.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendData\n                        \n                    \n                \n            \n            \n                \nsendData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/comps/update-goal-modal/update-goal-modal.component.ts:26\n                        \n                    \n\n\n            \n                \n                        Sends data back from the modal and closes it.\nDismisses the modal with the 'send' role and passes the id and macro data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        macro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/comps/update-goal-modal/update-goal-modal.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\n@Component({\n  selector: 'app-update-goal-modal',\n  templateUrl: './update-goal-modal.component.html',\n  styleUrls: ['./update-goal-modal.component.scss'],\n})\n  //only needs to send data back, so good not to couple\nexport class UpdateGoalModalComponent  implements OnInit {\n  //id is passed in through ng loop of goals\n  @Input() id!: number; \n\n  macro: number = 0; \n  \n  /**\n   * Initializes the component with ModalController.\n   * @param modalController - Controller for managing modals.\n   */\n  constructor(private modalController: ModalController) { }\n\n  ngOnInit() {}\n  /**\n   * Sends data back from the modal and closes it.\n   * Dismisses the modal with the 'send' role and passes the id and macro data.\n   */\n  sendData() {\n    this.modalController.dismiss([this.id, this.macro], 'send');\n  }\n  /**\n   * Closes the modal without sending data.\n   * Dismisses the modal with the 'cancel' role and ensures no data update.\n   */\n  cancel() {\n    this.modalController.dismiss(null, 'cancel');\n  }\n}\n\n    \n\n    \n         \nBACK\n\n  \n    Update Macro Progress\n    Enter the macro amount to update your progress\n  \n\n  \n    {{id}}\n    \n      \n    \n    \n  \n\nUPDATE\n\n\n    \n\n    \n                \n                    ./update-goal-modal.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' BACK      Update Macro Progress    Enter the macro amount to update your progress        {{id}}                    UPDATE'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FavouriteComponent', 'selector': 'favourite'},{'name': 'FavsPage', 'selector': 'app-favs'},{'name': 'GroceryPage', 'selector': 'app-grocery'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MealResultComponent', 'selector': 'meal-result'},{'name': 'NutrientsPage', 'selector': 'app-nutrients'},{'name': 'ProfileInputPage', 'selector': 'app-profile-input'},{'name': 'RecipePage', 'selector': 'app-recipe'},{'name': 'UpdateGoalModalComponent', 'selector': 'app-update-goal-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdateGoalModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    id:number;\n    name:string;\n    active:number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                capacitor.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/comps/favourite/favourite.component.ts\n            \n            component\n            FavouriteComponent\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/comps/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/comps/meal-result/meal-result.component.ts\n            \n            component\n            MealResultComponent\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/app/comps/update-goal-modal/update-goal-modal.component.ts\n            \n            component\n            UpdateGoalModalComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/favs/favs.page.ts\n            \n            component\n            FavsPage\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/grocery/grocery.page.ts\n            \n            component\n            GroceryPage\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                src/app/home/home.page.ts\n            \n            component\n            HomePage\n            \n                34 %\n                (11/32)\n            \n        \n        \n            \n                \n                src/app/interfaces/favourite.ts\n            \n            interface\n            Favourite\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/interfaces/filter.ts\n            \n            interface\n            Filter\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/interfaces/goal.ts\n            \n            interface\n            Goal\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/grocery.ts\n            \n            interface\n            Grocery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/meal.ts\n            \n            interface\n            Meal\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/interfaces/nutrient.ts\n            \n            interface\n            Nutrient\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/user.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/login/login.page.ts\n            \n            component\n            LoginPage\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/nutrients/nutrients.page.ts\n            \n            component\n            NutrientsPage\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/profile-input/profile-input.page.ts\n            \n            component\n            ProfileInputPage\n            \n                52 %\n                (9/17)\n            \n        \n        \n            \n                \n                src/app/recipe/recipe.page.ts\n            \n            component\n            RecipePage\n            \n                41 %\n                (7/17)\n            \n        \n        \n            \n                \n                src/app/services/database.service.ts\n            \n            injectable\n            DatabaseService\n            \n                48 %\n                (12/25)\n            \n        \n        \n            \n                \n                src/app/services/database.service.ts\n            \n            variable\n            DB_FAVS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/get-recipe-details.service.ts\n            \n            injectable\n            GetRecipeDetailsService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/services/get-recipe.service.ts\n            \n            injectable\n            GetRecipeService\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/services/goals.service.ts\n            \n            injectable\n            GoalsService\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.0.4\n        \n            @angular/common : ^17.0.4\n        \n            @angular/compiler : ^17.0.4\n        \n            @angular/core : ^17.0.4\n        \n            @angular/forms : ^17.0.4\n        \n            @angular/platform-browser : ^17.0.4\n        \n            @angular/platform-browser-dynamic : ^17.0.4\n        \n            @angular/router : ^17.0.4\n        \n            @capacitor-community/sqlite : ^5.4.2-2\n        \n            @capacitor/android : 5.5.0\n        \n            @capacitor/app : 5.0.6\n        \n            @capacitor/core : 5.5.0\n        \n            @capacitor/haptics : 5.0.6\n        \n            @capacitor/keyboard : 5.0.6\n        \n            @capacitor/splash-screen : ^5.0.6\n        \n            @capacitor/status-bar : 5.0.6\n        \n            @ionic/angular : ^7.0.0\n        \n            ionicons : ^7.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.6.2\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_FavsPageModule\n\n\n\ncluster_FavsPageModule_declarations\n\n\n\ncluster_FavsPageModule_imports\n\n\n\ncluster_GroceryPageModule\n\n\n\ncluster_GroceryPageModule_declarations\n\n\n\ncluster_GroceryPageModule_imports\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LoginPageModule_imports\n\n\n\ncluster_NutrientsPageModule\n\n\n\ncluster_NutrientsPageModule_declarations\n\n\n\ncluster_NutrientsPageModule_imports\n\n\n\ncluster_ProfileInputPageModule\n\n\n\ncluster_ProfileInputPageModule_declarations\n\n\n\ncluster_ProfileInputPageModule_imports\n\n\n\ncluster_RecipePageModule\n\n\n\ncluster_RecipePageModule_declarations\n\n\n\ncluster_RecipePageModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nFavouriteComponent\n\nFavouriteComponent\n\n\n\nFavsPageModule\n\nFavsPageModule\n\nFavsPageModule -->\n\nFavouriteComponent->FavsPageModule\n\n\n\n\n\nFavsPage\n\nFavsPage\n\nFavsPageModule -->\n\nFavsPage->FavsPageModule\n\n\n\n\n\nFavsPageRoutingModule\n\nFavsPageRoutingModule\n\nFavsPageModule -->\n\nFavsPageRoutingModule->FavsPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nFavsPageModule -->\n\nSharedModule->FavsPageModule\n\n\n\n\n\nGroceryPageModule\n\nGroceryPageModule\n\nGroceryPageModule -->\n\nSharedModule->GroceryPageModule\n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nSharedModule->HomePageModule\n\n\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nSharedModule->LoginPageModule\n\n\n\n\n\nProfileInputPageModule\n\nProfileInputPageModule\n\nProfileInputPageModule -->\n\nSharedModule->ProfileInputPageModule\n\n\n\n\n\nRecipePageModule\n\nRecipePageModule\n\nRecipePageModule -->\n\nSharedModule->RecipePageModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nUpdateGoalModalComponent \n\nUpdateGoalModalComponent \n\nUpdateGoalModalComponent  -->\n\nSharedModule->UpdateGoalModalComponent \n\n\n\n\n\nGroceryPage\n\nGroceryPage\n\nGroceryPageModule -->\n\nGroceryPage->GroceryPageModule\n\n\n\n\n\nGroceryPageRoutingModule\n\nGroceryPageRoutingModule\n\nGroceryPageModule -->\n\nGroceryPageRoutingModule->GroceryPageModule\n\n\n\n\n\nHomePage\n\nHomePage\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nMealResultComponent\n\nMealResultComponent\n\nHomePageModule -->\n\nMealResultComponent->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\nNutrientsPage\n\nNutrientsPage\n\n\n\nNutrientsPageModule\n\nNutrientsPageModule\n\nNutrientsPageModule -->\n\nNutrientsPage->NutrientsPageModule\n\n\n\n\n\nNutrientsPageRoutingModule\n\nNutrientsPageRoutingModule\n\nNutrientsPageModule -->\n\nNutrientsPageRoutingModule->NutrientsPageModule\n\n\n\n\n\nProfileInputPage\n\nProfileInputPage\n\nProfileInputPageModule -->\n\nProfileInputPage->ProfileInputPageModule\n\n\n\n\n\nProfileInputPageRoutingModule\n\nProfileInputPageRoutingModule\n\nProfileInputPageModule -->\n\nProfileInputPageRoutingModule->ProfileInputPageModule\n\n\n\n\n\nRecipePage\n\nRecipePage\n\nRecipePageModule -->\n\nRecipePage->RecipePageModule\n\n\n\n\n\nRecipePageRoutingModule\n\nRecipePageRoutingModule\n\nRecipePageModule -->\n\nRecipePageRoutingModule->RecipePageModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nUpdateGoalModalComponent\n\nUpdateGoalModalComponent\n\nSharedModule -->\n\nUpdateGoalModalComponent->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        22 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroceryPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroceryPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NutrientsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NutrientsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileInputPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileInputPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RecipePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RecipePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : An Ionic project\n        \n            Homepage : https://ionicframework.com/\n        \n            Author : Ionic Framework\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (capacitor.config.ts)\n                        \n                        \n                            DB_FAVS   (src/.../database.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    capacitor.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CapacitorConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  appId: 'io.ionic.starter',\n  appName: 'nomster',\n  webDir: 'www',\n  server: {\n    androidScheme: 'https'\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/services/database.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DB_FAVS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'favsdb'\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: true,\n    apiKey: \"5820b27af054474c88676c2fae0c1c9d\"\n  }\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n    apiKey: \"5820b27af054474c88676c2fae0c1c9d\"\n  }\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
